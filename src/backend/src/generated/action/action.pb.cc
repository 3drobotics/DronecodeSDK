// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: action/action.proto

#include "action/action.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

extern PROTOBUF_INTERNAL_EXPORT_action_2faction_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ActionResult_action_2faction_2eproto;
namespace mavsdk {
namespace rpc {
namespace action {
class ArmRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ArmRequest> _instance;
} _ArmRequest_default_instance_;
class ArmResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ArmResponse> _instance;
} _ArmResponse_default_instance_;
class DisarmRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DisarmRequest> _instance;
} _DisarmRequest_default_instance_;
class DisarmResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DisarmResponse> _instance;
} _DisarmResponse_default_instance_;
class TakeoffRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TakeoffRequest> _instance;
} _TakeoffRequest_default_instance_;
class TakeoffResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TakeoffResponse> _instance;
} _TakeoffResponse_default_instance_;
class LandRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LandRequest> _instance;
} _LandRequest_default_instance_;
class LandResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LandResponse> _instance;
} _LandResponse_default_instance_;
class RebootRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RebootRequest> _instance;
} _RebootRequest_default_instance_;
class RebootResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RebootResponse> _instance;
} _RebootResponse_default_instance_;
class KillRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<KillRequest> _instance;
} _KillRequest_default_instance_;
class KillResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<KillResponse> _instance;
} _KillResponse_default_instance_;
class ReturnToLaunchRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ReturnToLaunchRequest> _instance;
} _ReturnToLaunchRequest_default_instance_;
class ReturnToLaunchResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ReturnToLaunchResponse> _instance;
} _ReturnToLaunchResponse_default_instance_;
class TransitionToFixedWingRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TransitionToFixedWingRequest> _instance;
} _TransitionToFixedWingRequest_default_instance_;
class TransitionToFixedWingResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TransitionToFixedWingResponse> _instance;
} _TransitionToFixedWingResponse_default_instance_;
class TransitionToMulticopterRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TransitionToMulticopterRequest> _instance;
} _TransitionToMulticopterRequest_default_instance_;
class TransitionToMulticopterResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TransitionToMulticopterResponse> _instance;
} _TransitionToMulticopterResponse_default_instance_;
class GetTakeoffAltitudeRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetTakeoffAltitudeRequest> _instance;
} _GetTakeoffAltitudeRequest_default_instance_;
class GetTakeoffAltitudeResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetTakeoffAltitudeResponse> _instance;
} _GetTakeoffAltitudeResponse_default_instance_;
class SetTakeoffAltitudeRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SetTakeoffAltitudeRequest> _instance;
} _SetTakeoffAltitudeRequest_default_instance_;
class SetTakeoffAltitudeResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SetTakeoffAltitudeResponse> _instance;
} _SetTakeoffAltitudeResponse_default_instance_;
class GetMaximumSpeedRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetMaximumSpeedRequest> _instance;
} _GetMaximumSpeedRequest_default_instance_;
class GetMaximumSpeedResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetMaximumSpeedResponse> _instance;
} _GetMaximumSpeedResponse_default_instance_;
class SetMaximumSpeedRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SetMaximumSpeedRequest> _instance;
} _SetMaximumSpeedRequest_default_instance_;
class SetMaximumSpeedResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SetMaximumSpeedResponse> _instance;
} _SetMaximumSpeedResponse_default_instance_;
class GetReturnToLaunchAltitudeRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetReturnToLaunchAltitudeRequest> _instance;
} _GetReturnToLaunchAltitudeRequest_default_instance_;
class GetReturnToLaunchAltitudeResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetReturnToLaunchAltitudeResponse> _instance;
} _GetReturnToLaunchAltitudeResponse_default_instance_;
class SetReturnToLaunchAltitudeRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SetReturnToLaunchAltitudeRequest> _instance;
} _SetReturnToLaunchAltitudeRequest_default_instance_;
class SetReturnToLaunchAltitudeResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SetReturnToLaunchAltitudeResponse> _instance;
} _SetReturnToLaunchAltitudeResponse_default_instance_;
class ActionResultDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ActionResult> _instance;
} _ActionResult_default_instance_;
}  // namespace action
}  // namespace rpc
}  // namespace mavsdk
static void InitDefaultsArmRequest_action_2faction_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mavsdk::rpc::action::_ArmRequest_default_instance_;
    new (ptr) ::mavsdk::rpc::action::ArmRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mavsdk::rpc::action::ArmRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ArmRequest_action_2faction_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsArmRequest_action_2faction_2eproto}, {}};

static void InitDefaultsArmResponse_action_2faction_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mavsdk::rpc::action::_ArmResponse_default_instance_;
    new (ptr) ::mavsdk::rpc::action::ArmResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mavsdk::rpc::action::ArmResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ArmResponse_action_2faction_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsArmResponse_action_2faction_2eproto}, {
      &scc_info_ActionResult_action_2faction_2eproto.base,}};

static void InitDefaultsDisarmRequest_action_2faction_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mavsdk::rpc::action::_DisarmRequest_default_instance_;
    new (ptr) ::mavsdk::rpc::action::DisarmRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mavsdk::rpc::action::DisarmRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DisarmRequest_action_2faction_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDisarmRequest_action_2faction_2eproto}, {}};

static void InitDefaultsDisarmResponse_action_2faction_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mavsdk::rpc::action::_DisarmResponse_default_instance_;
    new (ptr) ::mavsdk::rpc::action::DisarmResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mavsdk::rpc::action::DisarmResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_DisarmResponse_action_2faction_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsDisarmResponse_action_2faction_2eproto}, {
      &scc_info_ActionResult_action_2faction_2eproto.base,}};

static void InitDefaultsTakeoffRequest_action_2faction_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mavsdk::rpc::action::_TakeoffRequest_default_instance_;
    new (ptr) ::mavsdk::rpc::action::TakeoffRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mavsdk::rpc::action::TakeoffRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_TakeoffRequest_action_2faction_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsTakeoffRequest_action_2faction_2eproto}, {}};

static void InitDefaultsTakeoffResponse_action_2faction_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mavsdk::rpc::action::_TakeoffResponse_default_instance_;
    new (ptr) ::mavsdk::rpc::action::TakeoffResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mavsdk::rpc::action::TakeoffResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_TakeoffResponse_action_2faction_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsTakeoffResponse_action_2faction_2eproto}, {
      &scc_info_ActionResult_action_2faction_2eproto.base,}};

static void InitDefaultsLandRequest_action_2faction_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mavsdk::rpc::action::_LandRequest_default_instance_;
    new (ptr) ::mavsdk::rpc::action::LandRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mavsdk::rpc::action::LandRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_LandRequest_action_2faction_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsLandRequest_action_2faction_2eproto}, {}};

static void InitDefaultsLandResponse_action_2faction_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mavsdk::rpc::action::_LandResponse_default_instance_;
    new (ptr) ::mavsdk::rpc::action::LandResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mavsdk::rpc::action::LandResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_LandResponse_action_2faction_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsLandResponse_action_2faction_2eproto}, {
      &scc_info_ActionResult_action_2faction_2eproto.base,}};

static void InitDefaultsRebootRequest_action_2faction_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mavsdk::rpc::action::_RebootRequest_default_instance_;
    new (ptr) ::mavsdk::rpc::action::RebootRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mavsdk::rpc::action::RebootRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_RebootRequest_action_2faction_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRebootRequest_action_2faction_2eproto}, {}};

static void InitDefaultsRebootResponse_action_2faction_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mavsdk::rpc::action::_RebootResponse_default_instance_;
    new (ptr) ::mavsdk::rpc::action::RebootResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mavsdk::rpc::action::RebootResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_RebootResponse_action_2faction_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsRebootResponse_action_2faction_2eproto}, {
      &scc_info_ActionResult_action_2faction_2eproto.base,}};

static void InitDefaultsKillRequest_action_2faction_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mavsdk::rpc::action::_KillRequest_default_instance_;
    new (ptr) ::mavsdk::rpc::action::KillRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mavsdk::rpc::action::KillRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_KillRequest_action_2faction_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsKillRequest_action_2faction_2eproto}, {}};

static void InitDefaultsKillResponse_action_2faction_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mavsdk::rpc::action::_KillResponse_default_instance_;
    new (ptr) ::mavsdk::rpc::action::KillResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mavsdk::rpc::action::KillResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_KillResponse_action_2faction_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsKillResponse_action_2faction_2eproto}, {
      &scc_info_ActionResult_action_2faction_2eproto.base,}};

static void InitDefaultsReturnToLaunchRequest_action_2faction_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mavsdk::rpc::action::_ReturnToLaunchRequest_default_instance_;
    new (ptr) ::mavsdk::rpc::action::ReturnToLaunchRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mavsdk::rpc::action::ReturnToLaunchRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ReturnToLaunchRequest_action_2faction_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsReturnToLaunchRequest_action_2faction_2eproto}, {}};

static void InitDefaultsReturnToLaunchResponse_action_2faction_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mavsdk::rpc::action::_ReturnToLaunchResponse_default_instance_;
    new (ptr) ::mavsdk::rpc::action::ReturnToLaunchResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mavsdk::rpc::action::ReturnToLaunchResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ReturnToLaunchResponse_action_2faction_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsReturnToLaunchResponse_action_2faction_2eproto}, {
      &scc_info_ActionResult_action_2faction_2eproto.base,}};

static void InitDefaultsTransitionToFixedWingRequest_action_2faction_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mavsdk::rpc::action::_TransitionToFixedWingRequest_default_instance_;
    new (ptr) ::mavsdk::rpc::action::TransitionToFixedWingRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mavsdk::rpc::action::TransitionToFixedWingRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_TransitionToFixedWingRequest_action_2faction_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsTransitionToFixedWingRequest_action_2faction_2eproto}, {}};

static void InitDefaultsTransitionToFixedWingResponse_action_2faction_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mavsdk::rpc::action::_TransitionToFixedWingResponse_default_instance_;
    new (ptr) ::mavsdk::rpc::action::TransitionToFixedWingResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mavsdk::rpc::action::TransitionToFixedWingResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_TransitionToFixedWingResponse_action_2faction_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsTransitionToFixedWingResponse_action_2faction_2eproto}, {
      &scc_info_ActionResult_action_2faction_2eproto.base,}};

static void InitDefaultsTransitionToMulticopterRequest_action_2faction_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mavsdk::rpc::action::_TransitionToMulticopterRequest_default_instance_;
    new (ptr) ::mavsdk::rpc::action::TransitionToMulticopterRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mavsdk::rpc::action::TransitionToMulticopterRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_TransitionToMulticopterRequest_action_2faction_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsTransitionToMulticopterRequest_action_2faction_2eproto}, {}};

static void InitDefaultsTransitionToMulticopterResponse_action_2faction_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mavsdk::rpc::action::_TransitionToMulticopterResponse_default_instance_;
    new (ptr) ::mavsdk::rpc::action::TransitionToMulticopterResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mavsdk::rpc::action::TransitionToMulticopterResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_TransitionToMulticopterResponse_action_2faction_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsTransitionToMulticopterResponse_action_2faction_2eproto}, {
      &scc_info_ActionResult_action_2faction_2eproto.base,}};

static void InitDefaultsGetTakeoffAltitudeRequest_action_2faction_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mavsdk::rpc::action::_GetTakeoffAltitudeRequest_default_instance_;
    new (ptr) ::mavsdk::rpc::action::GetTakeoffAltitudeRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mavsdk::rpc::action::GetTakeoffAltitudeRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GetTakeoffAltitudeRequest_action_2faction_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGetTakeoffAltitudeRequest_action_2faction_2eproto}, {}};

static void InitDefaultsGetTakeoffAltitudeResponse_action_2faction_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mavsdk::rpc::action::_GetTakeoffAltitudeResponse_default_instance_;
    new (ptr) ::mavsdk::rpc::action::GetTakeoffAltitudeResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mavsdk::rpc::action::GetTakeoffAltitudeResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_GetTakeoffAltitudeResponse_action_2faction_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsGetTakeoffAltitudeResponse_action_2faction_2eproto}, {
      &scc_info_ActionResult_action_2faction_2eproto.base,}};

static void InitDefaultsSetTakeoffAltitudeRequest_action_2faction_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mavsdk::rpc::action::_SetTakeoffAltitudeRequest_default_instance_;
    new (ptr) ::mavsdk::rpc::action::SetTakeoffAltitudeRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mavsdk::rpc::action::SetTakeoffAltitudeRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SetTakeoffAltitudeRequest_action_2faction_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSetTakeoffAltitudeRequest_action_2faction_2eproto}, {}};

static void InitDefaultsSetTakeoffAltitudeResponse_action_2faction_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mavsdk::rpc::action::_SetTakeoffAltitudeResponse_default_instance_;
    new (ptr) ::mavsdk::rpc::action::SetTakeoffAltitudeResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mavsdk::rpc::action::SetTakeoffAltitudeResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_SetTakeoffAltitudeResponse_action_2faction_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsSetTakeoffAltitudeResponse_action_2faction_2eproto}, {
      &scc_info_ActionResult_action_2faction_2eproto.base,}};

static void InitDefaultsGetMaximumSpeedRequest_action_2faction_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mavsdk::rpc::action::_GetMaximumSpeedRequest_default_instance_;
    new (ptr) ::mavsdk::rpc::action::GetMaximumSpeedRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mavsdk::rpc::action::GetMaximumSpeedRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GetMaximumSpeedRequest_action_2faction_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGetMaximumSpeedRequest_action_2faction_2eproto}, {}};

static void InitDefaultsGetMaximumSpeedResponse_action_2faction_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mavsdk::rpc::action::_GetMaximumSpeedResponse_default_instance_;
    new (ptr) ::mavsdk::rpc::action::GetMaximumSpeedResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mavsdk::rpc::action::GetMaximumSpeedResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_GetMaximumSpeedResponse_action_2faction_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsGetMaximumSpeedResponse_action_2faction_2eproto}, {
      &scc_info_ActionResult_action_2faction_2eproto.base,}};

static void InitDefaultsSetMaximumSpeedRequest_action_2faction_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mavsdk::rpc::action::_SetMaximumSpeedRequest_default_instance_;
    new (ptr) ::mavsdk::rpc::action::SetMaximumSpeedRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mavsdk::rpc::action::SetMaximumSpeedRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SetMaximumSpeedRequest_action_2faction_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSetMaximumSpeedRequest_action_2faction_2eproto}, {}};

static void InitDefaultsSetMaximumSpeedResponse_action_2faction_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mavsdk::rpc::action::_SetMaximumSpeedResponse_default_instance_;
    new (ptr) ::mavsdk::rpc::action::SetMaximumSpeedResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mavsdk::rpc::action::SetMaximumSpeedResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_SetMaximumSpeedResponse_action_2faction_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsSetMaximumSpeedResponse_action_2faction_2eproto}, {
      &scc_info_ActionResult_action_2faction_2eproto.base,}};

static void InitDefaultsGetReturnToLaunchAltitudeRequest_action_2faction_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mavsdk::rpc::action::_GetReturnToLaunchAltitudeRequest_default_instance_;
    new (ptr) ::mavsdk::rpc::action::GetReturnToLaunchAltitudeRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mavsdk::rpc::action::GetReturnToLaunchAltitudeRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GetReturnToLaunchAltitudeRequest_action_2faction_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGetReturnToLaunchAltitudeRequest_action_2faction_2eproto}, {}};

static void InitDefaultsGetReturnToLaunchAltitudeResponse_action_2faction_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mavsdk::rpc::action::_GetReturnToLaunchAltitudeResponse_default_instance_;
    new (ptr) ::mavsdk::rpc::action::GetReturnToLaunchAltitudeResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mavsdk::rpc::action::GetReturnToLaunchAltitudeResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_GetReturnToLaunchAltitudeResponse_action_2faction_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsGetReturnToLaunchAltitudeResponse_action_2faction_2eproto}, {
      &scc_info_ActionResult_action_2faction_2eproto.base,}};

static void InitDefaultsSetReturnToLaunchAltitudeRequest_action_2faction_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mavsdk::rpc::action::_SetReturnToLaunchAltitudeRequest_default_instance_;
    new (ptr) ::mavsdk::rpc::action::SetReturnToLaunchAltitudeRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mavsdk::rpc::action::SetReturnToLaunchAltitudeRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SetReturnToLaunchAltitudeRequest_action_2faction_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSetReturnToLaunchAltitudeRequest_action_2faction_2eproto}, {}};

static void InitDefaultsSetReturnToLaunchAltitudeResponse_action_2faction_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mavsdk::rpc::action::_SetReturnToLaunchAltitudeResponse_default_instance_;
    new (ptr) ::mavsdk::rpc::action::SetReturnToLaunchAltitudeResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mavsdk::rpc::action::SetReturnToLaunchAltitudeResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_SetReturnToLaunchAltitudeResponse_action_2faction_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsSetReturnToLaunchAltitudeResponse_action_2faction_2eproto}, {
      &scc_info_ActionResult_action_2faction_2eproto.base,}};

static void InitDefaultsActionResult_action_2faction_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mavsdk::rpc::action::_ActionResult_default_instance_;
    new (ptr) ::mavsdk::rpc::action::ActionResult();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mavsdk::rpc::action::ActionResult::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ActionResult_action_2faction_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsActionResult_action_2faction_2eproto}, {}};

void InitDefaults_action_2faction_2eproto() {
  ::google::protobuf::internal::InitSCC(&scc_info_ArmRequest_action_2faction_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ArmResponse_action_2faction_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DisarmRequest_action_2faction_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DisarmResponse_action_2faction_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TakeoffRequest_action_2faction_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TakeoffResponse_action_2faction_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_LandRequest_action_2faction_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_LandResponse_action_2faction_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RebootRequest_action_2faction_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RebootResponse_action_2faction_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_KillRequest_action_2faction_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_KillResponse_action_2faction_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ReturnToLaunchRequest_action_2faction_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ReturnToLaunchResponse_action_2faction_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TransitionToFixedWingRequest_action_2faction_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TransitionToFixedWingResponse_action_2faction_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TransitionToMulticopterRequest_action_2faction_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TransitionToMulticopterResponse_action_2faction_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetTakeoffAltitudeRequest_action_2faction_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetTakeoffAltitudeResponse_action_2faction_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SetTakeoffAltitudeRequest_action_2faction_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SetTakeoffAltitudeResponse_action_2faction_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetMaximumSpeedRequest_action_2faction_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetMaximumSpeedResponse_action_2faction_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SetMaximumSpeedRequest_action_2faction_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SetMaximumSpeedResponse_action_2faction_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetReturnToLaunchAltitudeRequest_action_2faction_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetReturnToLaunchAltitudeResponse_action_2faction_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SetReturnToLaunchAltitudeRequest_action_2faction_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SetReturnToLaunchAltitudeResponse_action_2faction_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ActionResult_action_2faction_2eproto.base);
}

::google::protobuf::Metadata file_level_metadata_action_2faction_2eproto[31];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors_action_2faction_2eproto[1];
constexpr ::google::protobuf::ServiceDescriptor const** file_level_service_descriptors_action_2faction_2eproto = nullptr;

const ::google::protobuf::uint32 TableStruct_action_2faction_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::action::ArmRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::action::ArmResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::action::ArmResponse, action_result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::action::DisarmRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::action::DisarmResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::action::DisarmResponse, action_result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::action::TakeoffRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::action::TakeoffResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::action::TakeoffResponse, action_result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::action::LandRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::action::LandResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::action::LandResponse, action_result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::action::RebootRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::action::RebootResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::action::RebootResponse, action_result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::action::KillRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::action::KillResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::action::KillResponse, action_result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::action::ReturnToLaunchRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::action::ReturnToLaunchResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::action::ReturnToLaunchResponse, action_result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::action::TransitionToFixedWingRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::action::TransitionToFixedWingResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::action::TransitionToFixedWingResponse, action_result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::action::TransitionToMulticopterRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::action::TransitionToMulticopterResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::action::TransitionToMulticopterResponse, action_result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::action::GetTakeoffAltitudeRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::action::GetTakeoffAltitudeResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::action::GetTakeoffAltitudeResponse, action_result_),
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::action::GetTakeoffAltitudeResponse, altitude_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::action::SetTakeoffAltitudeRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::action::SetTakeoffAltitudeRequest, altitude_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::action::SetTakeoffAltitudeResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::action::SetTakeoffAltitudeResponse, action_result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::action::GetMaximumSpeedRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::action::GetMaximumSpeedResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::action::GetMaximumSpeedResponse, action_result_),
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::action::GetMaximumSpeedResponse, speed_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::action::SetMaximumSpeedRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::action::SetMaximumSpeedRequest, speed_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::action::SetMaximumSpeedResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::action::SetMaximumSpeedResponse, action_result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::action::GetReturnToLaunchAltitudeRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::action::GetReturnToLaunchAltitudeResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::action::GetReturnToLaunchAltitudeResponse, action_result_),
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::action::GetReturnToLaunchAltitudeResponse, relative_altitude_m_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::action::SetReturnToLaunchAltitudeRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::action::SetReturnToLaunchAltitudeRequest, relative_altitude_m_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::action::SetReturnToLaunchAltitudeResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::action::SetReturnToLaunchAltitudeResponse, action_result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::action::ActionResult, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::action::ActionResult, result_),
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::action::ActionResult, result_str_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::mavsdk::rpc::action::ArmRequest)},
  { 5, -1, sizeof(::mavsdk::rpc::action::ArmResponse)},
  { 11, -1, sizeof(::mavsdk::rpc::action::DisarmRequest)},
  { 16, -1, sizeof(::mavsdk::rpc::action::DisarmResponse)},
  { 22, -1, sizeof(::mavsdk::rpc::action::TakeoffRequest)},
  { 27, -1, sizeof(::mavsdk::rpc::action::TakeoffResponse)},
  { 33, -1, sizeof(::mavsdk::rpc::action::LandRequest)},
  { 38, -1, sizeof(::mavsdk::rpc::action::LandResponse)},
  { 44, -1, sizeof(::mavsdk::rpc::action::RebootRequest)},
  { 49, -1, sizeof(::mavsdk::rpc::action::RebootResponse)},
  { 55, -1, sizeof(::mavsdk::rpc::action::KillRequest)},
  { 60, -1, sizeof(::mavsdk::rpc::action::KillResponse)},
  { 66, -1, sizeof(::mavsdk::rpc::action::ReturnToLaunchRequest)},
  { 71, -1, sizeof(::mavsdk::rpc::action::ReturnToLaunchResponse)},
  { 77, -1, sizeof(::mavsdk::rpc::action::TransitionToFixedWingRequest)},
  { 82, -1, sizeof(::mavsdk::rpc::action::TransitionToFixedWingResponse)},
  { 88, -1, sizeof(::mavsdk::rpc::action::TransitionToMulticopterRequest)},
  { 93, -1, sizeof(::mavsdk::rpc::action::TransitionToMulticopterResponse)},
  { 99, -1, sizeof(::mavsdk::rpc::action::GetTakeoffAltitudeRequest)},
  { 104, -1, sizeof(::mavsdk::rpc::action::GetTakeoffAltitudeResponse)},
  { 111, -1, sizeof(::mavsdk::rpc::action::SetTakeoffAltitudeRequest)},
  { 117, -1, sizeof(::mavsdk::rpc::action::SetTakeoffAltitudeResponse)},
  { 123, -1, sizeof(::mavsdk::rpc::action::GetMaximumSpeedRequest)},
  { 128, -1, sizeof(::mavsdk::rpc::action::GetMaximumSpeedResponse)},
  { 135, -1, sizeof(::mavsdk::rpc::action::SetMaximumSpeedRequest)},
  { 141, -1, sizeof(::mavsdk::rpc::action::SetMaximumSpeedResponse)},
  { 147, -1, sizeof(::mavsdk::rpc::action::GetReturnToLaunchAltitudeRequest)},
  { 152, -1, sizeof(::mavsdk::rpc::action::GetReturnToLaunchAltitudeResponse)},
  { 159, -1, sizeof(::mavsdk::rpc::action::SetReturnToLaunchAltitudeRequest)},
  { 165, -1, sizeof(::mavsdk::rpc::action::SetReturnToLaunchAltitudeResponse)},
  { 171, -1, sizeof(::mavsdk::rpc::action::ActionResult)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::mavsdk::rpc::action::_ArmRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::mavsdk::rpc::action::_ArmResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::mavsdk::rpc::action::_DisarmRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::mavsdk::rpc::action::_DisarmResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::mavsdk::rpc::action::_TakeoffRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::mavsdk::rpc::action::_TakeoffResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::mavsdk::rpc::action::_LandRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::mavsdk::rpc::action::_LandResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::mavsdk::rpc::action::_RebootRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::mavsdk::rpc::action::_RebootResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::mavsdk::rpc::action::_KillRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::mavsdk::rpc::action::_KillResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::mavsdk::rpc::action::_ReturnToLaunchRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::mavsdk::rpc::action::_ReturnToLaunchResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::mavsdk::rpc::action::_TransitionToFixedWingRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::mavsdk::rpc::action::_TransitionToFixedWingResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::mavsdk::rpc::action::_TransitionToMulticopterRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::mavsdk::rpc::action::_TransitionToMulticopterResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::mavsdk::rpc::action::_GetTakeoffAltitudeRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::mavsdk::rpc::action::_GetTakeoffAltitudeResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::mavsdk::rpc::action::_SetTakeoffAltitudeRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::mavsdk::rpc::action::_SetTakeoffAltitudeResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::mavsdk::rpc::action::_GetMaximumSpeedRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::mavsdk::rpc::action::_GetMaximumSpeedResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::mavsdk::rpc::action::_SetMaximumSpeedRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::mavsdk::rpc::action::_SetMaximumSpeedResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::mavsdk::rpc::action::_GetReturnToLaunchAltitudeRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::mavsdk::rpc::action::_GetReturnToLaunchAltitudeResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::mavsdk::rpc::action::_SetReturnToLaunchAltitudeRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::mavsdk::rpc::action::_SetReturnToLaunchAltitudeResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::mavsdk::rpc::action::_ActionResult_default_instance_),
};

::google::protobuf::internal::AssignDescriptorsTable assign_descriptors_table_action_2faction_2eproto = {
  {}, AddDescriptors_action_2faction_2eproto, "action/action.proto", schemas,
  file_default_instances, TableStruct_action_2faction_2eproto::offsets,
  file_level_metadata_action_2faction_2eproto, 31, file_level_enum_descriptors_action_2faction_2eproto, file_level_service_descriptors_action_2faction_2eproto,
};

const char descriptor_table_protodef_action_2faction_2eproto[] =
  "\n\023action/action.proto\022\021mavsdk.rpc.action"
  "\"\014\n\nArmRequest\"E\n\013ArmResponse\0226\n\raction_"
  "result\030\001 \001(\0132\037.mavsdk.rpc.action.ActionR"
  "esult\"\017\n\rDisarmRequest\"H\n\016DisarmResponse"
  "\0226\n\raction_result\030\001 \001(\0132\037.mavsdk.rpc.act"
  "ion.ActionResult\"\020\n\016TakeoffRequest\"I\n\017Ta"
  "keoffResponse\0226\n\raction_result\030\001 \001(\0132\037.m"
  "avsdk.rpc.action.ActionResult\"\r\n\013LandReq"
  "uest\"F\n\014LandResponse\0226\n\raction_result\030\001 "
  "\001(\0132\037.mavsdk.rpc.action.ActionResult\"\017\n\r"
  "RebootRequest\"H\n\016RebootResponse\0226\n\ractio"
  "n_result\030\001 \001(\0132\037.mavsdk.rpc.action.Actio"
  "nResult\"\r\n\013KillRequest\"F\n\014KillResponse\0226"
  "\n\raction_result\030\001 \001(\0132\037.mavsdk.rpc.actio"
  "n.ActionResult\"\027\n\025ReturnToLaunchRequest\""
  "P\n\026ReturnToLaunchResponse\0226\n\raction_resu"
  "lt\030\001 \001(\0132\037.mavsdk.rpc.action.ActionResul"
  "t\"\036\n\034TransitionToFixedWingRequest\"W\n\035Tra"
  "nsitionToFixedWingResponse\0226\n\raction_res"
  "ult\030\001 \001(\0132\037.mavsdk.rpc.action.ActionResu"
  "lt\" \n\036TransitionToMulticopterRequest\"Y\n\037"
  "TransitionToMulticopterResponse\0226\n\ractio"
  "n_result\030\001 \001(\0132\037.mavsdk.rpc.action.Actio"
  "nResult\"\033\n\031GetTakeoffAltitudeRequest\"f\n\032"
  "GetTakeoffAltitudeResponse\0226\n\raction_res"
  "ult\030\001 \001(\0132\037.mavsdk.rpc.action.ActionResu"
  "lt\022\020\n\010altitude\030\002 \001(\002\"-\n\031SetTakeoffAltitu"
  "deRequest\022\020\n\010altitude\030\001 \001(\002\"T\n\032SetTakeof"
  "fAltitudeResponse\0226\n\raction_result\030\001 \001(\013"
  "2\037.mavsdk.rpc.action.ActionResult\"\030\n\026Get"
  "MaximumSpeedRequest\"`\n\027GetMaximumSpeedRe"
  "sponse\0226\n\raction_result\030\001 \001(\0132\037.mavsdk.r"
  "pc.action.ActionResult\022\r\n\005speed\030\002 \001(\002\"\'\n"
  "\026SetMaximumSpeedRequest\022\r\n\005speed\030\001 \001(\002\"Q"
  "\n\027SetMaximumSpeedResponse\0226\n\raction_resu"
  "lt\030\001 \001(\0132\037.mavsdk.rpc.action.ActionResul"
  "t\"\"\n GetReturnToLaunchAltitudeRequest\"x\n"
  "!GetReturnToLaunchAltitudeResponse\0226\n\rac"
  "tion_result\030\001 \001(\0132\037.mavsdk.rpc.action.Ac"
  "tionResult\022\033\n\023relative_altitude_m\030\002 \001(\002\""
  "\?\n SetReturnToLaunchAltitudeRequest\022\033\n\023r"
  "elative_altitude_m\030\001 \001(\002\"[\n!SetReturnToL"
  "aunchAltitudeResponse\0226\n\raction_result\030\001"
  " \001(\0132\037.mavsdk.rpc.action.ActionResult\"\361\002"
  "\n\014ActionResult\0226\n\006result\030\001 \001(\0162&.mavsdk."
  "rpc.action.ActionResult.Result\022\022\n\nresult"
  "_str\030\002 \001(\t\"\224\002\n\006Result\022\013\n\007UNKNOWN\020\000\022\013\n\007SU"
  "CCESS\020\001\022\r\n\tNO_SYSTEM\020\002\022\024\n\020CONNECTION_ERR"
  "OR\020\003\022\010\n\004BUSY\020\004\022\022\n\016COMMAND_DENIED\020\005\022\'\n#CO"
  "MMAND_DENIED_LANDED_STATE_UNKNOWN\020\006\022\035\n\031C"
  "OMMAND_DENIED_NOT_LANDED\020\007\022\013\n\007TIMEOUT\020\010\022"
  "#\n\037VTOL_TRANSITION_SUPPORT_UNKNOWN\020\t\022\036\n\032"
  "NO_VTOL_TRANSITION_SUPPORT\020\n\022\023\n\017PARAMETE"
  "R_ERROR\020\0132\247\014\n\rActionService\022F\n\003Arm\022\035.mav"
  "sdk.rpc.action.ArmRequest\032\036.mavsdk.rpc.a"
  "ction.ArmResponse\"\000\022O\n\006Disarm\022 .mavsdk.r"
  "pc.action.DisarmRequest\032!.mavsdk.rpc.act"
  "ion.DisarmResponse\"\000\022R\n\007Takeoff\022!.mavsdk"
  ".rpc.action.TakeoffRequest\032\".mavsdk.rpc."
  "action.TakeoffResponse\"\000\022I\n\004Land\022\036.mavsd"
  "k.rpc.action.LandRequest\032\037.mavsdk.rpc.ac"
  "tion.LandResponse\"\000\022O\n\006Reboot\022 .mavsdk.r"
  "pc.action.RebootRequest\032!.mavsdk.rpc.act"
  "ion.RebootResponse\"\000\022I\n\004Kill\022\036.mavsdk.rp"
  "c.action.KillRequest\032\037.mavsdk.rpc.action"
  ".KillResponse\"\000\022g\n\016ReturnToLaunch\022(.mavs"
  "dk.rpc.action.ReturnToLaunchRequest\032).ma"
  "vsdk.rpc.action.ReturnToLaunchResponse\"\000"
  "\022|\n\025TransitionToFixedWing\022/.mavsdk.rpc.a"
  "ction.TransitionToFixedWingRequest\0320.mav"
  "sdk.rpc.action.TransitionToFixedWingResp"
  "onse\"\000\022\202\001\n\027TransitionToMulticopter\0221.mav"
  "sdk.rpc.action.TransitionToMulticopterRe"
  "quest\0322.mavsdk.rpc.action.TransitionToMu"
  "lticopterResponse\"\000\022s\n\022GetTakeoffAltitud"
  "e\022,.mavsdk.rpc.action.GetTakeoffAltitude"
  "Request\032-.mavsdk.rpc.action.GetTakeoffAl"
  "titudeResponse\"\000\022s\n\022SetTakeoffAltitude\022,"
  ".mavsdk.rpc.action.SetTakeoffAltitudeReq"
  "uest\032-.mavsdk.rpc.action.SetTakeoffAltit"
  "udeResponse\"\000\022j\n\017GetMaximumSpeed\022).mavsd"
  "k.rpc.action.GetMaximumSpeedRequest\032*.ma"
  "vsdk.rpc.action.GetMaximumSpeedResponse\""
  "\000\022j\n\017SetMaximumSpeed\022).mavsdk.rpc.action"
  ".SetMaximumSpeedRequest\032*.mavsdk.rpc.act"
  "ion.SetMaximumSpeedResponse\"\000\022\210\001\n\031GetRet"
  "urnToLaunchAltitude\0223.mavsdk.rpc.action."
  "GetReturnToLaunchAltitudeRequest\0324.mavsd"
  "k.rpc.action.GetReturnToLaunchAltitudeRe"
  "sponse\"\000\022\210\001\n\031SetReturnToLaunchAltitude\0223"
  ".mavsdk.rpc.action.SetReturnToLaunchAlti"
  "tudeRequest\0324.mavsdk.rpc.action.SetRetur"
  "nToLaunchAltitudeResponse\"\000B\037\n\020io.mavsdk"
  ".actionB\013ActionProtob\006proto3"
  ;
::google::protobuf::internal::DescriptorTable descriptor_table_action_2faction_2eproto = {
  false, InitDefaults_action_2faction_2eproto, 
  descriptor_table_protodef_action_2faction_2eproto,
  "action/action.proto", &assign_descriptors_table_action_2faction_2eproto, 3748,
};

void AddDescriptors_action_2faction_2eproto() {
  static constexpr ::google::protobuf::internal::InitFunc deps[1] =
  {
  };
 ::google::protobuf::internal::AddDescriptors(&descriptor_table_action_2faction_2eproto, deps, 0);
}

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_action_2faction_2eproto = []() { AddDescriptors_action_2faction_2eproto(); return true; }();
namespace mavsdk {
namespace rpc {
namespace action {
const ::google::protobuf::EnumDescriptor* ActionResult_Result_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&assign_descriptors_table_action_2faction_2eproto);
  return file_level_enum_descriptors_action_2faction_2eproto[0];
}
bool ActionResult_Result_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const ActionResult_Result ActionResult::UNKNOWN;
const ActionResult_Result ActionResult::SUCCESS;
const ActionResult_Result ActionResult::NO_SYSTEM;
const ActionResult_Result ActionResult::CONNECTION_ERROR;
const ActionResult_Result ActionResult::BUSY;
const ActionResult_Result ActionResult::COMMAND_DENIED;
const ActionResult_Result ActionResult::COMMAND_DENIED_LANDED_STATE_UNKNOWN;
const ActionResult_Result ActionResult::COMMAND_DENIED_NOT_LANDED;
const ActionResult_Result ActionResult::TIMEOUT;
const ActionResult_Result ActionResult::VTOL_TRANSITION_SUPPORT_UNKNOWN;
const ActionResult_Result ActionResult::NO_VTOL_TRANSITION_SUPPORT;
const ActionResult_Result ActionResult::PARAMETER_ERROR;
const ActionResult_Result ActionResult::Result_MIN;
const ActionResult_Result ActionResult::Result_MAX;
const int ActionResult::Result_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

void ArmRequest::InitAsDefaultInstance() {
}
class ArmRequest::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ArmRequest::ArmRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:mavsdk.rpc.action.ArmRequest)
}
ArmRequest::ArmRequest(const ArmRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.action.ArmRequest)
}

void ArmRequest::SharedCtor() {
}

ArmRequest::~ArmRequest() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.action.ArmRequest)
  SharedDtor();
}

void ArmRequest::SharedDtor() {
}

void ArmRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ArmRequest& ArmRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ArmRequest_action_2faction_2eproto.base);
  return *internal_default_instance();
}


void ArmRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.action.ArmRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ArmRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ArmRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      default: {
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ArmRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mavsdk.rpc.action.ArmRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:mavsdk.rpc.action.ArmRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mavsdk.rpc.action.ArmRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ArmRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mavsdk.rpc.action.ArmRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:mavsdk.rpc.action.ArmRequest)
}

::google::protobuf::uint8* ArmRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.action.ArmRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.action.ArmRequest)
  return target;
}

size_t ArmRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.action.ArmRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ArmRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mavsdk.rpc.action.ArmRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ArmRequest* source =
      ::google::protobuf::DynamicCastToGenerated<ArmRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mavsdk.rpc.action.ArmRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mavsdk.rpc.action.ArmRequest)
    MergeFrom(*source);
  }
}

void ArmRequest::MergeFrom(const ArmRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.action.ArmRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void ArmRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mavsdk.rpc.action.ArmRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ArmRequest::CopyFrom(const ArmRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.action.ArmRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ArmRequest::IsInitialized() const {
  return true;
}

void ArmRequest::Swap(ArmRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ArmRequest::InternalSwap(ArmRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ArmRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_action_2faction_2eproto);
  return ::file_level_metadata_action_2faction_2eproto[kIndexInFileMessages];
}


// ===================================================================

void ArmResponse::InitAsDefaultInstance() {
  ::mavsdk::rpc::action::_ArmResponse_default_instance_._instance.get_mutable()->action_result_ = const_cast< ::mavsdk::rpc::action::ActionResult*>(
      ::mavsdk::rpc::action::ActionResult::internal_default_instance());
}
class ArmResponse::HasBitSetters {
 public:
  static const ::mavsdk::rpc::action::ActionResult& action_result(const ArmResponse* msg);
};

const ::mavsdk::rpc::action::ActionResult&
ArmResponse::HasBitSetters::action_result(const ArmResponse* msg) {
  return *msg->action_result_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ArmResponse::kActionResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ArmResponse::ArmResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:mavsdk.rpc.action.ArmResponse)
}
ArmResponse::ArmResponse(const ArmResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_action_result()) {
    action_result_ = new ::mavsdk::rpc::action::ActionResult(*from.action_result_);
  } else {
    action_result_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.action.ArmResponse)
}

void ArmResponse::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_ArmResponse_action_2faction_2eproto.base);
  action_result_ = nullptr;
}

ArmResponse::~ArmResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.action.ArmResponse)
  SharedDtor();
}

void ArmResponse::SharedDtor() {
  if (this != internal_default_instance()) delete action_result_;
}

void ArmResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ArmResponse& ArmResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ArmResponse_action_2faction_2eproto.base);
  return *internal_default_instance();
}


void ArmResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.action.ArmResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && action_result_ != nullptr) {
    delete action_result_;
  }
  action_result_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ArmResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ArmResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .mavsdk.rpc.action.ActionResult action_result = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::mavsdk::rpc::action::ActionResult::_InternalParse;
        object = msg->mutable_action_result();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ArmResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mavsdk.rpc.action.ArmResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .mavsdk.rpc.action.ActionResult action_result = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_action_result()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mavsdk.rpc.action.ArmResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mavsdk.rpc.action.ArmResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ArmResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mavsdk.rpc.action.ArmResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .mavsdk.rpc.action.ActionResult action_result = 1;
  if (this->has_action_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::action_result(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:mavsdk.rpc.action.ArmResponse)
}

::google::protobuf::uint8* ArmResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.action.ArmResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .mavsdk.rpc.action.ActionResult action_result = 1;
  if (this->has_action_result()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::action_result(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.action.ArmResponse)
  return target;
}

size_t ArmResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.action.ArmResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mavsdk.rpc.action.ActionResult action_result = 1;
  if (this->has_action_result()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *action_result_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ArmResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mavsdk.rpc.action.ArmResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ArmResponse* source =
      ::google::protobuf::DynamicCastToGenerated<ArmResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mavsdk.rpc.action.ArmResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mavsdk.rpc.action.ArmResponse)
    MergeFrom(*source);
  }
}

void ArmResponse::MergeFrom(const ArmResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.action.ArmResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_action_result()) {
    mutable_action_result()->::mavsdk::rpc::action::ActionResult::MergeFrom(from.action_result());
  }
}

void ArmResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mavsdk.rpc.action.ArmResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ArmResponse::CopyFrom(const ArmResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.action.ArmResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ArmResponse::IsInitialized() const {
  return true;
}

void ArmResponse::Swap(ArmResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ArmResponse::InternalSwap(ArmResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(action_result_, other->action_result_);
}

::google::protobuf::Metadata ArmResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_action_2faction_2eproto);
  return ::file_level_metadata_action_2faction_2eproto[kIndexInFileMessages];
}


// ===================================================================

void DisarmRequest::InitAsDefaultInstance() {
}
class DisarmRequest::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DisarmRequest::DisarmRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:mavsdk.rpc.action.DisarmRequest)
}
DisarmRequest::DisarmRequest(const DisarmRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.action.DisarmRequest)
}

void DisarmRequest::SharedCtor() {
}

DisarmRequest::~DisarmRequest() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.action.DisarmRequest)
  SharedDtor();
}

void DisarmRequest::SharedDtor() {
}

void DisarmRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DisarmRequest& DisarmRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_DisarmRequest_action_2faction_2eproto.base);
  return *internal_default_instance();
}


void DisarmRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.action.DisarmRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* DisarmRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<DisarmRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      default: {
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool DisarmRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mavsdk.rpc.action.DisarmRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:mavsdk.rpc.action.DisarmRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mavsdk.rpc.action.DisarmRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void DisarmRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mavsdk.rpc.action.DisarmRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:mavsdk.rpc.action.DisarmRequest)
}

::google::protobuf::uint8* DisarmRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.action.DisarmRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.action.DisarmRequest)
  return target;
}

size_t DisarmRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.action.DisarmRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DisarmRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mavsdk.rpc.action.DisarmRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const DisarmRequest* source =
      ::google::protobuf::DynamicCastToGenerated<DisarmRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mavsdk.rpc.action.DisarmRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mavsdk.rpc.action.DisarmRequest)
    MergeFrom(*source);
  }
}

void DisarmRequest::MergeFrom(const DisarmRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.action.DisarmRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void DisarmRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mavsdk.rpc.action.DisarmRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DisarmRequest::CopyFrom(const DisarmRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.action.DisarmRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DisarmRequest::IsInitialized() const {
  return true;
}

void DisarmRequest::Swap(DisarmRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DisarmRequest::InternalSwap(DisarmRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DisarmRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_action_2faction_2eproto);
  return ::file_level_metadata_action_2faction_2eproto[kIndexInFileMessages];
}


// ===================================================================

void DisarmResponse::InitAsDefaultInstance() {
  ::mavsdk::rpc::action::_DisarmResponse_default_instance_._instance.get_mutable()->action_result_ = const_cast< ::mavsdk::rpc::action::ActionResult*>(
      ::mavsdk::rpc::action::ActionResult::internal_default_instance());
}
class DisarmResponse::HasBitSetters {
 public:
  static const ::mavsdk::rpc::action::ActionResult& action_result(const DisarmResponse* msg);
};

const ::mavsdk::rpc::action::ActionResult&
DisarmResponse::HasBitSetters::action_result(const DisarmResponse* msg) {
  return *msg->action_result_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DisarmResponse::kActionResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DisarmResponse::DisarmResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:mavsdk.rpc.action.DisarmResponse)
}
DisarmResponse::DisarmResponse(const DisarmResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_action_result()) {
    action_result_ = new ::mavsdk::rpc::action::ActionResult(*from.action_result_);
  } else {
    action_result_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.action.DisarmResponse)
}

void DisarmResponse::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_DisarmResponse_action_2faction_2eproto.base);
  action_result_ = nullptr;
}

DisarmResponse::~DisarmResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.action.DisarmResponse)
  SharedDtor();
}

void DisarmResponse::SharedDtor() {
  if (this != internal_default_instance()) delete action_result_;
}

void DisarmResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DisarmResponse& DisarmResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_DisarmResponse_action_2faction_2eproto.base);
  return *internal_default_instance();
}


void DisarmResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.action.DisarmResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && action_result_ != nullptr) {
    delete action_result_;
  }
  action_result_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* DisarmResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<DisarmResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .mavsdk.rpc.action.ActionResult action_result = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::mavsdk::rpc::action::ActionResult::_InternalParse;
        object = msg->mutable_action_result();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool DisarmResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mavsdk.rpc.action.DisarmResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .mavsdk.rpc.action.ActionResult action_result = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_action_result()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mavsdk.rpc.action.DisarmResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mavsdk.rpc.action.DisarmResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void DisarmResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mavsdk.rpc.action.DisarmResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .mavsdk.rpc.action.ActionResult action_result = 1;
  if (this->has_action_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::action_result(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:mavsdk.rpc.action.DisarmResponse)
}

::google::protobuf::uint8* DisarmResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.action.DisarmResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .mavsdk.rpc.action.ActionResult action_result = 1;
  if (this->has_action_result()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::action_result(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.action.DisarmResponse)
  return target;
}

size_t DisarmResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.action.DisarmResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mavsdk.rpc.action.ActionResult action_result = 1;
  if (this->has_action_result()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *action_result_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DisarmResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mavsdk.rpc.action.DisarmResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const DisarmResponse* source =
      ::google::protobuf::DynamicCastToGenerated<DisarmResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mavsdk.rpc.action.DisarmResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mavsdk.rpc.action.DisarmResponse)
    MergeFrom(*source);
  }
}

void DisarmResponse::MergeFrom(const DisarmResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.action.DisarmResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_action_result()) {
    mutable_action_result()->::mavsdk::rpc::action::ActionResult::MergeFrom(from.action_result());
  }
}

void DisarmResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mavsdk.rpc.action.DisarmResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DisarmResponse::CopyFrom(const DisarmResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.action.DisarmResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DisarmResponse::IsInitialized() const {
  return true;
}

void DisarmResponse::Swap(DisarmResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DisarmResponse::InternalSwap(DisarmResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(action_result_, other->action_result_);
}

::google::protobuf::Metadata DisarmResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_action_2faction_2eproto);
  return ::file_level_metadata_action_2faction_2eproto[kIndexInFileMessages];
}


// ===================================================================

void TakeoffRequest::InitAsDefaultInstance() {
}
class TakeoffRequest::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TakeoffRequest::TakeoffRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:mavsdk.rpc.action.TakeoffRequest)
}
TakeoffRequest::TakeoffRequest(const TakeoffRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.action.TakeoffRequest)
}

void TakeoffRequest::SharedCtor() {
}

TakeoffRequest::~TakeoffRequest() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.action.TakeoffRequest)
  SharedDtor();
}

void TakeoffRequest::SharedDtor() {
}

void TakeoffRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const TakeoffRequest& TakeoffRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_TakeoffRequest_action_2faction_2eproto.base);
  return *internal_default_instance();
}


void TakeoffRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.action.TakeoffRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* TakeoffRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<TakeoffRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      default: {
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool TakeoffRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mavsdk.rpc.action.TakeoffRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:mavsdk.rpc.action.TakeoffRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mavsdk.rpc.action.TakeoffRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void TakeoffRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mavsdk.rpc.action.TakeoffRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:mavsdk.rpc.action.TakeoffRequest)
}

::google::protobuf::uint8* TakeoffRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.action.TakeoffRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.action.TakeoffRequest)
  return target;
}

size_t TakeoffRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.action.TakeoffRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TakeoffRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mavsdk.rpc.action.TakeoffRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const TakeoffRequest* source =
      ::google::protobuf::DynamicCastToGenerated<TakeoffRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mavsdk.rpc.action.TakeoffRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mavsdk.rpc.action.TakeoffRequest)
    MergeFrom(*source);
  }
}

void TakeoffRequest::MergeFrom(const TakeoffRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.action.TakeoffRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void TakeoffRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mavsdk.rpc.action.TakeoffRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TakeoffRequest::CopyFrom(const TakeoffRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.action.TakeoffRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TakeoffRequest::IsInitialized() const {
  return true;
}

void TakeoffRequest::Swap(TakeoffRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TakeoffRequest::InternalSwap(TakeoffRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata TakeoffRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_action_2faction_2eproto);
  return ::file_level_metadata_action_2faction_2eproto[kIndexInFileMessages];
}


// ===================================================================

void TakeoffResponse::InitAsDefaultInstance() {
  ::mavsdk::rpc::action::_TakeoffResponse_default_instance_._instance.get_mutable()->action_result_ = const_cast< ::mavsdk::rpc::action::ActionResult*>(
      ::mavsdk::rpc::action::ActionResult::internal_default_instance());
}
class TakeoffResponse::HasBitSetters {
 public:
  static const ::mavsdk::rpc::action::ActionResult& action_result(const TakeoffResponse* msg);
};

const ::mavsdk::rpc::action::ActionResult&
TakeoffResponse::HasBitSetters::action_result(const TakeoffResponse* msg) {
  return *msg->action_result_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TakeoffResponse::kActionResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TakeoffResponse::TakeoffResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:mavsdk.rpc.action.TakeoffResponse)
}
TakeoffResponse::TakeoffResponse(const TakeoffResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_action_result()) {
    action_result_ = new ::mavsdk::rpc::action::ActionResult(*from.action_result_);
  } else {
    action_result_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.action.TakeoffResponse)
}

void TakeoffResponse::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_TakeoffResponse_action_2faction_2eproto.base);
  action_result_ = nullptr;
}

TakeoffResponse::~TakeoffResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.action.TakeoffResponse)
  SharedDtor();
}

void TakeoffResponse::SharedDtor() {
  if (this != internal_default_instance()) delete action_result_;
}

void TakeoffResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const TakeoffResponse& TakeoffResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_TakeoffResponse_action_2faction_2eproto.base);
  return *internal_default_instance();
}


void TakeoffResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.action.TakeoffResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && action_result_ != nullptr) {
    delete action_result_;
  }
  action_result_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* TakeoffResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<TakeoffResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .mavsdk.rpc.action.ActionResult action_result = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::mavsdk::rpc::action::ActionResult::_InternalParse;
        object = msg->mutable_action_result();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool TakeoffResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mavsdk.rpc.action.TakeoffResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .mavsdk.rpc.action.ActionResult action_result = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_action_result()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mavsdk.rpc.action.TakeoffResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mavsdk.rpc.action.TakeoffResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void TakeoffResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mavsdk.rpc.action.TakeoffResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .mavsdk.rpc.action.ActionResult action_result = 1;
  if (this->has_action_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::action_result(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:mavsdk.rpc.action.TakeoffResponse)
}

::google::protobuf::uint8* TakeoffResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.action.TakeoffResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .mavsdk.rpc.action.ActionResult action_result = 1;
  if (this->has_action_result()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::action_result(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.action.TakeoffResponse)
  return target;
}

size_t TakeoffResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.action.TakeoffResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mavsdk.rpc.action.ActionResult action_result = 1;
  if (this->has_action_result()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *action_result_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TakeoffResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mavsdk.rpc.action.TakeoffResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const TakeoffResponse* source =
      ::google::protobuf::DynamicCastToGenerated<TakeoffResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mavsdk.rpc.action.TakeoffResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mavsdk.rpc.action.TakeoffResponse)
    MergeFrom(*source);
  }
}

void TakeoffResponse::MergeFrom(const TakeoffResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.action.TakeoffResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_action_result()) {
    mutable_action_result()->::mavsdk::rpc::action::ActionResult::MergeFrom(from.action_result());
  }
}

void TakeoffResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mavsdk.rpc.action.TakeoffResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TakeoffResponse::CopyFrom(const TakeoffResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.action.TakeoffResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TakeoffResponse::IsInitialized() const {
  return true;
}

void TakeoffResponse::Swap(TakeoffResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TakeoffResponse::InternalSwap(TakeoffResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(action_result_, other->action_result_);
}

::google::protobuf::Metadata TakeoffResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_action_2faction_2eproto);
  return ::file_level_metadata_action_2faction_2eproto[kIndexInFileMessages];
}


// ===================================================================

void LandRequest::InitAsDefaultInstance() {
}
class LandRequest::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LandRequest::LandRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:mavsdk.rpc.action.LandRequest)
}
LandRequest::LandRequest(const LandRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.action.LandRequest)
}

void LandRequest::SharedCtor() {
}

LandRequest::~LandRequest() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.action.LandRequest)
  SharedDtor();
}

void LandRequest::SharedDtor() {
}

void LandRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const LandRequest& LandRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_LandRequest_action_2faction_2eproto.base);
  return *internal_default_instance();
}


void LandRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.action.LandRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* LandRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<LandRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      default: {
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool LandRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mavsdk.rpc.action.LandRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:mavsdk.rpc.action.LandRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mavsdk.rpc.action.LandRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void LandRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mavsdk.rpc.action.LandRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:mavsdk.rpc.action.LandRequest)
}

::google::protobuf::uint8* LandRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.action.LandRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.action.LandRequest)
  return target;
}

size_t LandRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.action.LandRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LandRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mavsdk.rpc.action.LandRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const LandRequest* source =
      ::google::protobuf::DynamicCastToGenerated<LandRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mavsdk.rpc.action.LandRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mavsdk.rpc.action.LandRequest)
    MergeFrom(*source);
  }
}

void LandRequest::MergeFrom(const LandRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.action.LandRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void LandRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mavsdk.rpc.action.LandRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LandRequest::CopyFrom(const LandRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.action.LandRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LandRequest::IsInitialized() const {
  return true;
}

void LandRequest::Swap(LandRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LandRequest::InternalSwap(LandRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata LandRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_action_2faction_2eproto);
  return ::file_level_metadata_action_2faction_2eproto[kIndexInFileMessages];
}


// ===================================================================

void LandResponse::InitAsDefaultInstance() {
  ::mavsdk::rpc::action::_LandResponse_default_instance_._instance.get_mutable()->action_result_ = const_cast< ::mavsdk::rpc::action::ActionResult*>(
      ::mavsdk::rpc::action::ActionResult::internal_default_instance());
}
class LandResponse::HasBitSetters {
 public:
  static const ::mavsdk::rpc::action::ActionResult& action_result(const LandResponse* msg);
};

const ::mavsdk::rpc::action::ActionResult&
LandResponse::HasBitSetters::action_result(const LandResponse* msg) {
  return *msg->action_result_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LandResponse::kActionResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LandResponse::LandResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:mavsdk.rpc.action.LandResponse)
}
LandResponse::LandResponse(const LandResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_action_result()) {
    action_result_ = new ::mavsdk::rpc::action::ActionResult(*from.action_result_);
  } else {
    action_result_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.action.LandResponse)
}

void LandResponse::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_LandResponse_action_2faction_2eproto.base);
  action_result_ = nullptr;
}

LandResponse::~LandResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.action.LandResponse)
  SharedDtor();
}

void LandResponse::SharedDtor() {
  if (this != internal_default_instance()) delete action_result_;
}

void LandResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const LandResponse& LandResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_LandResponse_action_2faction_2eproto.base);
  return *internal_default_instance();
}


void LandResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.action.LandResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && action_result_ != nullptr) {
    delete action_result_;
  }
  action_result_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* LandResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<LandResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .mavsdk.rpc.action.ActionResult action_result = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::mavsdk::rpc::action::ActionResult::_InternalParse;
        object = msg->mutable_action_result();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool LandResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mavsdk.rpc.action.LandResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .mavsdk.rpc.action.ActionResult action_result = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_action_result()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mavsdk.rpc.action.LandResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mavsdk.rpc.action.LandResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void LandResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mavsdk.rpc.action.LandResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .mavsdk.rpc.action.ActionResult action_result = 1;
  if (this->has_action_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::action_result(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:mavsdk.rpc.action.LandResponse)
}

::google::protobuf::uint8* LandResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.action.LandResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .mavsdk.rpc.action.ActionResult action_result = 1;
  if (this->has_action_result()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::action_result(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.action.LandResponse)
  return target;
}

size_t LandResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.action.LandResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mavsdk.rpc.action.ActionResult action_result = 1;
  if (this->has_action_result()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *action_result_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LandResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mavsdk.rpc.action.LandResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const LandResponse* source =
      ::google::protobuf::DynamicCastToGenerated<LandResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mavsdk.rpc.action.LandResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mavsdk.rpc.action.LandResponse)
    MergeFrom(*source);
  }
}

void LandResponse::MergeFrom(const LandResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.action.LandResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_action_result()) {
    mutable_action_result()->::mavsdk::rpc::action::ActionResult::MergeFrom(from.action_result());
  }
}

void LandResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mavsdk.rpc.action.LandResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LandResponse::CopyFrom(const LandResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.action.LandResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LandResponse::IsInitialized() const {
  return true;
}

void LandResponse::Swap(LandResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LandResponse::InternalSwap(LandResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(action_result_, other->action_result_);
}

::google::protobuf::Metadata LandResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_action_2faction_2eproto);
  return ::file_level_metadata_action_2faction_2eproto[kIndexInFileMessages];
}


// ===================================================================

void RebootRequest::InitAsDefaultInstance() {
}
class RebootRequest::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RebootRequest::RebootRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:mavsdk.rpc.action.RebootRequest)
}
RebootRequest::RebootRequest(const RebootRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.action.RebootRequest)
}

void RebootRequest::SharedCtor() {
}

RebootRequest::~RebootRequest() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.action.RebootRequest)
  SharedDtor();
}

void RebootRequest::SharedDtor() {
}

void RebootRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RebootRequest& RebootRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_RebootRequest_action_2faction_2eproto.base);
  return *internal_default_instance();
}


void RebootRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.action.RebootRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* RebootRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<RebootRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      default: {
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool RebootRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mavsdk.rpc.action.RebootRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:mavsdk.rpc.action.RebootRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mavsdk.rpc.action.RebootRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void RebootRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mavsdk.rpc.action.RebootRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:mavsdk.rpc.action.RebootRequest)
}

::google::protobuf::uint8* RebootRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.action.RebootRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.action.RebootRequest)
  return target;
}

size_t RebootRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.action.RebootRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RebootRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mavsdk.rpc.action.RebootRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const RebootRequest* source =
      ::google::protobuf::DynamicCastToGenerated<RebootRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mavsdk.rpc.action.RebootRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mavsdk.rpc.action.RebootRequest)
    MergeFrom(*source);
  }
}

void RebootRequest::MergeFrom(const RebootRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.action.RebootRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void RebootRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mavsdk.rpc.action.RebootRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RebootRequest::CopyFrom(const RebootRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.action.RebootRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RebootRequest::IsInitialized() const {
  return true;
}

void RebootRequest::Swap(RebootRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RebootRequest::InternalSwap(RebootRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RebootRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_action_2faction_2eproto);
  return ::file_level_metadata_action_2faction_2eproto[kIndexInFileMessages];
}


// ===================================================================

void RebootResponse::InitAsDefaultInstance() {
  ::mavsdk::rpc::action::_RebootResponse_default_instance_._instance.get_mutable()->action_result_ = const_cast< ::mavsdk::rpc::action::ActionResult*>(
      ::mavsdk::rpc::action::ActionResult::internal_default_instance());
}
class RebootResponse::HasBitSetters {
 public:
  static const ::mavsdk::rpc::action::ActionResult& action_result(const RebootResponse* msg);
};

const ::mavsdk::rpc::action::ActionResult&
RebootResponse::HasBitSetters::action_result(const RebootResponse* msg) {
  return *msg->action_result_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RebootResponse::kActionResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RebootResponse::RebootResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:mavsdk.rpc.action.RebootResponse)
}
RebootResponse::RebootResponse(const RebootResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_action_result()) {
    action_result_ = new ::mavsdk::rpc::action::ActionResult(*from.action_result_);
  } else {
    action_result_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.action.RebootResponse)
}

void RebootResponse::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_RebootResponse_action_2faction_2eproto.base);
  action_result_ = nullptr;
}

RebootResponse::~RebootResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.action.RebootResponse)
  SharedDtor();
}

void RebootResponse::SharedDtor() {
  if (this != internal_default_instance()) delete action_result_;
}

void RebootResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RebootResponse& RebootResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_RebootResponse_action_2faction_2eproto.base);
  return *internal_default_instance();
}


void RebootResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.action.RebootResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && action_result_ != nullptr) {
    delete action_result_;
  }
  action_result_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* RebootResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<RebootResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .mavsdk.rpc.action.ActionResult action_result = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::mavsdk::rpc::action::ActionResult::_InternalParse;
        object = msg->mutable_action_result();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool RebootResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mavsdk.rpc.action.RebootResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .mavsdk.rpc.action.ActionResult action_result = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_action_result()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mavsdk.rpc.action.RebootResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mavsdk.rpc.action.RebootResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void RebootResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mavsdk.rpc.action.RebootResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .mavsdk.rpc.action.ActionResult action_result = 1;
  if (this->has_action_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::action_result(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:mavsdk.rpc.action.RebootResponse)
}

::google::protobuf::uint8* RebootResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.action.RebootResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .mavsdk.rpc.action.ActionResult action_result = 1;
  if (this->has_action_result()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::action_result(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.action.RebootResponse)
  return target;
}

size_t RebootResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.action.RebootResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mavsdk.rpc.action.ActionResult action_result = 1;
  if (this->has_action_result()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *action_result_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RebootResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mavsdk.rpc.action.RebootResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const RebootResponse* source =
      ::google::protobuf::DynamicCastToGenerated<RebootResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mavsdk.rpc.action.RebootResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mavsdk.rpc.action.RebootResponse)
    MergeFrom(*source);
  }
}

void RebootResponse::MergeFrom(const RebootResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.action.RebootResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_action_result()) {
    mutable_action_result()->::mavsdk::rpc::action::ActionResult::MergeFrom(from.action_result());
  }
}

void RebootResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mavsdk.rpc.action.RebootResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RebootResponse::CopyFrom(const RebootResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.action.RebootResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RebootResponse::IsInitialized() const {
  return true;
}

void RebootResponse::Swap(RebootResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RebootResponse::InternalSwap(RebootResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(action_result_, other->action_result_);
}

::google::protobuf::Metadata RebootResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_action_2faction_2eproto);
  return ::file_level_metadata_action_2faction_2eproto[kIndexInFileMessages];
}


// ===================================================================

void KillRequest::InitAsDefaultInstance() {
}
class KillRequest::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

KillRequest::KillRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:mavsdk.rpc.action.KillRequest)
}
KillRequest::KillRequest(const KillRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.action.KillRequest)
}

void KillRequest::SharedCtor() {
}

KillRequest::~KillRequest() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.action.KillRequest)
  SharedDtor();
}

void KillRequest::SharedDtor() {
}

void KillRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const KillRequest& KillRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_KillRequest_action_2faction_2eproto.base);
  return *internal_default_instance();
}


void KillRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.action.KillRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* KillRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<KillRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      default: {
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool KillRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mavsdk.rpc.action.KillRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:mavsdk.rpc.action.KillRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mavsdk.rpc.action.KillRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void KillRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mavsdk.rpc.action.KillRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:mavsdk.rpc.action.KillRequest)
}

::google::protobuf::uint8* KillRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.action.KillRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.action.KillRequest)
  return target;
}

size_t KillRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.action.KillRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void KillRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mavsdk.rpc.action.KillRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const KillRequest* source =
      ::google::protobuf::DynamicCastToGenerated<KillRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mavsdk.rpc.action.KillRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mavsdk.rpc.action.KillRequest)
    MergeFrom(*source);
  }
}

void KillRequest::MergeFrom(const KillRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.action.KillRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void KillRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mavsdk.rpc.action.KillRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void KillRequest::CopyFrom(const KillRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.action.KillRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool KillRequest::IsInitialized() const {
  return true;
}

void KillRequest::Swap(KillRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void KillRequest::InternalSwap(KillRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata KillRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_action_2faction_2eproto);
  return ::file_level_metadata_action_2faction_2eproto[kIndexInFileMessages];
}


// ===================================================================

void KillResponse::InitAsDefaultInstance() {
  ::mavsdk::rpc::action::_KillResponse_default_instance_._instance.get_mutable()->action_result_ = const_cast< ::mavsdk::rpc::action::ActionResult*>(
      ::mavsdk::rpc::action::ActionResult::internal_default_instance());
}
class KillResponse::HasBitSetters {
 public:
  static const ::mavsdk::rpc::action::ActionResult& action_result(const KillResponse* msg);
};

const ::mavsdk::rpc::action::ActionResult&
KillResponse::HasBitSetters::action_result(const KillResponse* msg) {
  return *msg->action_result_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int KillResponse::kActionResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

KillResponse::KillResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:mavsdk.rpc.action.KillResponse)
}
KillResponse::KillResponse(const KillResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_action_result()) {
    action_result_ = new ::mavsdk::rpc::action::ActionResult(*from.action_result_);
  } else {
    action_result_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.action.KillResponse)
}

void KillResponse::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_KillResponse_action_2faction_2eproto.base);
  action_result_ = nullptr;
}

KillResponse::~KillResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.action.KillResponse)
  SharedDtor();
}

void KillResponse::SharedDtor() {
  if (this != internal_default_instance()) delete action_result_;
}

void KillResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const KillResponse& KillResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_KillResponse_action_2faction_2eproto.base);
  return *internal_default_instance();
}


void KillResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.action.KillResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && action_result_ != nullptr) {
    delete action_result_;
  }
  action_result_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* KillResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<KillResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .mavsdk.rpc.action.ActionResult action_result = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::mavsdk::rpc::action::ActionResult::_InternalParse;
        object = msg->mutable_action_result();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool KillResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mavsdk.rpc.action.KillResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .mavsdk.rpc.action.ActionResult action_result = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_action_result()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mavsdk.rpc.action.KillResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mavsdk.rpc.action.KillResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void KillResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mavsdk.rpc.action.KillResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .mavsdk.rpc.action.ActionResult action_result = 1;
  if (this->has_action_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::action_result(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:mavsdk.rpc.action.KillResponse)
}

::google::protobuf::uint8* KillResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.action.KillResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .mavsdk.rpc.action.ActionResult action_result = 1;
  if (this->has_action_result()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::action_result(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.action.KillResponse)
  return target;
}

size_t KillResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.action.KillResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mavsdk.rpc.action.ActionResult action_result = 1;
  if (this->has_action_result()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *action_result_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void KillResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mavsdk.rpc.action.KillResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const KillResponse* source =
      ::google::protobuf::DynamicCastToGenerated<KillResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mavsdk.rpc.action.KillResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mavsdk.rpc.action.KillResponse)
    MergeFrom(*source);
  }
}

void KillResponse::MergeFrom(const KillResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.action.KillResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_action_result()) {
    mutable_action_result()->::mavsdk::rpc::action::ActionResult::MergeFrom(from.action_result());
  }
}

void KillResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mavsdk.rpc.action.KillResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void KillResponse::CopyFrom(const KillResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.action.KillResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool KillResponse::IsInitialized() const {
  return true;
}

void KillResponse::Swap(KillResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void KillResponse::InternalSwap(KillResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(action_result_, other->action_result_);
}

::google::protobuf::Metadata KillResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_action_2faction_2eproto);
  return ::file_level_metadata_action_2faction_2eproto[kIndexInFileMessages];
}


// ===================================================================

void ReturnToLaunchRequest::InitAsDefaultInstance() {
}
class ReturnToLaunchRequest::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReturnToLaunchRequest::ReturnToLaunchRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:mavsdk.rpc.action.ReturnToLaunchRequest)
}
ReturnToLaunchRequest::ReturnToLaunchRequest(const ReturnToLaunchRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.action.ReturnToLaunchRequest)
}

void ReturnToLaunchRequest::SharedCtor() {
}

ReturnToLaunchRequest::~ReturnToLaunchRequest() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.action.ReturnToLaunchRequest)
  SharedDtor();
}

void ReturnToLaunchRequest::SharedDtor() {
}

void ReturnToLaunchRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ReturnToLaunchRequest& ReturnToLaunchRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ReturnToLaunchRequest_action_2faction_2eproto.base);
  return *internal_default_instance();
}


void ReturnToLaunchRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.action.ReturnToLaunchRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ReturnToLaunchRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ReturnToLaunchRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      default: {
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ReturnToLaunchRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mavsdk.rpc.action.ReturnToLaunchRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:mavsdk.rpc.action.ReturnToLaunchRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mavsdk.rpc.action.ReturnToLaunchRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ReturnToLaunchRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mavsdk.rpc.action.ReturnToLaunchRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:mavsdk.rpc.action.ReturnToLaunchRequest)
}

::google::protobuf::uint8* ReturnToLaunchRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.action.ReturnToLaunchRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.action.ReturnToLaunchRequest)
  return target;
}

size_t ReturnToLaunchRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.action.ReturnToLaunchRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ReturnToLaunchRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mavsdk.rpc.action.ReturnToLaunchRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ReturnToLaunchRequest* source =
      ::google::protobuf::DynamicCastToGenerated<ReturnToLaunchRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mavsdk.rpc.action.ReturnToLaunchRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mavsdk.rpc.action.ReturnToLaunchRequest)
    MergeFrom(*source);
  }
}

void ReturnToLaunchRequest::MergeFrom(const ReturnToLaunchRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.action.ReturnToLaunchRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void ReturnToLaunchRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mavsdk.rpc.action.ReturnToLaunchRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReturnToLaunchRequest::CopyFrom(const ReturnToLaunchRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.action.ReturnToLaunchRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReturnToLaunchRequest::IsInitialized() const {
  return true;
}

void ReturnToLaunchRequest::Swap(ReturnToLaunchRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ReturnToLaunchRequest::InternalSwap(ReturnToLaunchRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ReturnToLaunchRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_action_2faction_2eproto);
  return ::file_level_metadata_action_2faction_2eproto[kIndexInFileMessages];
}


// ===================================================================

void ReturnToLaunchResponse::InitAsDefaultInstance() {
  ::mavsdk::rpc::action::_ReturnToLaunchResponse_default_instance_._instance.get_mutable()->action_result_ = const_cast< ::mavsdk::rpc::action::ActionResult*>(
      ::mavsdk::rpc::action::ActionResult::internal_default_instance());
}
class ReturnToLaunchResponse::HasBitSetters {
 public:
  static const ::mavsdk::rpc::action::ActionResult& action_result(const ReturnToLaunchResponse* msg);
};

const ::mavsdk::rpc::action::ActionResult&
ReturnToLaunchResponse::HasBitSetters::action_result(const ReturnToLaunchResponse* msg) {
  return *msg->action_result_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ReturnToLaunchResponse::kActionResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReturnToLaunchResponse::ReturnToLaunchResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:mavsdk.rpc.action.ReturnToLaunchResponse)
}
ReturnToLaunchResponse::ReturnToLaunchResponse(const ReturnToLaunchResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_action_result()) {
    action_result_ = new ::mavsdk::rpc::action::ActionResult(*from.action_result_);
  } else {
    action_result_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.action.ReturnToLaunchResponse)
}

void ReturnToLaunchResponse::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_ReturnToLaunchResponse_action_2faction_2eproto.base);
  action_result_ = nullptr;
}

ReturnToLaunchResponse::~ReturnToLaunchResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.action.ReturnToLaunchResponse)
  SharedDtor();
}

void ReturnToLaunchResponse::SharedDtor() {
  if (this != internal_default_instance()) delete action_result_;
}

void ReturnToLaunchResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ReturnToLaunchResponse& ReturnToLaunchResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ReturnToLaunchResponse_action_2faction_2eproto.base);
  return *internal_default_instance();
}


void ReturnToLaunchResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.action.ReturnToLaunchResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && action_result_ != nullptr) {
    delete action_result_;
  }
  action_result_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ReturnToLaunchResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ReturnToLaunchResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .mavsdk.rpc.action.ActionResult action_result = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::mavsdk::rpc::action::ActionResult::_InternalParse;
        object = msg->mutable_action_result();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ReturnToLaunchResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mavsdk.rpc.action.ReturnToLaunchResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .mavsdk.rpc.action.ActionResult action_result = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_action_result()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mavsdk.rpc.action.ReturnToLaunchResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mavsdk.rpc.action.ReturnToLaunchResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ReturnToLaunchResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mavsdk.rpc.action.ReturnToLaunchResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .mavsdk.rpc.action.ActionResult action_result = 1;
  if (this->has_action_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::action_result(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:mavsdk.rpc.action.ReturnToLaunchResponse)
}

::google::protobuf::uint8* ReturnToLaunchResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.action.ReturnToLaunchResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .mavsdk.rpc.action.ActionResult action_result = 1;
  if (this->has_action_result()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::action_result(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.action.ReturnToLaunchResponse)
  return target;
}

size_t ReturnToLaunchResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.action.ReturnToLaunchResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mavsdk.rpc.action.ActionResult action_result = 1;
  if (this->has_action_result()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *action_result_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ReturnToLaunchResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mavsdk.rpc.action.ReturnToLaunchResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ReturnToLaunchResponse* source =
      ::google::protobuf::DynamicCastToGenerated<ReturnToLaunchResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mavsdk.rpc.action.ReturnToLaunchResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mavsdk.rpc.action.ReturnToLaunchResponse)
    MergeFrom(*source);
  }
}

void ReturnToLaunchResponse::MergeFrom(const ReturnToLaunchResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.action.ReturnToLaunchResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_action_result()) {
    mutable_action_result()->::mavsdk::rpc::action::ActionResult::MergeFrom(from.action_result());
  }
}

void ReturnToLaunchResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mavsdk.rpc.action.ReturnToLaunchResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReturnToLaunchResponse::CopyFrom(const ReturnToLaunchResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.action.ReturnToLaunchResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReturnToLaunchResponse::IsInitialized() const {
  return true;
}

void ReturnToLaunchResponse::Swap(ReturnToLaunchResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ReturnToLaunchResponse::InternalSwap(ReturnToLaunchResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(action_result_, other->action_result_);
}

::google::protobuf::Metadata ReturnToLaunchResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_action_2faction_2eproto);
  return ::file_level_metadata_action_2faction_2eproto[kIndexInFileMessages];
}


// ===================================================================

void TransitionToFixedWingRequest::InitAsDefaultInstance() {
}
class TransitionToFixedWingRequest::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TransitionToFixedWingRequest::TransitionToFixedWingRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:mavsdk.rpc.action.TransitionToFixedWingRequest)
}
TransitionToFixedWingRequest::TransitionToFixedWingRequest(const TransitionToFixedWingRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.action.TransitionToFixedWingRequest)
}

void TransitionToFixedWingRequest::SharedCtor() {
}

TransitionToFixedWingRequest::~TransitionToFixedWingRequest() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.action.TransitionToFixedWingRequest)
  SharedDtor();
}

void TransitionToFixedWingRequest::SharedDtor() {
}

void TransitionToFixedWingRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const TransitionToFixedWingRequest& TransitionToFixedWingRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_TransitionToFixedWingRequest_action_2faction_2eproto.base);
  return *internal_default_instance();
}


void TransitionToFixedWingRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.action.TransitionToFixedWingRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* TransitionToFixedWingRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<TransitionToFixedWingRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      default: {
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool TransitionToFixedWingRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mavsdk.rpc.action.TransitionToFixedWingRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:mavsdk.rpc.action.TransitionToFixedWingRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mavsdk.rpc.action.TransitionToFixedWingRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void TransitionToFixedWingRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mavsdk.rpc.action.TransitionToFixedWingRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:mavsdk.rpc.action.TransitionToFixedWingRequest)
}

::google::protobuf::uint8* TransitionToFixedWingRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.action.TransitionToFixedWingRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.action.TransitionToFixedWingRequest)
  return target;
}

size_t TransitionToFixedWingRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.action.TransitionToFixedWingRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TransitionToFixedWingRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mavsdk.rpc.action.TransitionToFixedWingRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const TransitionToFixedWingRequest* source =
      ::google::protobuf::DynamicCastToGenerated<TransitionToFixedWingRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mavsdk.rpc.action.TransitionToFixedWingRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mavsdk.rpc.action.TransitionToFixedWingRequest)
    MergeFrom(*source);
  }
}

void TransitionToFixedWingRequest::MergeFrom(const TransitionToFixedWingRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.action.TransitionToFixedWingRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void TransitionToFixedWingRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mavsdk.rpc.action.TransitionToFixedWingRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TransitionToFixedWingRequest::CopyFrom(const TransitionToFixedWingRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.action.TransitionToFixedWingRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TransitionToFixedWingRequest::IsInitialized() const {
  return true;
}

void TransitionToFixedWingRequest::Swap(TransitionToFixedWingRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TransitionToFixedWingRequest::InternalSwap(TransitionToFixedWingRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata TransitionToFixedWingRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_action_2faction_2eproto);
  return ::file_level_metadata_action_2faction_2eproto[kIndexInFileMessages];
}


// ===================================================================

void TransitionToFixedWingResponse::InitAsDefaultInstance() {
  ::mavsdk::rpc::action::_TransitionToFixedWingResponse_default_instance_._instance.get_mutable()->action_result_ = const_cast< ::mavsdk::rpc::action::ActionResult*>(
      ::mavsdk::rpc::action::ActionResult::internal_default_instance());
}
class TransitionToFixedWingResponse::HasBitSetters {
 public:
  static const ::mavsdk::rpc::action::ActionResult& action_result(const TransitionToFixedWingResponse* msg);
};

const ::mavsdk::rpc::action::ActionResult&
TransitionToFixedWingResponse::HasBitSetters::action_result(const TransitionToFixedWingResponse* msg) {
  return *msg->action_result_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TransitionToFixedWingResponse::kActionResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TransitionToFixedWingResponse::TransitionToFixedWingResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:mavsdk.rpc.action.TransitionToFixedWingResponse)
}
TransitionToFixedWingResponse::TransitionToFixedWingResponse(const TransitionToFixedWingResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_action_result()) {
    action_result_ = new ::mavsdk::rpc::action::ActionResult(*from.action_result_);
  } else {
    action_result_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.action.TransitionToFixedWingResponse)
}

void TransitionToFixedWingResponse::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_TransitionToFixedWingResponse_action_2faction_2eproto.base);
  action_result_ = nullptr;
}

TransitionToFixedWingResponse::~TransitionToFixedWingResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.action.TransitionToFixedWingResponse)
  SharedDtor();
}

void TransitionToFixedWingResponse::SharedDtor() {
  if (this != internal_default_instance()) delete action_result_;
}

void TransitionToFixedWingResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const TransitionToFixedWingResponse& TransitionToFixedWingResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_TransitionToFixedWingResponse_action_2faction_2eproto.base);
  return *internal_default_instance();
}


void TransitionToFixedWingResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.action.TransitionToFixedWingResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && action_result_ != nullptr) {
    delete action_result_;
  }
  action_result_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* TransitionToFixedWingResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<TransitionToFixedWingResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .mavsdk.rpc.action.ActionResult action_result = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::mavsdk::rpc::action::ActionResult::_InternalParse;
        object = msg->mutable_action_result();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool TransitionToFixedWingResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mavsdk.rpc.action.TransitionToFixedWingResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .mavsdk.rpc.action.ActionResult action_result = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_action_result()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mavsdk.rpc.action.TransitionToFixedWingResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mavsdk.rpc.action.TransitionToFixedWingResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void TransitionToFixedWingResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mavsdk.rpc.action.TransitionToFixedWingResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .mavsdk.rpc.action.ActionResult action_result = 1;
  if (this->has_action_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::action_result(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:mavsdk.rpc.action.TransitionToFixedWingResponse)
}

::google::protobuf::uint8* TransitionToFixedWingResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.action.TransitionToFixedWingResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .mavsdk.rpc.action.ActionResult action_result = 1;
  if (this->has_action_result()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::action_result(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.action.TransitionToFixedWingResponse)
  return target;
}

size_t TransitionToFixedWingResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.action.TransitionToFixedWingResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mavsdk.rpc.action.ActionResult action_result = 1;
  if (this->has_action_result()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *action_result_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TransitionToFixedWingResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mavsdk.rpc.action.TransitionToFixedWingResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const TransitionToFixedWingResponse* source =
      ::google::protobuf::DynamicCastToGenerated<TransitionToFixedWingResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mavsdk.rpc.action.TransitionToFixedWingResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mavsdk.rpc.action.TransitionToFixedWingResponse)
    MergeFrom(*source);
  }
}

void TransitionToFixedWingResponse::MergeFrom(const TransitionToFixedWingResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.action.TransitionToFixedWingResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_action_result()) {
    mutable_action_result()->::mavsdk::rpc::action::ActionResult::MergeFrom(from.action_result());
  }
}

void TransitionToFixedWingResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mavsdk.rpc.action.TransitionToFixedWingResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TransitionToFixedWingResponse::CopyFrom(const TransitionToFixedWingResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.action.TransitionToFixedWingResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TransitionToFixedWingResponse::IsInitialized() const {
  return true;
}

void TransitionToFixedWingResponse::Swap(TransitionToFixedWingResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TransitionToFixedWingResponse::InternalSwap(TransitionToFixedWingResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(action_result_, other->action_result_);
}

::google::protobuf::Metadata TransitionToFixedWingResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_action_2faction_2eproto);
  return ::file_level_metadata_action_2faction_2eproto[kIndexInFileMessages];
}


// ===================================================================

void TransitionToMulticopterRequest::InitAsDefaultInstance() {
}
class TransitionToMulticopterRequest::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TransitionToMulticopterRequest::TransitionToMulticopterRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:mavsdk.rpc.action.TransitionToMulticopterRequest)
}
TransitionToMulticopterRequest::TransitionToMulticopterRequest(const TransitionToMulticopterRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.action.TransitionToMulticopterRequest)
}

void TransitionToMulticopterRequest::SharedCtor() {
}

TransitionToMulticopterRequest::~TransitionToMulticopterRequest() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.action.TransitionToMulticopterRequest)
  SharedDtor();
}

void TransitionToMulticopterRequest::SharedDtor() {
}

void TransitionToMulticopterRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const TransitionToMulticopterRequest& TransitionToMulticopterRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_TransitionToMulticopterRequest_action_2faction_2eproto.base);
  return *internal_default_instance();
}


void TransitionToMulticopterRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.action.TransitionToMulticopterRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* TransitionToMulticopterRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<TransitionToMulticopterRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      default: {
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool TransitionToMulticopterRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mavsdk.rpc.action.TransitionToMulticopterRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:mavsdk.rpc.action.TransitionToMulticopterRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mavsdk.rpc.action.TransitionToMulticopterRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void TransitionToMulticopterRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mavsdk.rpc.action.TransitionToMulticopterRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:mavsdk.rpc.action.TransitionToMulticopterRequest)
}

::google::protobuf::uint8* TransitionToMulticopterRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.action.TransitionToMulticopterRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.action.TransitionToMulticopterRequest)
  return target;
}

size_t TransitionToMulticopterRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.action.TransitionToMulticopterRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TransitionToMulticopterRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mavsdk.rpc.action.TransitionToMulticopterRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const TransitionToMulticopterRequest* source =
      ::google::protobuf::DynamicCastToGenerated<TransitionToMulticopterRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mavsdk.rpc.action.TransitionToMulticopterRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mavsdk.rpc.action.TransitionToMulticopterRequest)
    MergeFrom(*source);
  }
}

void TransitionToMulticopterRequest::MergeFrom(const TransitionToMulticopterRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.action.TransitionToMulticopterRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void TransitionToMulticopterRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mavsdk.rpc.action.TransitionToMulticopterRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TransitionToMulticopterRequest::CopyFrom(const TransitionToMulticopterRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.action.TransitionToMulticopterRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TransitionToMulticopterRequest::IsInitialized() const {
  return true;
}

void TransitionToMulticopterRequest::Swap(TransitionToMulticopterRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TransitionToMulticopterRequest::InternalSwap(TransitionToMulticopterRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata TransitionToMulticopterRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_action_2faction_2eproto);
  return ::file_level_metadata_action_2faction_2eproto[kIndexInFileMessages];
}


// ===================================================================

void TransitionToMulticopterResponse::InitAsDefaultInstance() {
  ::mavsdk::rpc::action::_TransitionToMulticopterResponse_default_instance_._instance.get_mutable()->action_result_ = const_cast< ::mavsdk::rpc::action::ActionResult*>(
      ::mavsdk::rpc::action::ActionResult::internal_default_instance());
}
class TransitionToMulticopterResponse::HasBitSetters {
 public:
  static const ::mavsdk::rpc::action::ActionResult& action_result(const TransitionToMulticopterResponse* msg);
};

const ::mavsdk::rpc::action::ActionResult&
TransitionToMulticopterResponse::HasBitSetters::action_result(const TransitionToMulticopterResponse* msg) {
  return *msg->action_result_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TransitionToMulticopterResponse::kActionResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TransitionToMulticopterResponse::TransitionToMulticopterResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:mavsdk.rpc.action.TransitionToMulticopterResponse)
}
TransitionToMulticopterResponse::TransitionToMulticopterResponse(const TransitionToMulticopterResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_action_result()) {
    action_result_ = new ::mavsdk::rpc::action::ActionResult(*from.action_result_);
  } else {
    action_result_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.action.TransitionToMulticopterResponse)
}

void TransitionToMulticopterResponse::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_TransitionToMulticopterResponse_action_2faction_2eproto.base);
  action_result_ = nullptr;
}

TransitionToMulticopterResponse::~TransitionToMulticopterResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.action.TransitionToMulticopterResponse)
  SharedDtor();
}

void TransitionToMulticopterResponse::SharedDtor() {
  if (this != internal_default_instance()) delete action_result_;
}

void TransitionToMulticopterResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const TransitionToMulticopterResponse& TransitionToMulticopterResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_TransitionToMulticopterResponse_action_2faction_2eproto.base);
  return *internal_default_instance();
}


void TransitionToMulticopterResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.action.TransitionToMulticopterResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && action_result_ != nullptr) {
    delete action_result_;
  }
  action_result_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* TransitionToMulticopterResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<TransitionToMulticopterResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .mavsdk.rpc.action.ActionResult action_result = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::mavsdk::rpc::action::ActionResult::_InternalParse;
        object = msg->mutable_action_result();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool TransitionToMulticopterResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mavsdk.rpc.action.TransitionToMulticopterResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .mavsdk.rpc.action.ActionResult action_result = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_action_result()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mavsdk.rpc.action.TransitionToMulticopterResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mavsdk.rpc.action.TransitionToMulticopterResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void TransitionToMulticopterResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mavsdk.rpc.action.TransitionToMulticopterResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .mavsdk.rpc.action.ActionResult action_result = 1;
  if (this->has_action_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::action_result(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:mavsdk.rpc.action.TransitionToMulticopterResponse)
}

::google::protobuf::uint8* TransitionToMulticopterResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.action.TransitionToMulticopterResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .mavsdk.rpc.action.ActionResult action_result = 1;
  if (this->has_action_result()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::action_result(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.action.TransitionToMulticopterResponse)
  return target;
}

size_t TransitionToMulticopterResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.action.TransitionToMulticopterResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mavsdk.rpc.action.ActionResult action_result = 1;
  if (this->has_action_result()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *action_result_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TransitionToMulticopterResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mavsdk.rpc.action.TransitionToMulticopterResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const TransitionToMulticopterResponse* source =
      ::google::protobuf::DynamicCastToGenerated<TransitionToMulticopterResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mavsdk.rpc.action.TransitionToMulticopterResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mavsdk.rpc.action.TransitionToMulticopterResponse)
    MergeFrom(*source);
  }
}

void TransitionToMulticopterResponse::MergeFrom(const TransitionToMulticopterResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.action.TransitionToMulticopterResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_action_result()) {
    mutable_action_result()->::mavsdk::rpc::action::ActionResult::MergeFrom(from.action_result());
  }
}

void TransitionToMulticopterResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mavsdk.rpc.action.TransitionToMulticopterResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TransitionToMulticopterResponse::CopyFrom(const TransitionToMulticopterResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.action.TransitionToMulticopterResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TransitionToMulticopterResponse::IsInitialized() const {
  return true;
}

void TransitionToMulticopterResponse::Swap(TransitionToMulticopterResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TransitionToMulticopterResponse::InternalSwap(TransitionToMulticopterResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(action_result_, other->action_result_);
}

::google::protobuf::Metadata TransitionToMulticopterResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_action_2faction_2eproto);
  return ::file_level_metadata_action_2faction_2eproto[kIndexInFileMessages];
}


// ===================================================================

void GetTakeoffAltitudeRequest::InitAsDefaultInstance() {
}
class GetTakeoffAltitudeRequest::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetTakeoffAltitudeRequest::GetTakeoffAltitudeRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:mavsdk.rpc.action.GetTakeoffAltitudeRequest)
}
GetTakeoffAltitudeRequest::GetTakeoffAltitudeRequest(const GetTakeoffAltitudeRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.action.GetTakeoffAltitudeRequest)
}

void GetTakeoffAltitudeRequest::SharedCtor() {
}

GetTakeoffAltitudeRequest::~GetTakeoffAltitudeRequest() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.action.GetTakeoffAltitudeRequest)
  SharedDtor();
}

void GetTakeoffAltitudeRequest::SharedDtor() {
}

void GetTakeoffAltitudeRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetTakeoffAltitudeRequest& GetTakeoffAltitudeRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_GetTakeoffAltitudeRequest_action_2faction_2eproto.base);
  return *internal_default_instance();
}


void GetTakeoffAltitudeRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.action.GetTakeoffAltitudeRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* GetTakeoffAltitudeRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<GetTakeoffAltitudeRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      default: {
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool GetTakeoffAltitudeRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mavsdk.rpc.action.GetTakeoffAltitudeRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:mavsdk.rpc.action.GetTakeoffAltitudeRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mavsdk.rpc.action.GetTakeoffAltitudeRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void GetTakeoffAltitudeRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mavsdk.rpc.action.GetTakeoffAltitudeRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:mavsdk.rpc.action.GetTakeoffAltitudeRequest)
}

::google::protobuf::uint8* GetTakeoffAltitudeRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.action.GetTakeoffAltitudeRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.action.GetTakeoffAltitudeRequest)
  return target;
}

size_t GetTakeoffAltitudeRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.action.GetTakeoffAltitudeRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetTakeoffAltitudeRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mavsdk.rpc.action.GetTakeoffAltitudeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetTakeoffAltitudeRequest* source =
      ::google::protobuf::DynamicCastToGenerated<GetTakeoffAltitudeRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mavsdk.rpc.action.GetTakeoffAltitudeRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mavsdk.rpc.action.GetTakeoffAltitudeRequest)
    MergeFrom(*source);
  }
}

void GetTakeoffAltitudeRequest::MergeFrom(const GetTakeoffAltitudeRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.action.GetTakeoffAltitudeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void GetTakeoffAltitudeRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mavsdk.rpc.action.GetTakeoffAltitudeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetTakeoffAltitudeRequest::CopyFrom(const GetTakeoffAltitudeRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.action.GetTakeoffAltitudeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetTakeoffAltitudeRequest::IsInitialized() const {
  return true;
}

void GetTakeoffAltitudeRequest::Swap(GetTakeoffAltitudeRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetTakeoffAltitudeRequest::InternalSwap(GetTakeoffAltitudeRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetTakeoffAltitudeRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_action_2faction_2eproto);
  return ::file_level_metadata_action_2faction_2eproto[kIndexInFileMessages];
}


// ===================================================================

void GetTakeoffAltitudeResponse::InitAsDefaultInstance() {
  ::mavsdk::rpc::action::_GetTakeoffAltitudeResponse_default_instance_._instance.get_mutable()->action_result_ = const_cast< ::mavsdk::rpc::action::ActionResult*>(
      ::mavsdk::rpc::action::ActionResult::internal_default_instance());
}
class GetTakeoffAltitudeResponse::HasBitSetters {
 public:
  static const ::mavsdk::rpc::action::ActionResult& action_result(const GetTakeoffAltitudeResponse* msg);
};

const ::mavsdk::rpc::action::ActionResult&
GetTakeoffAltitudeResponse::HasBitSetters::action_result(const GetTakeoffAltitudeResponse* msg) {
  return *msg->action_result_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetTakeoffAltitudeResponse::kActionResultFieldNumber;
const int GetTakeoffAltitudeResponse::kAltitudeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetTakeoffAltitudeResponse::GetTakeoffAltitudeResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:mavsdk.rpc.action.GetTakeoffAltitudeResponse)
}
GetTakeoffAltitudeResponse::GetTakeoffAltitudeResponse(const GetTakeoffAltitudeResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_action_result()) {
    action_result_ = new ::mavsdk::rpc::action::ActionResult(*from.action_result_);
  } else {
    action_result_ = nullptr;
  }
  altitude_ = from.altitude_;
  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.action.GetTakeoffAltitudeResponse)
}

void GetTakeoffAltitudeResponse::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_GetTakeoffAltitudeResponse_action_2faction_2eproto.base);
  ::memset(&action_result_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&altitude_) -
      reinterpret_cast<char*>(&action_result_)) + sizeof(altitude_));
}

GetTakeoffAltitudeResponse::~GetTakeoffAltitudeResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.action.GetTakeoffAltitudeResponse)
  SharedDtor();
}

void GetTakeoffAltitudeResponse::SharedDtor() {
  if (this != internal_default_instance()) delete action_result_;
}

void GetTakeoffAltitudeResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetTakeoffAltitudeResponse& GetTakeoffAltitudeResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_GetTakeoffAltitudeResponse_action_2faction_2eproto.base);
  return *internal_default_instance();
}


void GetTakeoffAltitudeResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.action.GetTakeoffAltitudeResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && action_result_ != nullptr) {
    delete action_result_;
  }
  action_result_ = nullptr;
  altitude_ = 0;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* GetTakeoffAltitudeResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<GetTakeoffAltitudeResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .mavsdk.rpc.action.ActionResult action_result = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::mavsdk::rpc::action::ActionResult::_InternalParse;
        object = msg->mutable_action_result();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // float altitude = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 21) goto handle_unusual;
        msg->set_altitude(::google::protobuf::io::UnalignedLoad<float>(ptr));
        ptr += sizeof(float);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool GetTakeoffAltitudeResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mavsdk.rpc.action.GetTakeoffAltitudeResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .mavsdk.rpc.action.ActionResult action_result = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_action_result()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float altitude = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (21 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &altitude_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mavsdk.rpc.action.GetTakeoffAltitudeResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mavsdk.rpc.action.GetTakeoffAltitudeResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void GetTakeoffAltitudeResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mavsdk.rpc.action.GetTakeoffAltitudeResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .mavsdk.rpc.action.ActionResult action_result = 1;
  if (this->has_action_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::action_result(this), output);
  }

  // float altitude = 2;
  if (this->altitude() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->altitude(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:mavsdk.rpc.action.GetTakeoffAltitudeResponse)
}

::google::protobuf::uint8* GetTakeoffAltitudeResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.action.GetTakeoffAltitudeResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .mavsdk.rpc.action.ActionResult action_result = 1;
  if (this->has_action_result()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::action_result(this), target);
  }

  // float altitude = 2;
  if (this->altitude() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->altitude(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.action.GetTakeoffAltitudeResponse)
  return target;
}

size_t GetTakeoffAltitudeResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.action.GetTakeoffAltitudeResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mavsdk.rpc.action.ActionResult action_result = 1;
  if (this->has_action_result()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *action_result_);
  }

  // float altitude = 2;
  if (this->altitude() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetTakeoffAltitudeResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mavsdk.rpc.action.GetTakeoffAltitudeResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetTakeoffAltitudeResponse* source =
      ::google::protobuf::DynamicCastToGenerated<GetTakeoffAltitudeResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mavsdk.rpc.action.GetTakeoffAltitudeResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mavsdk.rpc.action.GetTakeoffAltitudeResponse)
    MergeFrom(*source);
  }
}

void GetTakeoffAltitudeResponse::MergeFrom(const GetTakeoffAltitudeResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.action.GetTakeoffAltitudeResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_action_result()) {
    mutable_action_result()->::mavsdk::rpc::action::ActionResult::MergeFrom(from.action_result());
  }
  if (from.altitude() != 0) {
    set_altitude(from.altitude());
  }
}

void GetTakeoffAltitudeResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mavsdk.rpc.action.GetTakeoffAltitudeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetTakeoffAltitudeResponse::CopyFrom(const GetTakeoffAltitudeResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.action.GetTakeoffAltitudeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetTakeoffAltitudeResponse::IsInitialized() const {
  return true;
}

void GetTakeoffAltitudeResponse::Swap(GetTakeoffAltitudeResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetTakeoffAltitudeResponse::InternalSwap(GetTakeoffAltitudeResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(action_result_, other->action_result_);
  swap(altitude_, other->altitude_);
}

::google::protobuf::Metadata GetTakeoffAltitudeResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_action_2faction_2eproto);
  return ::file_level_metadata_action_2faction_2eproto[kIndexInFileMessages];
}


// ===================================================================

void SetTakeoffAltitudeRequest::InitAsDefaultInstance() {
}
class SetTakeoffAltitudeRequest::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetTakeoffAltitudeRequest::kAltitudeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetTakeoffAltitudeRequest::SetTakeoffAltitudeRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:mavsdk.rpc.action.SetTakeoffAltitudeRequest)
}
SetTakeoffAltitudeRequest::SetTakeoffAltitudeRequest(const SetTakeoffAltitudeRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  altitude_ = from.altitude_;
  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.action.SetTakeoffAltitudeRequest)
}

void SetTakeoffAltitudeRequest::SharedCtor() {
  altitude_ = 0;
}

SetTakeoffAltitudeRequest::~SetTakeoffAltitudeRequest() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.action.SetTakeoffAltitudeRequest)
  SharedDtor();
}

void SetTakeoffAltitudeRequest::SharedDtor() {
}

void SetTakeoffAltitudeRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SetTakeoffAltitudeRequest& SetTakeoffAltitudeRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_SetTakeoffAltitudeRequest_action_2faction_2eproto.base);
  return *internal_default_instance();
}


void SetTakeoffAltitudeRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.action.SetTakeoffAltitudeRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  altitude_ = 0;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* SetTakeoffAltitudeRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<SetTakeoffAltitudeRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // float altitude = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 13) goto handle_unusual;
        msg->set_altitude(::google::protobuf::io::UnalignedLoad<float>(ptr));
        ptr += sizeof(float);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool SetTakeoffAltitudeRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mavsdk.rpc.action.SetTakeoffAltitudeRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // float altitude = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (13 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &altitude_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mavsdk.rpc.action.SetTakeoffAltitudeRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mavsdk.rpc.action.SetTakeoffAltitudeRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void SetTakeoffAltitudeRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mavsdk.rpc.action.SetTakeoffAltitudeRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float altitude = 1;
  if (this->altitude() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->altitude(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:mavsdk.rpc.action.SetTakeoffAltitudeRequest)
}

::google::protobuf::uint8* SetTakeoffAltitudeRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.action.SetTakeoffAltitudeRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float altitude = 1;
  if (this->altitude() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->altitude(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.action.SetTakeoffAltitudeRequest)
  return target;
}

size_t SetTakeoffAltitudeRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.action.SetTakeoffAltitudeRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // float altitude = 1;
  if (this->altitude() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SetTakeoffAltitudeRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mavsdk.rpc.action.SetTakeoffAltitudeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SetTakeoffAltitudeRequest* source =
      ::google::protobuf::DynamicCastToGenerated<SetTakeoffAltitudeRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mavsdk.rpc.action.SetTakeoffAltitudeRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mavsdk.rpc.action.SetTakeoffAltitudeRequest)
    MergeFrom(*source);
  }
}

void SetTakeoffAltitudeRequest::MergeFrom(const SetTakeoffAltitudeRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.action.SetTakeoffAltitudeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.altitude() != 0) {
    set_altitude(from.altitude());
  }
}

void SetTakeoffAltitudeRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mavsdk.rpc.action.SetTakeoffAltitudeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetTakeoffAltitudeRequest::CopyFrom(const SetTakeoffAltitudeRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.action.SetTakeoffAltitudeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetTakeoffAltitudeRequest::IsInitialized() const {
  return true;
}

void SetTakeoffAltitudeRequest::Swap(SetTakeoffAltitudeRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetTakeoffAltitudeRequest::InternalSwap(SetTakeoffAltitudeRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(altitude_, other->altitude_);
}

::google::protobuf::Metadata SetTakeoffAltitudeRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_action_2faction_2eproto);
  return ::file_level_metadata_action_2faction_2eproto[kIndexInFileMessages];
}


// ===================================================================

void SetTakeoffAltitudeResponse::InitAsDefaultInstance() {
  ::mavsdk::rpc::action::_SetTakeoffAltitudeResponse_default_instance_._instance.get_mutable()->action_result_ = const_cast< ::mavsdk::rpc::action::ActionResult*>(
      ::mavsdk::rpc::action::ActionResult::internal_default_instance());
}
class SetTakeoffAltitudeResponse::HasBitSetters {
 public:
  static const ::mavsdk::rpc::action::ActionResult& action_result(const SetTakeoffAltitudeResponse* msg);
};

const ::mavsdk::rpc::action::ActionResult&
SetTakeoffAltitudeResponse::HasBitSetters::action_result(const SetTakeoffAltitudeResponse* msg) {
  return *msg->action_result_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetTakeoffAltitudeResponse::kActionResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetTakeoffAltitudeResponse::SetTakeoffAltitudeResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:mavsdk.rpc.action.SetTakeoffAltitudeResponse)
}
SetTakeoffAltitudeResponse::SetTakeoffAltitudeResponse(const SetTakeoffAltitudeResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_action_result()) {
    action_result_ = new ::mavsdk::rpc::action::ActionResult(*from.action_result_);
  } else {
    action_result_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.action.SetTakeoffAltitudeResponse)
}

void SetTakeoffAltitudeResponse::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_SetTakeoffAltitudeResponse_action_2faction_2eproto.base);
  action_result_ = nullptr;
}

SetTakeoffAltitudeResponse::~SetTakeoffAltitudeResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.action.SetTakeoffAltitudeResponse)
  SharedDtor();
}

void SetTakeoffAltitudeResponse::SharedDtor() {
  if (this != internal_default_instance()) delete action_result_;
}

void SetTakeoffAltitudeResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SetTakeoffAltitudeResponse& SetTakeoffAltitudeResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_SetTakeoffAltitudeResponse_action_2faction_2eproto.base);
  return *internal_default_instance();
}


void SetTakeoffAltitudeResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.action.SetTakeoffAltitudeResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && action_result_ != nullptr) {
    delete action_result_;
  }
  action_result_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* SetTakeoffAltitudeResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<SetTakeoffAltitudeResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .mavsdk.rpc.action.ActionResult action_result = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::mavsdk::rpc::action::ActionResult::_InternalParse;
        object = msg->mutable_action_result();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool SetTakeoffAltitudeResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mavsdk.rpc.action.SetTakeoffAltitudeResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .mavsdk.rpc.action.ActionResult action_result = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_action_result()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mavsdk.rpc.action.SetTakeoffAltitudeResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mavsdk.rpc.action.SetTakeoffAltitudeResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void SetTakeoffAltitudeResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mavsdk.rpc.action.SetTakeoffAltitudeResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .mavsdk.rpc.action.ActionResult action_result = 1;
  if (this->has_action_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::action_result(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:mavsdk.rpc.action.SetTakeoffAltitudeResponse)
}

::google::protobuf::uint8* SetTakeoffAltitudeResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.action.SetTakeoffAltitudeResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .mavsdk.rpc.action.ActionResult action_result = 1;
  if (this->has_action_result()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::action_result(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.action.SetTakeoffAltitudeResponse)
  return target;
}

size_t SetTakeoffAltitudeResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.action.SetTakeoffAltitudeResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mavsdk.rpc.action.ActionResult action_result = 1;
  if (this->has_action_result()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *action_result_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SetTakeoffAltitudeResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mavsdk.rpc.action.SetTakeoffAltitudeResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const SetTakeoffAltitudeResponse* source =
      ::google::protobuf::DynamicCastToGenerated<SetTakeoffAltitudeResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mavsdk.rpc.action.SetTakeoffAltitudeResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mavsdk.rpc.action.SetTakeoffAltitudeResponse)
    MergeFrom(*source);
  }
}

void SetTakeoffAltitudeResponse::MergeFrom(const SetTakeoffAltitudeResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.action.SetTakeoffAltitudeResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_action_result()) {
    mutable_action_result()->::mavsdk::rpc::action::ActionResult::MergeFrom(from.action_result());
  }
}

void SetTakeoffAltitudeResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mavsdk.rpc.action.SetTakeoffAltitudeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetTakeoffAltitudeResponse::CopyFrom(const SetTakeoffAltitudeResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.action.SetTakeoffAltitudeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetTakeoffAltitudeResponse::IsInitialized() const {
  return true;
}

void SetTakeoffAltitudeResponse::Swap(SetTakeoffAltitudeResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetTakeoffAltitudeResponse::InternalSwap(SetTakeoffAltitudeResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(action_result_, other->action_result_);
}

::google::protobuf::Metadata SetTakeoffAltitudeResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_action_2faction_2eproto);
  return ::file_level_metadata_action_2faction_2eproto[kIndexInFileMessages];
}


// ===================================================================

void GetMaximumSpeedRequest::InitAsDefaultInstance() {
}
class GetMaximumSpeedRequest::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetMaximumSpeedRequest::GetMaximumSpeedRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:mavsdk.rpc.action.GetMaximumSpeedRequest)
}
GetMaximumSpeedRequest::GetMaximumSpeedRequest(const GetMaximumSpeedRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.action.GetMaximumSpeedRequest)
}

void GetMaximumSpeedRequest::SharedCtor() {
}

GetMaximumSpeedRequest::~GetMaximumSpeedRequest() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.action.GetMaximumSpeedRequest)
  SharedDtor();
}

void GetMaximumSpeedRequest::SharedDtor() {
}

void GetMaximumSpeedRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetMaximumSpeedRequest& GetMaximumSpeedRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_GetMaximumSpeedRequest_action_2faction_2eproto.base);
  return *internal_default_instance();
}


void GetMaximumSpeedRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.action.GetMaximumSpeedRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* GetMaximumSpeedRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<GetMaximumSpeedRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      default: {
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool GetMaximumSpeedRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mavsdk.rpc.action.GetMaximumSpeedRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:mavsdk.rpc.action.GetMaximumSpeedRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mavsdk.rpc.action.GetMaximumSpeedRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void GetMaximumSpeedRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mavsdk.rpc.action.GetMaximumSpeedRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:mavsdk.rpc.action.GetMaximumSpeedRequest)
}

::google::protobuf::uint8* GetMaximumSpeedRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.action.GetMaximumSpeedRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.action.GetMaximumSpeedRequest)
  return target;
}

size_t GetMaximumSpeedRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.action.GetMaximumSpeedRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetMaximumSpeedRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mavsdk.rpc.action.GetMaximumSpeedRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetMaximumSpeedRequest* source =
      ::google::protobuf::DynamicCastToGenerated<GetMaximumSpeedRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mavsdk.rpc.action.GetMaximumSpeedRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mavsdk.rpc.action.GetMaximumSpeedRequest)
    MergeFrom(*source);
  }
}

void GetMaximumSpeedRequest::MergeFrom(const GetMaximumSpeedRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.action.GetMaximumSpeedRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void GetMaximumSpeedRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mavsdk.rpc.action.GetMaximumSpeedRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetMaximumSpeedRequest::CopyFrom(const GetMaximumSpeedRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.action.GetMaximumSpeedRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetMaximumSpeedRequest::IsInitialized() const {
  return true;
}

void GetMaximumSpeedRequest::Swap(GetMaximumSpeedRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetMaximumSpeedRequest::InternalSwap(GetMaximumSpeedRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetMaximumSpeedRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_action_2faction_2eproto);
  return ::file_level_metadata_action_2faction_2eproto[kIndexInFileMessages];
}


// ===================================================================

void GetMaximumSpeedResponse::InitAsDefaultInstance() {
  ::mavsdk::rpc::action::_GetMaximumSpeedResponse_default_instance_._instance.get_mutable()->action_result_ = const_cast< ::mavsdk::rpc::action::ActionResult*>(
      ::mavsdk::rpc::action::ActionResult::internal_default_instance());
}
class GetMaximumSpeedResponse::HasBitSetters {
 public:
  static const ::mavsdk::rpc::action::ActionResult& action_result(const GetMaximumSpeedResponse* msg);
};

const ::mavsdk::rpc::action::ActionResult&
GetMaximumSpeedResponse::HasBitSetters::action_result(const GetMaximumSpeedResponse* msg) {
  return *msg->action_result_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetMaximumSpeedResponse::kActionResultFieldNumber;
const int GetMaximumSpeedResponse::kSpeedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetMaximumSpeedResponse::GetMaximumSpeedResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:mavsdk.rpc.action.GetMaximumSpeedResponse)
}
GetMaximumSpeedResponse::GetMaximumSpeedResponse(const GetMaximumSpeedResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_action_result()) {
    action_result_ = new ::mavsdk::rpc::action::ActionResult(*from.action_result_);
  } else {
    action_result_ = nullptr;
  }
  speed_ = from.speed_;
  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.action.GetMaximumSpeedResponse)
}

void GetMaximumSpeedResponse::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_GetMaximumSpeedResponse_action_2faction_2eproto.base);
  ::memset(&action_result_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&speed_) -
      reinterpret_cast<char*>(&action_result_)) + sizeof(speed_));
}

GetMaximumSpeedResponse::~GetMaximumSpeedResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.action.GetMaximumSpeedResponse)
  SharedDtor();
}

void GetMaximumSpeedResponse::SharedDtor() {
  if (this != internal_default_instance()) delete action_result_;
}

void GetMaximumSpeedResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetMaximumSpeedResponse& GetMaximumSpeedResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_GetMaximumSpeedResponse_action_2faction_2eproto.base);
  return *internal_default_instance();
}


void GetMaximumSpeedResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.action.GetMaximumSpeedResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && action_result_ != nullptr) {
    delete action_result_;
  }
  action_result_ = nullptr;
  speed_ = 0;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* GetMaximumSpeedResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<GetMaximumSpeedResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .mavsdk.rpc.action.ActionResult action_result = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::mavsdk::rpc::action::ActionResult::_InternalParse;
        object = msg->mutable_action_result();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // float speed = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 21) goto handle_unusual;
        msg->set_speed(::google::protobuf::io::UnalignedLoad<float>(ptr));
        ptr += sizeof(float);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool GetMaximumSpeedResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mavsdk.rpc.action.GetMaximumSpeedResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .mavsdk.rpc.action.ActionResult action_result = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_action_result()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float speed = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (21 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &speed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mavsdk.rpc.action.GetMaximumSpeedResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mavsdk.rpc.action.GetMaximumSpeedResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void GetMaximumSpeedResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mavsdk.rpc.action.GetMaximumSpeedResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .mavsdk.rpc.action.ActionResult action_result = 1;
  if (this->has_action_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::action_result(this), output);
  }

  // float speed = 2;
  if (this->speed() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->speed(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:mavsdk.rpc.action.GetMaximumSpeedResponse)
}

::google::protobuf::uint8* GetMaximumSpeedResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.action.GetMaximumSpeedResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .mavsdk.rpc.action.ActionResult action_result = 1;
  if (this->has_action_result()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::action_result(this), target);
  }

  // float speed = 2;
  if (this->speed() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->speed(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.action.GetMaximumSpeedResponse)
  return target;
}

size_t GetMaximumSpeedResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.action.GetMaximumSpeedResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mavsdk.rpc.action.ActionResult action_result = 1;
  if (this->has_action_result()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *action_result_);
  }

  // float speed = 2;
  if (this->speed() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetMaximumSpeedResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mavsdk.rpc.action.GetMaximumSpeedResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetMaximumSpeedResponse* source =
      ::google::protobuf::DynamicCastToGenerated<GetMaximumSpeedResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mavsdk.rpc.action.GetMaximumSpeedResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mavsdk.rpc.action.GetMaximumSpeedResponse)
    MergeFrom(*source);
  }
}

void GetMaximumSpeedResponse::MergeFrom(const GetMaximumSpeedResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.action.GetMaximumSpeedResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_action_result()) {
    mutable_action_result()->::mavsdk::rpc::action::ActionResult::MergeFrom(from.action_result());
  }
  if (from.speed() != 0) {
    set_speed(from.speed());
  }
}

void GetMaximumSpeedResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mavsdk.rpc.action.GetMaximumSpeedResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetMaximumSpeedResponse::CopyFrom(const GetMaximumSpeedResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.action.GetMaximumSpeedResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetMaximumSpeedResponse::IsInitialized() const {
  return true;
}

void GetMaximumSpeedResponse::Swap(GetMaximumSpeedResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetMaximumSpeedResponse::InternalSwap(GetMaximumSpeedResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(action_result_, other->action_result_);
  swap(speed_, other->speed_);
}

::google::protobuf::Metadata GetMaximumSpeedResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_action_2faction_2eproto);
  return ::file_level_metadata_action_2faction_2eproto[kIndexInFileMessages];
}


// ===================================================================

void SetMaximumSpeedRequest::InitAsDefaultInstance() {
}
class SetMaximumSpeedRequest::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetMaximumSpeedRequest::kSpeedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetMaximumSpeedRequest::SetMaximumSpeedRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:mavsdk.rpc.action.SetMaximumSpeedRequest)
}
SetMaximumSpeedRequest::SetMaximumSpeedRequest(const SetMaximumSpeedRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  speed_ = from.speed_;
  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.action.SetMaximumSpeedRequest)
}

void SetMaximumSpeedRequest::SharedCtor() {
  speed_ = 0;
}

SetMaximumSpeedRequest::~SetMaximumSpeedRequest() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.action.SetMaximumSpeedRequest)
  SharedDtor();
}

void SetMaximumSpeedRequest::SharedDtor() {
}

void SetMaximumSpeedRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SetMaximumSpeedRequest& SetMaximumSpeedRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_SetMaximumSpeedRequest_action_2faction_2eproto.base);
  return *internal_default_instance();
}


void SetMaximumSpeedRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.action.SetMaximumSpeedRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  speed_ = 0;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* SetMaximumSpeedRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<SetMaximumSpeedRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // float speed = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 13) goto handle_unusual;
        msg->set_speed(::google::protobuf::io::UnalignedLoad<float>(ptr));
        ptr += sizeof(float);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool SetMaximumSpeedRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mavsdk.rpc.action.SetMaximumSpeedRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // float speed = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (13 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &speed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mavsdk.rpc.action.SetMaximumSpeedRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mavsdk.rpc.action.SetMaximumSpeedRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void SetMaximumSpeedRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mavsdk.rpc.action.SetMaximumSpeedRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float speed = 1;
  if (this->speed() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->speed(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:mavsdk.rpc.action.SetMaximumSpeedRequest)
}

::google::protobuf::uint8* SetMaximumSpeedRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.action.SetMaximumSpeedRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float speed = 1;
  if (this->speed() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->speed(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.action.SetMaximumSpeedRequest)
  return target;
}

size_t SetMaximumSpeedRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.action.SetMaximumSpeedRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // float speed = 1;
  if (this->speed() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SetMaximumSpeedRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mavsdk.rpc.action.SetMaximumSpeedRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SetMaximumSpeedRequest* source =
      ::google::protobuf::DynamicCastToGenerated<SetMaximumSpeedRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mavsdk.rpc.action.SetMaximumSpeedRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mavsdk.rpc.action.SetMaximumSpeedRequest)
    MergeFrom(*source);
  }
}

void SetMaximumSpeedRequest::MergeFrom(const SetMaximumSpeedRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.action.SetMaximumSpeedRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.speed() != 0) {
    set_speed(from.speed());
  }
}

void SetMaximumSpeedRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mavsdk.rpc.action.SetMaximumSpeedRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetMaximumSpeedRequest::CopyFrom(const SetMaximumSpeedRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.action.SetMaximumSpeedRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetMaximumSpeedRequest::IsInitialized() const {
  return true;
}

void SetMaximumSpeedRequest::Swap(SetMaximumSpeedRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetMaximumSpeedRequest::InternalSwap(SetMaximumSpeedRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(speed_, other->speed_);
}

::google::protobuf::Metadata SetMaximumSpeedRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_action_2faction_2eproto);
  return ::file_level_metadata_action_2faction_2eproto[kIndexInFileMessages];
}


// ===================================================================

void SetMaximumSpeedResponse::InitAsDefaultInstance() {
  ::mavsdk::rpc::action::_SetMaximumSpeedResponse_default_instance_._instance.get_mutable()->action_result_ = const_cast< ::mavsdk::rpc::action::ActionResult*>(
      ::mavsdk::rpc::action::ActionResult::internal_default_instance());
}
class SetMaximumSpeedResponse::HasBitSetters {
 public:
  static const ::mavsdk::rpc::action::ActionResult& action_result(const SetMaximumSpeedResponse* msg);
};

const ::mavsdk::rpc::action::ActionResult&
SetMaximumSpeedResponse::HasBitSetters::action_result(const SetMaximumSpeedResponse* msg) {
  return *msg->action_result_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetMaximumSpeedResponse::kActionResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetMaximumSpeedResponse::SetMaximumSpeedResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:mavsdk.rpc.action.SetMaximumSpeedResponse)
}
SetMaximumSpeedResponse::SetMaximumSpeedResponse(const SetMaximumSpeedResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_action_result()) {
    action_result_ = new ::mavsdk::rpc::action::ActionResult(*from.action_result_);
  } else {
    action_result_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.action.SetMaximumSpeedResponse)
}

void SetMaximumSpeedResponse::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_SetMaximumSpeedResponse_action_2faction_2eproto.base);
  action_result_ = nullptr;
}

SetMaximumSpeedResponse::~SetMaximumSpeedResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.action.SetMaximumSpeedResponse)
  SharedDtor();
}

void SetMaximumSpeedResponse::SharedDtor() {
  if (this != internal_default_instance()) delete action_result_;
}

void SetMaximumSpeedResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SetMaximumSpeedResponse& SetMaximumSpeedResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_SetMaximumSpeedResponse_action_2faction_2eproto.base);
  return *internal_default_instance();
}


void SetMaximumSpeedResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.action.SetMaximumSpeedResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && action_result_ != nullptr) {
    delete action_result_;
  }
  action_result_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* SetMaximumSpeedResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<SetMaximumSpeedResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .mavsdk.rpc.action.ActionResult action_result = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::mavsdk::rpc::action::ActionResult::_InternalParse;
        object = msg->mutable_action_result();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool SetMaximumSpeedResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mavsdk.rpc.action.SetMaximumSpeedResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .mavsdk.rpc.action.ActionResult action_result = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_action_result()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mavsdk.rpc.action.SetMaximumSpeedResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mavsdk.rpc.action.SetMaximumSpeedResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void SetMaximumSpeedResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mavsdk.rpc.action.SetMaximumSpeedResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .mavsdk.rpc.action.ActionResult action_result = 1;
  if (this->has_action_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::action_result(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:mavsdk.rpc.action.SetMaximumSpeedResponse)
}

::google::protobuf::uint8* SetMaximumSpeedResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.action.SetMaximumSpeedResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .mavsdk.rpc.action.ActionResult action_result = 1;
  if (this->has_action_result()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::action_result(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.action.SetMaximumSpeedResponse)
  return target;
}

size_t SetMaximumSpeedResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.action.SetMaximumSpeedResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mavsdk.rpc.action.ActionResult action_result = 1;
  if (this->has_action_result()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *action_result_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SetMaximumSpeedResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mavsdk.rpc.action.SetMaximumSpeedResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const SetMaximumSpeedResponse* source =
      ::google::protobuf::DynamicCastToGenerated<SetMaximumSpeedResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mavsdk.rpc.action.SetMaximumSpeedResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mavsdk.rpc.action.SetMaximumSpeedResponse)
    MergeFrom(*source);
  }
}

void SetMaximumSpeedResponse::MergeFrom(const SetMaximumSpeedResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.action.SetMaximumSpeedResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_action_result()) {
    mutable_action_result()->::mavsdk::rpc::action::ActionResult::MergeFrom(from.action_result());
  }
}

void SetMaximumSpeedResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mavsdk.rpc.action.SetMaximumSpeedResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetMaximumSpeedResponse::CopyFrom(const SetMaximumSpeedResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.action.SetMaximumSpeedResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetMaximumSpeedResponse::IsInitialized() const {
  return true;
}

void SetMaximumSpeedResponse::Swap(SetMaximumSpeedResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetMaximumSpeedResponse::InternalSwap(SetMaximumSpeedResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(action_result_, other->action_result_);
}

::google::protobuf::Metadata SetMaximumSpeedResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_action_2faction_2eproto);
  return ::file_level_metadata_action_2faction_2eproto[kIndexInFileMessages];
}


// ===================================================================

void GetReturnToLaunchAltitudeRequest::InitAsDefaultInstance() {
}
class GetReturnToLaunchAltitudeRequest::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetReturnToLaunchAltitudeRequest::GetReturnToLaunchAltitudeRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:mavsdk.rpc.action.GetReturnToLaunchAltitudeRequest)
}
GetReturnToLaunchAltitudeRequest::GetReturnToLaunchAltitudeRequest(const GetReturnToLaunchAltitudeRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.action.GetReturnToLaunchAltitudeRequest)
}

void GetReturnToLaunchAltitudeRequest::SharedCtor() {
}

GetReturnToLaunchAltitudeRequest::~GetReturnToLaunchAltitudeRequest() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.action.GetReturnToLaunchAltitudeRequest)
  SharedDtor();
}

void GetReturnToLaunchAltitudeRequest::SharedDtor() {
}

void GetReturnToLaunchAltitudeRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetReturnToLaunchAltitudeRequest& GetReturnToLaunchAltitudeRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_GetReturnToLaunchAltitudeRequest_action_2faction_2eproto.base);
  return *internal_default_instance();
}


void GetReturnToLaunchAltitudeRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.action.GetReturnToLaunchAltitudeRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* GetReturnToLaunchAltitudeRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<GetReturnToLaunchAltitudeRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      default: {
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool GetReturnToLaunchAltitudeRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mavsdk.rpc.action.GetReturnToLaunchAltitudeRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:mavsdk.rpc.action.GetReturnToLaunchAltitudeRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mavsdk.rpc.action.GetReturnToLaunchAltitudeRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void GetReturnToLaunchAltitudeRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mavsdk.rpc.action.GetReturnToLaunchAltitudeRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:mavsdk.rpc.action.GetReturnToLaunchAltitudeRequest)
}

::google::protobuf::uint8* GetReturnToLaunchAltitudeRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.action.GetReturnToLaunchAltitudeRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.action.GetReturnToLaunchAltitudeRequest)
  return target;
}

size_t GetReturnToLaunchAltitudeRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.action.GetReturnToLaunchAltitudeRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetReturnToLaunchAltitudeRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mavsdk.rpc.action.GetReturnToLaunchAltitudeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetReturnToLaunchAltitudeRequest* source =
      ::google::protobuf::DynamicCastToGenerated<GetReturnToLaunchAltitudeRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mavsdk.rpc.action.GetReturnToLaunchAltitudeRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mavsdk.rpc.action.GetReturnToLaunchAltitudeRequest)
    MergeFrom(*source);
  }
}

void GetReturnToLaunchAltitudeRequest::MergeFrom(const GetReturnToLaunchAltitudeRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.action.GetReturnToLaunchAltitudeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void GetReturnToLaunchAltitudeRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mavsdk.rpc.action.GetReturnToLaunchAltitudeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetReturnToLaunchAltitudeRequest::CopyFrom(const GetReturnToLaunchAltitudeRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.action.GetReturnToLaunchAltitudeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetReturnToLaunchAltitudeRequest::IsInitialized() const {
  return true;
}

void GetReturnToLaunchAltitudeRequest::Swap(GetReturnToLaunchAltitudeRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetReturnToLaunchAltitudeRequest::InternalSwap(GetReturnToLaunchAltitudeRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetReturnToLaunchAltitudeRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_action_2faction_2eproto);
  return ::file_level_metadata_action_2faction_2eproto[kIndexInFileMessages];
}


// ===================================================================

void GetReturnToLaunchAltitudeResponse::InitAsDefaultInstance() {
  ::mavsdk::rpc::action::_GetReturnToLaunchAltitudeResponse_default_instance_._instance.get_mutable()->action_result_ = const_cast< ::mavsdk::rpc::action::ActionResult*>(
      ::mavsdk::rpc::action::ActionResult::internal_default_instance());
}
class GetReturnToLaunchAltitudeResponse::HasBitSetters {
 public:
  static const ::mavsdk::rpc::action::ActionResult& action_result(const GetReturnToLaunchAltitudeResponse* msg);
};

const ::mavsdk::rpc::action::ActionResult&
GetReturnToLaunchAltitudeResponse::HasBitSetters::action_result(const GetReturnToLaunchAltitudeResponse* msg) {
  return *msg->action_result_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetReturnToLaunchAltitudeResponse::kActionResultFieldNumber;
const int GetReturnToLaunchAltitudeResponse::kRelativeAltitudeMFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetReturnToLaunchAltitudeResponse::GetReturnToLaunchAltitudeResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:mavsdk.rpc.action.GetReturnToLaunchAltitudeResponse)
}
GetReturnToLaunchAltitudeResponse::GetReturnToLaunchAltitudeResponse(const GetReturnToLaunchAltitudeResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_action_result()) {
    action_result_ = new ::mavsdk::rpc::action::ActionResult(*from.action_result_);
  } else {
    action_result_ = nullptr;
  }
  relative_altitude_m_ = from.relative_altitude_m_;
  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.action.GetReturnToLaunchAltitudeResponse)
}

void GetReturnToLaunchAltitudeResponse::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_GetReturnToLaunchAltitudeResponse_action_2faction_2eproto.base);
  ::memset(&action_result_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&relative_altitude_m_) -
      reinterpret_cast<char*>(&action_result_)) + sizeof(relative_altitude_m_));
}

GetReturnToLaunchAltitudeResponse::~GetReturnToLaunchAltitudeResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.action.GetReturnToLaunchAltitudeResponse)
  SharedDtor();
}

void GetReturnToLaunchAltitudeResponse::SharedDtor() {
  if (this != internal_default_instance()) delete action_result_;
}

void GetReturnToLaunchAltitudeResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetReturnToLaunchAltitudeResponse& GetReturnToLaunchAltitudeResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_GetReturnToLaunchAltitudeResponse_action_2faction_2eproto.base);
  return *internal_default_instance();
}


void GetReturnToLaunchAltitudeResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.action.GetReturnToLaunchAltitudeResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && action_result_ != nullptr) {
    delete action_result_;
  }
  action_result_ = nullptr;
  relative_altitude_m_ = 0;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* GetReturnToLaunchAltitudeResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<GetReturnToLaunchAltitudeResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .mavsdk.rpc.action.ActionResult action_result = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::mavsdk::rpc::action::ActionResult::_InternalParse;
        object = msg->mutable_action_result();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // float relative_altitude_m = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 21) goto handle_unusual;
        msg->set_relative_altitude_m(::google::protobuf::io::UnalignedLoad<float>(ptr));
        ptr += sizeof(float);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool GetReturnToLaunchAltitudeResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mavsdk.rpc.action.GetReturnToLaunchAltitudeResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .mavsdk.rpc.action.ActionResult action_result = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_action_result()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float relative_altitude_m = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (21 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &relative_altitude_m_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mavsdk.rpc.action.GetReturnToLaunchAltitudeResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mavsdk.rpc.action.GetReturnToLaunchAltitudeResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void GetReturnToLaunchAltitudeResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mavsdk.rpc.action.GetReturnToLaunchAltitudeResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .mavsdk.rpc.action.ActionResult action_result = 1;
  if (this->has_action_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::action_result(this), output);
  }

  // float relative_altitude_m = 2;
  if (this->relative_altitude_m() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->relative_altitude_m(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:mavsdk.rpc.action.GetReturnToLaunchAltitudeResponse)
}

::google::protobuf::uint8* GetReturnToLaunchAltitudeResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.action.GetReturnToLaunchAltitudeResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .mavsdk.rpc.action.ActionResult action_result = 1;
  if (this->has_action_result()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::action_result(this), target);
  }

  // float relative_altitude_m = 2;
  if (this->relative_altitude_m() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->relative_altitude_m(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.action.GetReturnToLaunchAltitudeResponse)
  return target;
}

size_t GetReturnToLaunchAltitudeResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.action.GetReturnToLaunchAltitudeResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mavsdk.rpc.action.ActionResult action_result = 1;
  if (this->has_action_result()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *action_result_);
  }

  // float relative_altitude_m = 2;
  if (this->relative_altitude_m() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetReturnToLaunchAltitudeResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mavsdk.rpc.action.GetReturnToLaunchAltitudeResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetReturnToLaunchAltitudeResponse* source =
      ::google::protobuf::DynamicCastToGenerated<GetReturnToLaunchAltitudeResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mavsdk.rpc.action.GetReturnToLaunchAltitudeResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mavsdk.rpc.action.GetReturnToLaunchAltitudeResponse)
    MergeFrom(*source);
  }
}

void GetReturnToLaunchAltitudeResponse::MergeFrom(const GetReturnToLaunchAltitudeResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.action.GetReturnToLaunchAltitudeResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_action_result()) {
    mutable_action_result()->::mavsdk::rpc::action::ActionResult::MergeFrom(from.action_result());
  }
  if (from.relative_altitude_m() != 0) {
    set_relative_altitude_m(from.relative_altitude_m());
  }
}

void GetReturnToLaunchAltitudeResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mavsdk.rpc.action.GetReturnToLaunchAltitudeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetReturnToLaunchAltitudeResponse::CopyFrom(const GetReturnToLaunchAltitudeResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.action.GetReturnToLaunchAltitudeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetReturnToLaunchAltitudeResponse::IsInitialized() const {
  return true;
}

void GetReturnToLaunchAltitudeResponse::Swap(GetReturnToLaunchAltitudeResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetReturnToLaunchAltitudeResponse::InternalSwap(GetReturnToLaunchAltitudeResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(action_result_, other->action_result_);
  swap(relative_altitude_m_, other->relative_altitude_m_);
}

::google::protobuf::Metadata GetReturnToLaunchAltitudeResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_action_2faction_2eproto);
  return ::file_level_metadata_action_2faction_2eproto[kIndexInFileMessages];
}


// ===================================================================

void SetReturnToLaunchAltitudeRequest::InitAsDefaultInstance() {
}
class SetReturnToLaunchAltitudeRequest::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetReturnToLaunchAltitudeRequest::kRelativeAltitudeMFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetReturnToLaunchAltitudeRequest::SetReturnToLaunchAltitudeRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:mavsdk.rpc.action.SetReturnToLaunchAltitudeRequest)
}
SetReturnToLaunchAltitudeRequest::SetReturnToLaunchAltitudeRequest(const SetReturnToLaunchAltitudeRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  relative_altitude_m_ = from.relative_altitude_m_;
  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.action.SetReturnToLaunchAltitudeRequest)
}

void SetReturnToLaunchAltitudeRequest::SharedCtor() {
  relative_altitude_m_ = 0;
}

SetReturnToLaunchAltitudeRequest::~SetReturnToLaunchAltitudeRequest() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.action.SetReturnToLaunchAltitudeRequest)
  SharedDtor();
}

void SetReturnToLaunchAltitudeRequest::SharedDtor() {
}

void SetReturnToLaunchAltitudeRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SetReturnToLaunchAltitudeRequest& SetReturnToLaunchAltitudeRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_SetReturnToLaunchAltitudeRequest_action_2faction_2eproto.base);
  return *internal_default_instance();
}


void SetReturnToLaunchAltitudeRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.action.SetReturnToLaunchAltitudeRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  relative_altitude_m_ = 0;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* SetReturnToLaunchAltitudeRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<SetReturnToLaunchAltitudeRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // float relative_altitude_m = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 13) goto handle_unusual;
        msg->set_relative_altitude_m(::google::protobuf::io::UnalignedLoad<float>(ptr));
        ptr += sizeof(float);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool SetReturnToLaunchAltitudeRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mavsdk.rpc.action.SetReturnToLaunchAltitudeRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // float relative_altitude_m = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (13 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &relative_altitude_m_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mavsdk.rpc.action.SetReturnToLaunchAltitudeRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mavsdk.rpc.action.SetReturnToLaunchAltitudeRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void SetReturnToLaunchAltitudeRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mavsdk.rpc.action.SetReturnToLaunchAltitudeRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float relative_altitude_m = 1;
  if (this->relative_altitude_m() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->relative_altitude_m(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:mavsdk.rpc.action.SetReturnToLaunchAltitudeRequest)
}

::google::protobuf::uint8* SetReturnToLaunchAltitudeRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.action.SetReturnToLaunchAltitudeRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float relative_altitude_m = 1;
  if (this->relative_altitude_m() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->relative_altitude_m(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.action.SetReturnToLaunchAltitudeRequest)
  return target;
}

size_t SetReturnToLaunchAltitudeRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.action.SetReturnToLaunchAltitudeRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // float relative_altitude_m = 1;
  if (this->relative_altitude_m() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SetReturnToLaunchAltitudeRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mavsdk.rpc.action.SetReturnToLaunchAltitudeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SetReturnToLaunchAltitudeRequest* source =
      ::google::protobuf::DynamicCastToGenerated<SetReturnToLaunchAltitudeRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mavsdk.rpc.action.SetReturnToLaunchAltitudeRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mavsdk.rpc.action.SetReturnToLaunchAltitudeRequest)
    MergeFrom(*source);
  }
}

void SetReturnToLaunchAltitudeRequest::MergeFrom(const SetReturnToLaunchAltitudeRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.action.SetReturnToLaunchAltitudeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.relative_altitude_m() != 0) {
    set_relative_altitude_m(from.relative_altitude_m());
  }
}

void SetReturnToLaunchAltitudeRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mavsdk.rpc.action.SetReturnToLaunchAltitudeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetReturnToLaunchAltitudeRequest::CopyFrom(const SetReturnToLaunchAltitudeRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.action.SetReturnToLaunchAltitudeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetReturnToLaunchAltitudeRequest::IsInitialized() const {
  return true;
}

void SetReturnToLaunchAltitudeRequest::Swap(SetReturnToLaunchAltitudeRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetReturnToLaunchAltitudeRequest::InternalSwap(SetReturnToLaunchAltitudeRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(relative_altitude_m_, other->relative_altitude_m_);
}

::google::protobuf::Metadata SetReturnToLaunchAltitudeRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_action_2faction_2eproto);
  return ::file_level_metadata_action_2faction_2eproto[kIndexInFileMessages];
}


// ===================================================================

void SetReturnToLaunchAltitudeResponse::InitAsDefaultInstance() {
  ::mavsdk::rpc::action::_SetReturnToLaunchAltitudeResponse_default_instance_._instance.get_mutable()->action_result_ = const_cast< ::mavsdk::rpc::action::ActionResult*>(
      ::mavsdk::rpc::action::ActionResult::internal_default_instance());
}
class SetReturnToLaunchAltitudeResponse::HasBitSetters {
 public:
  static const ::mavsdk::rpc::action::ActionResult& action_result(const SetReturnToLaunchAltitudeResponse* msg);
};

const ::mavsdk::rpc::action::ActionResult&
SetReturnToLaunchAltitudeResponse::HasBitSetters::action_result(const SetReturnToLaunchAltitudeResponse* msg) {
  return *msg->action_result_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetReturnToLaunchAltitudeResponse::kActionResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetReturnToLaunchAltitudeResponse::SetReturnToLaunchAltitudeResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:mavsdk.rpc.action.SetReturnToLaunchAltitudeResponse)
}
SetReturnToLaunchAltitudeResponse::SetReturnToLaunchAltitudeResponse(const SetReturnToLaunchAltitudeResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_action_result()) {
    action_result_ = new ::mavsdk::rpc::action::ActionResult(*from.action_result_);
  } else {
    action_result_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.action.SetReturnToLaunchAltitudeResponse)
}

void SetReturnToLaunchAltitudeResponse::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_SetReturnToLaunchAltitudeResponse_action_2faction_2eproto.base);
  action_result_ = nullptr;
}

SetReturnToLaunchAltitudeResponse::~SetReturnToLaunchAltitudeResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.action.SetReturnToLaunchAltitudeResponse)
  SharedDtor();
}

void SetReturnToLaunchAltitudeResponse::SharedDtor() {
  if (this != internal_default_instance()) delete action_result_;
}

void SetReturnToLaunchAltitudeResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SetReturnToLaunchAltitudeResponse& SetReturnToLaunchAltitudeResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_SetReturnToLaunchAltitudeResponse_action_2faction_2eproto.base);
  return *internal_default_instance();
}


void SetReturnToLaunchAltitudeResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.action.SetReturnToLaunchAltitudeResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && action_result_ != nullptr) {
    delete action_result_;
  }
  action_result_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* SetReturnToLaunchAltitudeResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<SetReturnToLaunchAltitudeResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .mavsdk.rpc.action.ActionResult action_result = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::mavsdk::rpc::action::ActionResult::_InternalParse;
        object = msg->mutable_action_result();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool SetReturnToLaunchAltitudeResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mavsdk.rpc.action.SetReturnToLaunchAltitudeResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .mavsdk.rpc.action.ActionResult action_result = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_action_result()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mavsdk.rpc.action.SetReturnToLaunchAltitudeResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mavsdk.rpc.action.SetReturnToLaunchAltitudeResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void SetReturnToLaunchAltitudeResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mavsdk.rpc.action.SetReturnToLaunchAltitudeResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .mavsdk.rpc.action.ActionResult action_result = 1;
  if (this->has_action_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::action_result(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:mavsdk.rpc.action.SetReturnToLaunchAltitudeResponse)
}

::google::protobuf::uint8* SetReturnToLaunchAltitudeResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.action.SetReturnToLaunchAltitudeResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .mavsdk.rpc.action.ActionResult action_result = 1;
  if (this->has_action_result()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::action_result(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.action.SetReturnToLaunchAltitudeResponse)
  return target;
}

size_t SetReturnToLaunchAltitudeResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.action.SetReturnToLaunchAltitudeResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mavsdk.rpc.action.ActionResult action_result = 1;
  if (this->has_action_result()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *action_result_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SetReturnToLaunchAltitudeResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mavsdk.rpc.action.SetReturnToLaunchAltitudeResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const SetReturnToLaunchAltitudeResponse* source =
      ::google::protobuf::DynamicCastToGenerated<SetReturnToLaunchAltitudeResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mavsdk.rpc.action.SetReturnToLaunchAltitudeResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mavsdk.rpc.action.SetReturnToLaunchAltitudeResponse)
    MergeFrom(*source);
  }
}

void SetReturnToLaunchAltitudeResponse::MergeFrom(const SetReturnToLaunchAltitudeResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.action.SetReturnToLaunchAltitudeResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_action_result()) {
    mutable_action_result()->::mavsdk::rpc::action::ActionResult::MergeFrom(from.action_result());
  }
}

void SetReturnToLaunchAltitudeResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mavsdk.rpc.action.SetReturnToLaunchAltitudeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetReturnToLaunchAltitudeResponse::CopyFrom(const SetReturnToLaunchAltitudeResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.action.SetReturnToLaunchAltitudeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetReturnToLaunchAltitudeResponse::IsInitialized() const {
  return true;
}

void SetReturnToLaunchAltitudeResponse::Swap(SetReturnToLaunchAltitudeResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetReturnToLaunchAltitudeResponse::InternalSwap(SetReturnToLaunchAltitudeResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(action_result_, other->action_result_);
}

::google::protobuf::Metadata SetReturnToLaunchAltitudeResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_action_2faction_2eproto);
  return ::file_level_metadata_action_2faction_2eproto[kIndexInFileMessages];
}


// ===================================================================

void ActionResult::InitAsDefaultInstance() {
}
class ActionResult::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ActionResult::kResultFieldNumber;
const int ActionResult::kResultStrFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ActionResult::ActionResult()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:mavsdk.rpc.action.ActionResult)
}
ActionResult::ActionResult(const ActionResult& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  result_str_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.result_str().size() > 0) {
    result_str_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.result_str_);
  }
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.action.ActionResult)
}

void ActionResult::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_ActionResult_action_2faction_2eproto.base);
  result_str_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  result_ = 0;
}

ActionResult::~ActionResult() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.action.ActionResult)
  SharedDtor();
}

void ActionResult::SharedDtor() {
  result_str_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ActionResult::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ActionResult& ActionResult::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ActionResult_action_2faction_2eproto.base);
  return *internal_default_instance();
}


void ActionResult::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.action.ActionResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_str_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  result_ = 0;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ActionResult::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ActionResult*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .mavsdk.rpc.action.ActionResult.Result result = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
        msg->set_result(static_cast<::mavsdk::rpc::action::ActionResult_Result>(val));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // string result_str = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("mavsdk.rpc.action.ActionResult.result_str");
        object = msg->mutable_result_str();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ActionResult::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mavsdk.rpc.action.ActionResult)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .mavsdk.rpc.action.ActionResult.Result result = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_result(static_cast< ::mavsdk::rpc::action::ActionResult_Result >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string result_str = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_result_str()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->result_str().data(), static_cast<int>(this->result_str().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "mavsdk.rpc.action.ActionResult.result_str"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mavsdk.rpc.action.ActionResult)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mavsdk.rpc.action.ActionResult)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ActionResult::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mavsdk.rpc.action.ActionResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .mavsdk.rpc.action.ActionResult.Result result = 1;
  if (this->result() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->result(), output);
  }

  // string result_str = 2;
  if (this->result_str().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->result_str().data(), static_cast<int>(this->result_str().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "mavsdk.rpc.action.ActionResult.result_str");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->result_str(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:mavsdk.rpc.action.ActionResult)
}

::google::protobuf::uint8* ActionResult::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.action.ActionResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .mavsdk.rpc.action.ActionResult.Result result = 1;
  if (this->result() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->result(), target);
  }

  // string result_str = 2;
  if (this->result_str().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->result_str().data(), static_cast<int>(this->result_str().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "mavsdk.rpc.action.ActionResult.result_str");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->result_str(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.action.ActionResult)
  return target;
}

size_t ActionResult::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.action.ActionResult)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string result_str = 2;
  if (this->result_str().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->result_str());
  }

  // .mavsdk.rpc.action.ActionResult.Result result = 1;
  if (this->result() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->result());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ActionResult::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mavsdk.rpc.action.ActionResult)
  GOOGLE_DCHECK_NE(&from, this);
  const ActionResult* source =
      ::google::protobuf::DynamicCastToGenerated<ActionResult>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mavsdk.rpc.action.ActionResult)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mavsdk.rpc.action.ActionResult)
    MergeFrom(*source);
  }
}

void ActionResult::MergeFrom(const ActionResult& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.action.ActionResult)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.result_str().size() > 0) {

    result_str_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.result_str_);
  }
  if (from.result() != 0) {
    set_result(from.result());
  }
}

void ActionResult::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mavsdk.rpc.action.ActionResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ActionResult::CopyFrom(const ActionResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.action.ActionResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ActionResult::IsInitialized() const {
  return true;
}

void ActionResult::Swap(ActionResult* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ActionResult::InternalSwap(ActionResult* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  result_str_.Swap(&other->result_str_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(result_, other->result_);
}

::google::protobuf::Metadata ActionResult::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_action_2faction_2eproto);
  return ::file_level_metadata_action_2faction_2eproto[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace action
}  // namespace rpc
}  // namespace mavsdk
namespace google {
namespace protobuf {
template<> PROTOBUF_NOINLINE ::mavsdk::rpc::action::ArmRequest* Arena::CreateMaybeMessage< ::mavsdk::rpc::action::ArmRequest >(Arena* arena) {
  return Arena::CreateInternal< ::mavsdk::rpc::action::ArmRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::mavsdk::rpc::action::ArmResponse* Arena::CreateMaybeMessage< ::mavsdk::rpc::action::ArmResponse >(Arena* arena) {
  return Arena::CreateInternal< ::mavsdk::rpc::action::ArmResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::mavsdk::rpc::action::DisarmRequest* Arena::CreateMaybeMessage< ::mavsdk::rpc::action::DisarmRequest >(Arena* arena) {
  return Arena::CreateInternal< ::mavsdk::rpc::action::DisarmRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::mavsdk::rpc::action::DisarmResponse* Arena::CreateMaybeMessage< ::mavsdk::rpc::action::DisarmResponse >(Arena* arena) {
  return Arena::CreateInternal< ::mavsdk::rpc::action::DisarmResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::mavsdk::rpc::action::TakeoffRequest* Arena::CreateMaybeMessage< ::mavsdk::rpc::action::TakeoffRequest >(Arena* arena) {
  return Arena::CreateInternal< ::mavsdk::rpc::action::TakeoffRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::mavsdk::rpc::action::TakeoffResponse* Arena::CreateMaybeMessage< ::mavsdk::rpc::action::TakeoffResponse >(Arena* arena) {
  return Arena::CreateInternal< ::mavsdk::rpc::action::TakeoffResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::mavsdk::rpc::action::LandRequest* Arena::CreateMaybeMessage< ::mavsdk::rpc::action::LandRequest >(Arena* arena) {
  return Arena::CreateInternal< ::mavsdk::rpc::action::LandRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::mavsdk::rpc::action::LandResponse* Arena::CreateMaybeMessage< ::mavsdk::rpc::action::LandResponse >(Arena* arena) {
  return Arena::CreateInternal< ::mavsdk::rpc::action::LandResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::mavsdk::rpc::action::RebootRequest* Arena::CreateMaybeMessage< ::mavsdk::rpc::action::RebootRequest >(Arena* arena) {
  return Arena::CreateInternal< ::mavsdk::rpc::action::RebootRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::mavsdk::rpc::action::RebootResponse* Arena::CreateMaybeMessage< ::mavsdk::rpc::action::RebootResponse >(Arena* arena) {
  return Arena::CreateInternal< ::mavsdk::rpc::action::RebootResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::mavsdk::rpc::action::KillRequest* Arena::CreateMaybeMessage< ::mavsdk::rpc::action::KillRequest >(Arena* arena) {
  return Arena::CreateInternal< ::mavsdk::rpc::action::KillRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::mavsdk::rpc::action::KillResponse* Arena::CreateMaybeMessage< ::mavsdk::rpc::action::KillResponse >(Arena* arena) {
  return Arena::CreateInternal< ::mavsdk::rpc::action::KillResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::mavsdk::rpc::action::ReturnToLaunchRequest* Arena::CreateMaybeMessage< ::mavsdk::rpc::action::ReturnToLaunchRequest >(Arena* arena) {
  return Arena::CreateInternal< ::mavsdk::rpc::action::ReturnToLaunchRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::mavsdk::rpc::action::ReturnToLaunchResponse* Arena::CreateMaybeMessage< ::mavsdk::rpc::action::ReturnToLaunchResponse >(Arena* arena) {
  return Arena::CreateInternal< ::mavsdk::rpc::action::ReturnToLaunchResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::mavsdk::rpc::action::TransitionToFixedWingRequest* Arena::CreateMaybeMessage< ::mavsdk::rpc::action::TransitionToFixedWingRequest >(Arena* arena) {
  return Arena::CreateInternal< ::mavsdk::rpc::action::TransitionToFixedWingRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::mavsdk::rpc::action::TransitionToFixedWingResponse* Arena::CreateMaybeMessage< ::mavsdk::rpc::action::TransitionToFixedWingResponse >(Arena* arena) {
  return Arena::CreateInternal< ::mavsdk::rpc::action::TransitionToFixedWingResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::mavsdk::rpc::action::TransitionToMulticopterRequest* Arena::CreateMaybeMessage< ::mavsdk::rpc::action::TransitionToMulticopterRequest >(Arena* arena) {
  return Arena::CreateInternal< ::mavsdk::rpc::action::TransitionToMulticopterRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::mavsdk::rpc::action::TransitionToMulticopterResponse* Arena::CreateMaybeMessage< ::mavsdk::rpc::action::TransitionToMulticopterResponse >(Arena* arena) {
  return Arena::CreateInternal< ::mavsdk::rpc::action::TransitionToMulticopterResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::mavsdk::rpc::action::GetTakeoffAltitudeRequest* Arena::CreateMaybeMessage< ::mavsdk::rpc::action::GetTakeoffAltitudeRequest >(Arena* arena) {
  return Arena::CreateInternal< ::mavsdk::rpc::action::GetTakeoffAltitudeRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::mavsdk::rpc::action::GetTakeoffAltitudeResponse* Arena::CreateMaybeMessage< ::mavsdk::rpc::action::GetTakeoffAltitudeResponse >(Arena* arena) {
  return Arena::CreateInternal< ::mavsdk::rpc::action::GetTakeoffAltitudeResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::mavsdk::rpc::action::SetTakeoffAltitudeRequest* Arena::CreateMaybeMessage< ::mavsdk::rpc::action::SetTakeoffAltitudeRequest >(Arena* arena) {
  return Arena::CreateInternal< ::mavsdk::rpc::action::SetTakeoffAltitudeRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::mavsdk::rpc::action::SetTakeoffAltitudeResponse* Arena::CreateMaybeMessage< ::mavsdk::rpc::action::SetTakeoffAltitudeResponse >(Arena* arena) {
  return Arena::CreateInternal< ::mavsdk::rpc::action::SetTakeoffAltitudeResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::mavsdk::rpc::action::GetMaximumSpeedRequest* Arena::CreateMaybeMessage< ::mavsdk::rpc::action::GetMaximumSpeedRequest >(Arena* arena) {
  return Arena::CreateInternal< ::mavsdk::rpc::action::GetMaximumSpeedRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::mavsdk::rpc::action::GetMaximumSpeedResponse* Arena::CreateMaybeMessage< ::mavsdk::rpc::action::GetMaximumSpeedResponse >(Arena* arena) {
  return Arena::CreateInternal< ::mavsdk::rpc::action::GetMaximumSpeedResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::mavsdk::rpc::action::SetMaximumSpeedRequest* Arena::CreateMaybeMessage< ::mavsdk::rpc::action::SetMaximumSpeedRequest >(Arena* arena) {
  return Arena::CreateInternal< ::mavsdk::rpc::action::SetMaximumSpeedRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::mavsdk::rpc::action::SetMaximumSpeedResponse* Arena::CreateMaybeMessage< ::mavsdk::rpc::action::SetMaximumSpeedResponse >(Arena* arena) {
  return Arena::CreateInternal< ::mavsdk::rpc::action::SetMaximumSpeedResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::mavsdk::rpc::action::GetReturnToLaunchAltitudeRequest* Arena::CreateMaybeMessage< ::mavsdk::rpc::action::GetReturnToLaunchAltitudeRequest >(Arena* arena) {
  return Arena::CreateInternal< ::mavsdk::rpc::action::GetReturnToLaunchAltitudeRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::mavsdk::rpc::action::GetReturnToLaunchAltitudeResponse* Arena::CreateMaybeMessage< ::mavsdk::rpc::action::GetReturnToLaunchAltitudeResponse >(Arena* arena) {
  return Arena::CreateInternal< ::mavsdk::rpc::action::GetReturnToLaunchAltitudeResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::mavsdk::rpc::action::SetReturnToLaunchAltitudeRequest* Arena::CreateMaybeMessage< ::mavsdk::rpc::action::SetReturnToLaunchAltitudeRequest >(Arena* arena) {
  return Arena::CreateInternal< ::mavsdk::rpc::action::SetReturnToLaunchAltitudeRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::mavsdk::rpc::action::SetReturnToLaunchAltitudeResponse* Arena::CreateMaybeMessage< ::mavsdk::rpc::action::SetReturnToLaunchAltitudeResponse >(Arena* arena) {
  return Arena::CreateInternal< ::mavsdk::rpc::action::SetReturnToLaunchAltitudeResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::mavsdk::rpc::action::ActionResult* Arena::CreateMaybeMessage< ::mavsdk::rpc::action::ActionResult >(Arena* arena) {
  return Arena::CreateInternal< ::mavsdk::rpc::action::ActionResult >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
