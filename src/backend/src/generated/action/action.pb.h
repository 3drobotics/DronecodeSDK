// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: action/action.proto

#ifndef PROTOBUF_INCLUDED_action_2faction_2eproto
#define PROTOBUF_INCLUDED_action_2faction_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3007000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3007001 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_action_2faction_2eproto

// Internal implementation detail -- do not use these members.
struct TableStruct_action_2faction_2eproto {
  static const ::google::protobuf::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::ParseTable schema[31]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors_action_2faction_2eproto();
namespace mavsdk {
namespace rpc {
namespace action {
class ActionResult;
class ActionResultDefaultTypeInternal;
extern ActionResultDefaultTypeInternal _ActionResult_default_instance_;
class ArmRequest;
class ArmRequestDefaultTypeInternal;
extern ArmRequestDefaultTypeInternal _ArmRequest_default_instance_;
class ArmResponse;
class ArmResponseDefaultTypeInternal;
extern ArmResponseDefaultTypeInternal _ArmResponse_default_instance_;
class DisarmRequest;
class DisarmRequestDefaultTypeInternal;
extern DisarmRequestDefaultTypeInternal _DisarmRequest_default_instance_;
class DisarmResponse;
class DisarmResponseDefaultTypeInternal;
extern DisarmResponseDefaultTypeInternal _DisarmResponse_default_instance_;
class GetMaximumSpeedRequest;
class GetMaximumSpeedRequestDefaultTypeInternal;
extern GetMaximumSpeedRequestDefaultTypeInternal _GetMaximumSpeedRequest_default_instance_;
class GetMaximumSpeedResponse;
class GetMaximumSpeedResponseDefaultTypeInternal;
extern GetMaximumSpeedResponseDefaultTypeInternal _GetMaximumSpeedResponse_default_instance_;
class GetReturnToLaunchAltitudeRequest;
class GetReturnToLaunchAltitudeRequestDefaultTypeInternal;
extern GetReturnToLaunchAltitudeRequestDefaultTypeInternal _GetReturnToLaunchAltitudeRequest_default_instance_;
class GetReturnToLaunchAltitudeResponse;
class GetReturnToLaunchAltitudeResponseDefaultTypeInternal;
extern GetReturnToLaunchAltitudeResponseDefaultTypeInternal _GetReturnToLaunchAltitudeResponse_default_instance_;
class GetTakeoffAltitudeRequest;
class GetTakeoffAltitudeRequestDefaultTypeInternal;
extern GetTakeoffAltitudeRequestDefaultTypeInternal _GetTakeoffAltitudeRequest_default_instance_;
class GetTakeoffAltitudeResponse;
class GetTakeoffAltitudeResponseDefaultTypeInternal;
extern GetTakeoffAltitudeResponseDefaultTypeInternal _GetTakeoffAltitudeResponse_default_instance_;
class KillRequest;
class KillRequestDefaultTypeInternal;
extern KillRequestDefaultTypeInternal _KillRequest_default_instance_;
class KillResponse;
class KillResponseDefaultTypeInternal;
extern KillResponseDefaultTypeInternal _KillResponse_default_instance_;
class LandRequest;
class LandRequestDefaultTypeInternal;
extern LandRequestDefaultTypeInternal _LandRequest_default_instance_;
class LandResponse;
class LandResponseDefaultTypeInternal;
extern LandResponseDefaultTypeInternal _LandResponse_default_instance_;
class RebootRequest;
class RebootRequestDefaultTypeInternal;
extern RebootRequestDefaultTypeInternal _RebootRequest_default_instance_;
class RebootResponse;
class RebootResponseDefaultTypeInternal;
extern RebootResponseDefaultTypeInternal _RebootResponse_default_instance_;
class ReturnToLaunchRequest;
class ReturnToLaunchRequestDefaultTypeInternal;
extern ReturnToLaunchRequestDefaultTypeInternal _ReturnToLaunchRequest_default_instance_;
class ReturnToLaunchResponse;
class ReturnToLaunchResponseDefaultTypeInternal;
extern ReturnToLaunchResponseDefaultTypeInternal _ReturnToLaunchResponse_default_instance_;
class SetMaximumSpeedRequest;
class SetMaximumSpeedRequestDefaultTypeInternal;
extern SetMaximumSpeedRequestDefaultTypeInternal _SetMaximumSpeedRequest_default_instance_;
class SetMaximumSpeedResponse;
class SetMaximumSpeedResponseDefaultTypeInternal;
extern SetMaximumSpeedResponseDefaultTypeInternal _SetMaximumSpeedResponse_default_instance_;
class SetReturnToLaunchAltitudeRequest;
class SetReturnToLaunchAltitudeRequestDefaultTypeInternal;
extern SetReturnToLaunchAltitudeRequestDefaultTypeInternal _SetReturnToLaunchAltitudeRequest_default_instance_;
class SetReturnToLaunchAltitudeResponse;
class SetReturnToLaunchAltitudeResponseDefaultTypeInternal;
extern SetReturnToLaunchAltitudeResponseDefaultTypeInternal _SetReturnToLaunchAltitudeResponse_default_instance_;
class SetTakeoffAltitudeRequest;
class SetTakeoffAltitudeRequestDefaultTypeInternal;
extern SetTakeoffAltitudeRequestDefaultTypeInternal _SetTakeoffAltitudeRequest_default_instance_;
class SetTakeoffAltitudeResponse;
class SetTakeoffAltitudeResponseDefaultTypeInternal;
extern SetTakeoffAltitudeResponseDefaultTypeInternal _SetTakeoffAltitudeResponse_default_instance_;
class TakeoffRequest;
class TakeoffRequestDefaultTypeInternal;
extern TakeoffRequestDefaultTypeInternal _TakeoffRequest_default_instance_;
class TakeoffResponse;
class TakeoffResponseDefaultTypeInternal;
extern TakeoffResponseDefaultTypeInternal _TakeoffResponse_default_instance_;
class TransitionToFixedWingRequest;
class TransitionToFixedWingRequestDefaultTypeInternal;
extern TransitionToFixedWingRequestDefaultTypeInternal _TransitionToFixedWingRequest_default_instance_;
class TransitionToFixedWingResponse;
class TransitionToFixedWingResponseDefaultTypeInternal;
extern TransitionToFixedWingResponseDefaultTypeInternal _TransitionToFixedWingResponse_default_instance_;
class TransitionToMulticopterRequest;
class TransitionToMulticopterRequestDefaultTypeInternal;
extern TransitionToMulticopterRequestDefaultTypeInternal _TransitionToMulticopterRequest_default_instance_;
class TransitionToMulticopterResponse;
class TransitionToMulticopterResponseDefaultTypeInternal;
extern TransitionToMulticopterResponseDefaultTypeInternal _TransitionToMulticopterResponse_default_instance_;
}  // namespace action
}  // namespace rpc
}  // namespace mavsdk
namespace google {
namespace protobuf {
template<> ::mavsdk::rpc::action::ActionResult* Arena::CreateMaybeMessage<::mavsdk::rpc::action::ActionResult>(Arena*);
template<> ::mavsdk::rpc::action::ArmRequest* Arena::CreateMaybeMessage<::mavsdk::rpc::action::ArmRequest>(Arena*);
template<> ::mavsdk::rpc::action::ArmResponse* Arena::CreateMaybeMessage<::mavsdk::rpc::action::ArmResponse>(Arena*);
template<> ::mavsdk::rpc::action::DisarmRequest* Arena::CreateMaybeMessage<::mavsdk::rpc::action::DisarmRequest>(Arena*);
template<> ::mavsdk::rpc::action::DisarmResponse* Arena::CreateMaybeMessage<::mavsdk::rpc::action::DisarmResponse>(Arena*);
template<> ::mavsdk::rpc::action::GetMaximumSpeedRequest* Arena::CreateMaybeMessage<::mavsdk::rpc::action::GetMaximumSpeedRequest>(Arena*);
template<> ::mavsdk::rpc::action::GetMaximumSpeedResponse* Arena::CreateMaybeMessage<::mavsdk::rpc::action::GetMaximumSpeedResponse>(Arena*);
template<> ::mavsdk::rpc::action::GetReturnToLaunchAltitudeRequest* Arena::CreateMaybeMessage<::mavsdk::rpc::action::GetReturnToLaunchAltitudeRequest>(Arena*);
template<> ::mavsdk::rpc::action::GetReturnToLaunchAltitudeResponse* Arena::CreateMaybeMessage<::mavsdk::rpc::action::GetReturnToLaunchAltitudeResponse>(Arena*);
template<> ::mavsdk::rpc::action::GetTakeoffAltitudeRequest* Arena::CreateMaybeMessage<::mavsdk::rpc::action::GetTakeoffAltitudeRequest>(Arena*);
template<> ::mavsdk::rpc::action::GetTakeoffAltitudeResponse* Arena::CreateMaybeMessage<::mavsdk::rpc::action::GetTakeoffAltitudeResponse>(Arena*);
template<> ::mavsdk::rpc::action::KillRequest* Arena::CreateMaybeMessage<::mavsdk::rpc::action::KillRequest>(Arena*);
template<> ::mavsdk::rpc::action::KillResponse* Arena::CreateMaybeMessage<::mavsdk::rpc::action::KillResponse>(Arena*);
template<> ::mavsdk::rpc::action::LandRequest* Arena::CreateMaybeMessage<::mavsdk::rpc::action::LandRequest>(Arena*);
template<> ::mavsdk::rpc::action::LandResponse* Arena::CreateMaybeMessage<::mavsdk::rpc::action::LandResponse>(Arena*);
template<> ::mavsdk::rpc::action::RebootRequest* Arena::CreateMaybeMessage<::mavsdk::rpc::action::RebootRequest>(Arena*);
template<> ::mavsdk::rpc::action::RebootResponse* Arena::CreateMaybeMessage<::mavsdk::rpc::action::RebootResponse>(Arena*);
template<> ::mavsdk::rpc::action::ReturnToLaunchRequest* Arena::CreateMaybeMessage<::mavsdk::rpc::action::ReturnToLaunchRequest>(Arena*);
template<> ::mavsdk::rpc::action::ReturnToLaunchResponse* Arena::CreateMaybeMessage<::mavsdk::rpc::action::ReturnToLaunchResponse>(Arena*);
template<> ::mavsdk::rpc::action::SetMaximumSpeedRequest* Arena::CreateMaybeMessage<::mavsdk::rpc::action::SetMaximumSpeedRequest>(Arena*);
template<> ::mavsdk::rpc::action::SetMaximumSpeedResponse* Arena::CreateMaybeMessage<::mavsdk::rpc::action::SetMaximumSpeedResponse>(Arena*);
template<> ::mavsdk::rpc::action::SetReturnToLaunchAltitudeRequest* Arena::CreateMaybeMessage<::mavsdk::rpc::action::SetReturnToLaunchAltitudeRequest>(Arena*);
template<> ::mavsdk::rpc::action::SetReturnToLaunchAltitudeResponse* Arena::CreateMaybeMessage<::mavsdk::rpc::action::SetReturnToLaunchAltitudeResponse>(Arena*);
template<> ::mavsdk::rpc::action::SetTakeoffAltitudeRequest* Arena::CreateMaybeMessage<::mavsdk::rpc::action::SetTakeoffAltitudeRequest>(Arena*);
template<> ::mavsdk::rpc::action::SetTakeoffAltitudeResponse* Arena::CreateMaybeMessage<::mavsdk::rpc::action::SetTakeoffAltitudeResponse>(Arena*);
template<> ::mavsdk::rpc::action::TakeoffRequest* Arena::CreateMaybeMessage<::mavsdk::rpc::action::TakeoffRequest>(Arena*);
template<> ::mavsdk::rpc::action::TakeoffResponse* Arena::CreateMaybeMessage<::mavsdk::rpc::action::TakeoffResponse>(Arena*);
template<> ::mavsdk::rpc::action::TransitionToFixedWingRequest* Arena::CreateMaybeMessage<::mavsdk::rpc::action::TransitionToFixedWingRequest>(Arena*);
template<> ::mavsdk::rpc::action::TransitionToFixedWingResponse* Arena::CreateMaybeMessage<::mavsdk::rpc::action::TransitionToFixedWingResponse>(Arena*);
template<> ::mavsdk::rpc::action::TransitionToMulticopterRequest* Arena::CreateMaybeMessage<::mavsdk::rpc::action::TransitionToMulticopterRequest>(Arena*);
template<> ::mavsdk::rpc::action::TransitionToMulticopterResponse* Arena::CreateMaybeMessage<::mavsdk::rpc::action::TransitionToMulticopterResponse>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace mavsdk {
namespace rpc {
namespace action {

enum ActionResult_Result {
  ActionResult_Result_UNKNOWN = 0,
  ActionResult_Result_SUCCESS = 1,
  ActionResult_Result_NO_SYSTEM = 2,
  ActionResult_Result_CONNECTION_ERROR = 3,
  ActionResult_Result_BUSY = 4,
  ActionResult_Result_COMMAND_DENIED = 5,
  ActionResult_Result_COMMAND_DENIED_LANDED_STATE_UNKNOWN = 6,
  ActionResult_Result_COMMAND_DENIED_NOT_LANDED = 7,
  ActionResult_Result_TIMEOUT = 8,
  ActionResult_Result_VTOL_TRANSITION_SUPPORT_UNKNOWN = 9,
  ActionResult_Result_NO_VTOL_TRANSITION_SUPPORT = 10,
  ActionResult_Result_PARAMETER_ERROR = 11,
  ActionResult_Result_ActionResult_Result_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::google::protobuf::int32>::min(),
  ActionResult_Result_ActionResult_Result_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::google::protobuf::int32>::max()
};
bool ActionResult_Result_IsValid(int value);
const ActionResult_Result ActionResult_Result_Result_MIN = ActionResult_Result_UNKNOWN;
const ActionResult_Result ActionResult_Result_Result_MAX = ActionResult_Result_PARAMETER_ERROR;
const int ActionResult_Result_Result_ARRAYSIZE = ActionResult_Result_Result_MAX + 1;

const ::google::protobuf::EnumDescriptor* ActionResult_Result_descriptor();
inline const ::std::string& ActionResult_Result_Name(ActionResult_Result value) {
  return ::google::protobuf::internal::NameOfEnum(
    ActionResult_Result_descriptor(), value);
}
inline bool ActionResult_Result_Parse(
    const ::std::string& name, ActionResult_Result* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ActionResult_Result>(
    ActionResult_Result_descriptor(), name, value);
}
// ===================================================================

class ArmRequest :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mavsdk.rpc.action.ArmRequest) */ {
 public:
  ArmRequest();
  virtual ~ArmRequest();

  ArmRequest(const ArmRequest& from);

  inline ArmRequest& operator=(const ArmRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ArmRequest(ArmRequest&& from) noexcept
    : ArmRequest() {
    *this = ::std::move(from);
  }

  inline ArmRequest& operator=(ArmRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const ArmRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ArmRequest* internal_default_instance() {
    return reinterpret_cast<const ArmRequest*>(
               &_ArmRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(ArmRequest* other);
  friend void swap(ArmRequest& a, ArmRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ArmRequest* New() const final {
    return CreateMaybeMessage<ArmRequest>(nullptr);
  }

  ArmRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ArmRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ArmRequest& from);
  void MergeFrom(const ArmRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ArmRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:mavsdk.rpc.action.ArmRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_action_2faction_2eproto;
};
// -------------------------------------------------------------------

class ArmResponse :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mavsdk.rpc.action.ArmResponse) */ {
 public:
  ArmResponse();
  virtual ~ArmResponse();

  ArmResponse(const ArmResponse& from);

  inline ArmResponse& operator=(const ArmResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ArmResponse(ArmResponse&& from) noexcept
    : ArmResponse() {
    *this = ::std::move(from);
  }

  inline ArmResponse& operator=(ArmResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const ArmResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ArmResponse* internal_default_instance() {
    return reinterpret_cast<const ArmResponse*>(
               &_ArmResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(ArmResponse* other);
  friend void swap(ArmResponse& a, ArmResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ArmResponse* New() const final {
    return CreateMaybeMessage<ArmResponse>(nullptr);
  }

  ArmResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ArmResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ArmResponse& from);
  void MergeFrom(const ArmResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ArmResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .mavsdk.rpc.action.ActionResult action_result = 1;
  bool has_action_result() const;
  void clear_action_result();
  static const int kActionResultFieldNumber = 1;
  const ::mavsdk::rpc::action::ActionResult& action_result() const;
  ::mavsdk::rpc::action::ActionResult* release_action_result();
  ::mavsdk::rpc::action::ActionResult* mutable_action_result();
  void set_allocated_action_result(::mavsdk::rpc::action::ActionResult* action_result);

  // @@protoc_insertion_point(class_scope:mavsdk.rpc.action.ArmResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::mavsdk::rpc::action::ActionResult* action_result_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_action_2faction_2eproto;
};
// -------------------------------------------------------------------

class DisarmRequest :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mavsdk.rpc.action.DisarmRequest) */ {
 public:
  DisarmRequest();
  virtual ~DisarmRequest();

  DisarmRequest(const DisarmRequest& from);

  inline DisarmRequest& operator=(const DisarmRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DisarmRequest(DisarmRequest&& from) noexcept
    : DisarmRequest() {
    *this = ::std::move(from);
  }

  inline DisarmRequest& operator=(DisarmRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const DisarmRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DisarmRequest* internal_default_instance() {
    return reinterpret_cast<const DisarmRequest*>(
               &_DisarmRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(DisarmRequest* other);
  friend void swap(DisarmRequest& a, DisarmRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DisarmRequest* New() const final {
    return CreateMaybeMessage<DisarmRequest>(nullptr);
  }

  DisarmRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<DisarmRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const DisarmRequest& from);
  void MergeFrom(const DisarmRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DisarmRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:mavsdk.rpc.action.DisarmRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_action_2faction_2eproto;
};
// -------------------------------------------------------------------

class DisarmResponse :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mavsdk.rpc.action.DisarmResponse) */ {
 public:
  DisarmResponse();
  virtual ~DisarmResponse();

  DisarmResponse(const DisarmResponse& from);

  inline DisarmResponse& operator=(const DisarmResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DisarmResponse(DisarmResponse&& from) noexcept
    : DisarmResponse() {
    *this = ::std::move(from);
  }

  inline DisarmResponse& operator=(DisarmResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const DisarmResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DisarmResponse* internal_default_instance() {
    return reinterpret_cast<const DisarmResponse*>(
               &_DisarmResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(DisarmResponse* other);
  friend void swap(DisarmResponse& a, DisarmResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DisarmResponse* New() const final {
    return CreateMaybeMessage<DisarmResponse>(nullptr);
  }

  DisarmResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<DisarmResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const DisarmResponse& from);
  void MergeFrom(const DisarmResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DisarmResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .mavsdk.rpc.action.ActionResult action_result = 1;
  bool has_action_result() const;
  void clear_action_result();
  static const int kActionResultFieldNumber = 1;
  const ::mavsdk::rpc::action::ActionResult& action_result() const;
  ::mavsdk::rpc::action::ActionResult* release_action_result();
  ::mavsdk::rpc::action::ActionResult* mutable_action_result();
  void set_allocated_action_result(::mavsdk::rpc::action::ActionResult* action_result);

  // @@protoc_insertion_point(class_scope:mavsdk.rpc.action.DisarmResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::mavsdk::rpc::action::ActionResult* action_result_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_action_2faction_2eproto;
};
// -------------------------------------------------------------------

class TakeoffRequest :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mavsdk.rpc.action.TakeoffRequest) */ {
 public:
  TakeoffRequest();
  virtual ~TakeoffRequest();

  TakeoffRequest(const TakeoffRequest& from);

  inline TakeoffRequest& operator=(const TakeoffRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TakeoffRequest(TakeoffRequest&& from) noexcept
    : TakeoffRequest() {
    *this = ::std::move(from);
  }

  inline TakeoffRequest& operator=(TakeoffRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const TakeoffRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TakeoffRequest* internal_default_instance() {
    return reinterpret_cast<const TakeoffRequest*>(
               &_TakeoffRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(TakeoffRequest* other);
  friend void swap(TakeoffRequest& a, TakeoffRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TakeoffRequest* New() const final {
    return CreateMaybeMessage<TakeoffRequest>(nullptr);
  }

  TakeoffRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<TakeoffRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const TakeoffRequest& from);
  void MergeFrom(const TakeoffRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TakeoffRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:mavsdk.rpc.action.TakeoffRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_action_2faction_2eproto;
};
// -------------------------------------------------------------------

class TakeoffResponse :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mavsdk.rpc.action.TakeoffResponse) */ {
 public:
  TakeoffResponse();
  virtual ~TakeoffResponse();

  TakeoffResponse(const TakeoffResponse& from);

  inline TakeoffResponse& operator=(const TakeoffResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TakeoffResponse(TakeoffResponse&& from) noexcept
    : TakeoffResponse() {
    *this = ::std::move(from);
  }

  inline TakeoffResponse& operator=(TakeoffResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const TakeoffResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TakeoffResponse* internal_default_instance() {
    return reinterpret_cast<const TakeoffResponse*>(
               &_TakeoffResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void Swap(TakeoffResponse* other);
  friend void swap(TakeoffResponse& a, TakeoffResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TakeoffResponse* New() const final {
    return CreateMaybeMessage<TakeoffResponse>(nullptr);
  }

  TakeoffResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<TakeoffResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const TakeoffResponse& from);
  void MergeFrom(const TakeoffResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TakeoffResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .mavsdk.rpc.action.ActionResult action_result = 1;
  bool has_action_result() const;
  void clear_action_result();
  static const int kActionResultFieldNumber = 1;
  const ::mavsdk::rpc::action::ActionResult& action_result() const;
  ::mavsdk::rpc::action::ActionResult* release_action_result();
  ::mavsdk::rpc::action::ActionResult* mutable_action_result();
  void set_allocated_action_result(::mavsdk::rpc::action::ActionResult* action_result);

  // @@protoc_insertion_point(class_scope:mavsdk.rpc.action.TakeoffResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::mavsdk::rpc::action::ActionResult* action_result_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_action_2faction_2eproto;
};
// -------------------------------------------------------------------

class LandRequest :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mavsdk.rpc.action.LandRequest) */ {
 public:
  LandRequest();
  virtual ~LandRequest();

  LandRequest(const LandRequest& from);

  inline LandRequest& operator=(const LandRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  LandRequest(LandRequest&& from) noexcept
    : LandRequest() {
    *this = ::std::move(from);
  }

  inline LandRequest& operator=(LandRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const LandRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const LandRequest* internal_default_instance() {
    return reinterpret_cast<const LandRequest*>(
               &_LandRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  void Swap(LandRequest* other);
  friend void swap(LandRequest& a, LandRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline LandRequest* New() const final {
    return CreateMaybeMessage<LandRequest>(nullptr);
  }

  LandRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<LandRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const LandRequest& from);
  void MergeFrom(const LandRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(LandRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:mavsdk.rpc.action.LandRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_action_2faction_2eproto;
};
// -------------------------------------------------------------------

class LandResponse :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mavsdk.rpc.action.LandResponse) */ {
 public:
  LandResponse();
  virtual ~LandResponse();

  LandResponse(const LandResponse& from);

  inline LandResponse& operator=(const LandResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  LandResponse(LandResponse&& from) noexcept
    : LandResponse() {
    *this = ::std::move(from);
  }

  inline LandResponse& operator=(LandResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const LandResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const LandResponse* internal_default_instance() {
    return reinterpret_cast<const LandResponse*>(
               &_LandResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  void Swap(LandResponse* other);
  friend void swap(LandResponse& a, LandResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline LandResponse* New() const final {
    return CreateMaybeMessage<LandResponse>(nullptr);
  }

  LandResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<LandResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const LandResponse& from);
  void MergeFrom(const LandResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(LandResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .mavsdk.rpc.action.ActionResult action_result = 1;
  bool has_action_result() const;
  void clear_action_result();
  static const int kActionResultFieldNumber = 1;
  const ::mavsdk::rpc::action::ActionResult& action_result() const;
  ::mavsdk::rpc::action::ActionResult* release_action_result();
  ::mavsdk::rpc::action::ActionResult* mutable_action_result();
  void set_allocated_action_result(::mavsdk::rpc::action::ActionResult* action_result);

  // @@protoc_insertion_point(class_scope:mavsdk.rpc.action.LandResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::mavsdk::rpc::action::ActionResult* action_result_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_action_2faction_2eproto;
};
// -------------------------------------------------------------------

class RebootRequest :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mavsdk.rpc.action.RebootRequest) */ {
 public:
  RebootRequest();
  virtual ~RebootRequest();

  RebootRequest(const RebootRequest& from);

  inline RebootRequest& operator=(const RebootRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RebootRequest(RebootRequest&& from) noexcept
    : RebootRequest() {
    *this = ::std::move(from);
  }

  inline RebootRequest& operator=(RebootRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const RebootRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RebootRequest* internal_default_instance() {
    return reinterpret_cast<const RebootRequest*>(
               &_RebootRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  void Swap(RebootRequest* other);
  friend void swap(RebootRequest& a, RebootRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RebootRequest* New() const final {
    return CreateMaybeMessage<RebootRequest>(nullptr);
  }

  RebootRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<RebootRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const RebootRequest& from);
  void MergeFrom(const RebootRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RebootRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:mavsdk.rpc.action.RebootRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_action_2faction_2eproto;
};
// -------------------------------------------------------------------

class RebootResponse :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mavsdk.rpc.action.RebootResponse) */ {
 public:
  RebootResponse();
  virtual ~RebootResponse();

  RebootResponse(const RebootResponse& from);

  inline RebootResponse& operator=(const RebootResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RebootResponse(RebootResponse&& from) noexcept
    : RebootResponse() {
    *this = ::std::move(from);
  }

  inline RebootResponse& operator=(RebootResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const RebootResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RebootResponse* internal_default_instance() {
    return reinterpret_cast<const RebootResponse*>(
               &_RebootResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  void Swap(RebootResponse* other);
  friend void swap(RebootResponse& a, RebootResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RebootResponse* New() const final {
    return CreateMaybeMessage<RebootResponse>(nullptr);
  }

  RebootResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<RebootResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const RebootResponse& from);
  void MergeFrom(const RebootResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RebootResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .mavsdk.rpc.action.ActionResult action_result = 1;
  bool has_action_result() const;
  void clear_action_result();
  static const int kActionResultFieldNumber = 1;
  const ::mavsdk::rpc::action::ActionResult& action_result() const;
  ::mavsdk::rpc::action::ActionResult* release_action_result();
  ::mavsdk::rpc::action::ActionResult* mutable_action_result();
  void set_allocated_action_result(::mavsdk::rpc::action::ActionResult* action_result);

  // @@protoc_insertion_point(class_scope:mavsdk.rpc.action.RebootResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::mavsdk::rpc::action::ActionResult* action_result_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_action_2faction_2eproto;
};
// -------------------------------------------------------------------

class KillRequest :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mavsdk.rpc.action.KillRequest) */ {
 public:
  KillRequest();
  virtual ~KillRequest();

  KillRequest(const KillRequest& from);

  inline KillRequest& operator=(const KillRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  KillRequest(KillRequest&& from) noexcept
    : KillRequest() {
    *this = ::std::move(from);
  }

  inline KillRequest& operator=(KillRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const KillRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const KillRequest* internal_default_instance() {
    return reinterpret_cast<const KillRequest*>(
               &_KillRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  void Swap(KillRequest* other);
  friend void swap(KillRequest& a, KillRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline KillRequest* New() const final {
    return CreateMaybeMessage<KillRequest>(nullptr);
  }

  KillRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<KillRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const KillRequest& from);
  void MergeFrom(const KillRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(KillRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:mavsdk.rpc.action.KillRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_action_2faction_2eproto;
};
// -------------------------------------------------------------------

class KillResponse :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mavsdk.rpc.action.KillResponse) */ {
 public:
  KillResponse();
  virtual ~KillResponse();

  KillResponse(const KillResponse& from);

  inline KillResponse& operator=(const KillResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  KillResponse(KillResponse&& from) noexcept
    : KillResponse() {
    *this = ::std::move(from);
  }

  inline KillResponse& operator=(KillResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const KillResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const KillResponse* internal_default_instance() {
    return reinterpret_cast<const KillResponse*>(
               &_KillResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  void Swap(KillResponse* other);
  friend void swap(KillResponse& a, KillResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline KillResponse* New() const final {
    return CreateMaybeMessage<KillResponse>(nullptr);
  }

  KillResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<KillResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const KillResponse& from);
  void MergeFrom(const KillResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(KillResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .mavsdk.rpc.action.ActionResult action_result = 1;
  bool has_action_result() const;
  void clear_action_result();
  static const int kActionResultFieldNumber = 1;
  const ::mavsdk::rpc::action::ActionResult& action_result() const;
  ::mavsdk::rpc::action::ActionResult* release_action_result();
  ::mavsdk::rpc::action::ActionResult* mutable_action_result();
  void set_allocated_action_result(::mavsdk::rpc::action::ActionResult* action_result);

  // @@protoc_insertion_point(class_scope:mavsdk.rpc.action.KillResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::mavsdk::rpc::action::ActionResult* action_result_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_action_2faction_2eproto;
};
// -------------------------------------------------------------------

class ReturnToLaunchRequest :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mavsdk.rpc.action.ReturnToLaunchRequest) */ {
 public:
  ReturnToLaunchRequest();
  virtual ~ReturnToLaunchRequest();

  ReturnToLaunchRequest(const ReturnToLaunchRequest& from);

  inline ReturnToLaunchRequest& operator=(const ReturnToLaunchRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ReturnToLaunchRequest(ReturnToLaunchRequest&& from) noexcept
    : ReturnToLaunchRequest() {
    *this = ::std::move(from);
  }

  inline ReturnToLaunchRequest& operator=(ReturnToLaunchRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const ReturnToLaunchRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ReturnToLaunchRequest* internal_default_instance() {
    return reinterpret_cast<const ReturnToLaunchRequest*>(
               &_ReturnToLaunchRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  void Swap(ReturnToLaunchRequest* other);
  friend void swap(ReturnToLaunchRequest& a, ReturnToLaunchRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ReturnToLaunchRequest* New() const final {
    return CreateMaybeMessage<ReturnToLaunchRequest>(nullptr);
  }

  ReturnToLaunchRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ReturnToLaunchRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ReturnToLaunchRequest& from);
  void MergeFrom(const ReturnToLaunchRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ReturnToLaunchRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:mavsdk.rpc.action.ReturnToLaunchRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_action_2faction_2eproto;
};
// -------------------------------------------------------------------

class ReturnToLaunchResponse :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mavsdk.rpc.action.ReturnToLaunchResponse) */ {
 public:
  ReturnToLaunchResponse();
  virtual ~ReturnToLaunchResponse();

  ReturnToLaunchResponse(const ReturnToLaunchResponse& from);

  inline ReturnToLaunchResponse& operator=(const ReturnToLaunchResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ReturnToLaunchResponse(ReturnToLaunchResponse&& from) noexcept
    : ReturnToLaunchResponse() {
    *this = ::std::move(from);
  }

  inline ReturnToLaunchResponse& operator=(ReturnToLaunchResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const ReturnToLaunchResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ReturnToLaunchResponse* internal_default_instance() {
    return reinterpret_cast<const ReturnToLaunchResponse*>(
               &_ReturnToLaunchResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    13;

  void Swap(ReturnToLaunchResponse* other);
  friend void swap(ReturnToLaunchResponse& a, ReturnToLaunchResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ReturnToLaunchResponse* New() const final {
    return CreateMaybeMessage<ReturnToLaunchResponse>(nullptr);
  }

  ReturnToLaunchResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ReturnToLaunchResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ReturnToLaunchResponse& from);
  void MergeFrom(const ReturnToLaunchResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ReturnToLaunchResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .mavsdk.rpc.action.ActionResult action_result = 1;
  bool has_action_result() const;
  void clear_action_result();
  static const int kActionResultFieldNumber = 1;
  const ::mavsdk::rpc::action::ActionResult& action_result() const;
  ::mavsdk::rpc::action::ActionResult* release_action_result();
  ::mavsdk::rpc::action::ActionResult* mutable_action_result();
  void set_allocated_action_result(::mavsdk::rpc::action::ActionResult* action_result);

  // @@protoc_insertion_point(class_scope:mavsdk.rpc.action.ReturnToLaunchResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::mavsdk::rpc::action::ActionResult* action_result_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_action_2faction_2eproto;
};
// -------------------------------------------------------------------

class TransitionToFixedWingRequest :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mavsdk.rpc.action.TransitionToFixedWingRequest) */ {
 public:
  TransitionToFixedWingRequest();
  virtual ~TransitionToFixedWingRequest();

  TransitionToFixedWingRequest(const TransitionToFixedWingRequest& from);

  inline TransitionToFixedWingRequest& operator=(const TransitionToFixedWingRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TransitionToFixedWingRequest(TransitionToFixedWingRequest&& from) noexcept
    : TransitionToFixedWingRequest() {
    *this = ::std::move(from);
  }

  inline TransitionToFixedWingRequest& operator=(TransitionToFixedWingRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const TransitionToFixedWingRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TransitionToFixedWingRequest* internal_default_instance() {
    return reinterpret_cast<const TransitionToFixedWingRequest*>(
               &_TransitionToFixedWingRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    14;

  void Swap(TransitionToFixedWingRequest* other);
  friend void swap(TransitionToFixedWingRequest& a, TransitionToFixedWingRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TransitionToFixedWingRequest* New() const final {
    return CreateMaybeMessage<TransitionToFixedWingRequest>(nullptr);
  }

  TransitionToFixedWingRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<TransitionToFixedWingRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const TransitionToFixedWingRequest& from);
  void MergeFrom(const TransitionToFixedWingRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TransitionToFixedWingRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:mavsdk.rpc.action.TransitionToFixedWingRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_action_2faction_2eproto;
};
// -------------------------------------------------------------------

class TransitionToFixedWingResponse :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mavsdk.rpc.action.TransitionToFixedWingResponse) */ {
 public:
  TransitionToFixedWingResponse();
  virtual ~TransitionToFixedWingResponse();

  TransitionToFixedWingResponse(const TransitionToFixedWingResponse& from);

  inline TransitionToFixedWingResponse& operator=(const TransitionToFixedWingResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TransitionToFixedWingResponse(TransitionToFixedWingResponse&& from) noexcept
    : TransitionToFixedWingResponse() {
    *this = ::std::move(from);
  }

  inline TransitionToFixedWingResponse& operator=(TransitionToFixedWingResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const TransitionToFixedWingResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TransitionToFixedWingResponse* internal_default_instance() {
    return reinterpret_cast<const TransitionToFixedWingResponse*>(
               &_TransitionToFixedWingResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    15;

  void Swap(TransitionToFixedWingResponse* other);
  friend void swap(TransitionToFixedWingResponse& a, TransitionToFixedWingResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TransitionToFixedWingResponse* New() const final {
    return CreateMaybeMessage<TransitionToFixedWingResponse>(nullptr);
  }

  TransitionToFixedWingResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<TransitionToFixedWingResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const TransitionToFixedWingResponse& from);
  void MergeFrom(const TransitionToFixedWingResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TransitionToFixedWingResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .mavsdk.rpc.action.ActionResult action_result = 1;
  bool has_action_result() const;
  void clear_action_result();
  static const int kActionResultFieldNumber = 1;
  const ::mavsdk::rpc::action::ActionResult& action_result() const;
  ::mavsdk::rpc::action::ActionResult* release_action_result();
  ::mavsdk::rpc::action::ActionResult* mutable_action_result();
  void set_allocated_action_result(::mavsdk::rpc::action::ActionResult* action_result);

  // @@protoc_insertion_point(class_scope:mavsdk.rpc.action.TransitionToFixedWingResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::mavsdk::rpc::action::ActionResult* action_result_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_action_2faction_2eproto;
};
// -------------------------------------------------------------------

class TransitionToMulticopterRequest :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mavsdk.rpc.action.TransitionToMulticopterRequest) */ {
 public:
  TransitionToMulticopterRequest();
  virtual ~TransitionToMulticopterRequest();

  TransitionToMulticopterRequest(const TransitionToMulticopterRequest& from);

  inline TransitionToMulticopterRequest& operator=(const TransitionToMulticopterRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TransitionToMulticopterRequest(TransitionToMulticopterRequest&& from) noexcept
    : TransitionToMulticopterRequest() {
    *this = ::std::move(from);
  }

  inline TransitionToMulticopterRequest& operator=(TransitionToMulticopterRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const TransitionToMulticopterRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TransitionToMulticopterRequest* internal_default_instance() {
    return reinterpret_cast<const TransitionToMulticopterRequest*>(
               &_TransitionToMulticopterRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    16;

  void Swap(TransitionToMulticopterRequest* other);
  friend void swap(TransitionToMulticopterRequest& a, TransitionToMulticopterRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TransitionToMulticopterRequest* New() const final {
    return CreateMaybeMessage<TransitionToMulticopterRequest>(nullptr);
  }

  TransitionToMulticopterRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<TransitionToMulticopterRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const TransitionToMulticopterRequest& from);
  void MergeFrom(const TransitionToMulticopterRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TransitionToMulticopterRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:mavsdk.rpc.action.TransitionToMulticopterRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_action_2faction_2eproto;
};
// -------------------------------------------------------------------

class TransitionToMulticopterResponse :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mavsdk.rpc.action.TransitionToMulticopterResponse) */ {
 public:
  TransitionToMulticopterResponse();
  virtual ~TransitionToMulticopterResponse();

  TransitionToMulticopterResponse(const TransitionToMulticopterResponse& from);

  inline TransitionToMulticopterResponse& operator=(const TransitionToMulticopterResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TransitionToMulticopterResponse(TransitionToMulticopterResponse&& from) noexcept
    : TransitionToMulticopterResponse() {
    *this = ::std::move(from);
  }

  inline TransitionToMulticopterResponse& operator=(TransitionToMulticopterResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const TransitionToMulticopterResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TransitionToMulticopterResponse* internal_default_instance() {
    return reinterpret_cast<const TransitionToMulticopterResponse*>(
               &_TransitionToMulticopterResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    17;

  void Swap(TransitionToMulticopterResponse* other);
  friend void swap(TransitionToMulticopterResponse& a, TransitionToMulticopterResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TransitionToMulticopterResponse* New() const final {
    return CreateMaybeMessage<TransitionToMulticopterResponse>(nullptr);
  }

  TransitionToMulticopterResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<TransitionToMulticopterResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const TransitionToMulticopterResponse& from);
  void MergeFrom(const TransitionToMulticopterResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TransitionToMulticopterResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .mavsdk.rpc.action.ActionResult action_result = 1;
  bool has_action_result() const;
  void clear_action_result();
  static const int kActionResultFieldNumber = 1;
  const ::mavsdk::rpc::action::ActionResult& action_result() const;
  ::mavsdk::rpc::action::ActionResult* release_action_result();
  ::mavsdk::rpc::action::ActionResult* mutable_action_result();
  void set_allocated_action_result(::mavsdk::rpc::action::ActionResult* action_result);

  // @@protoc_insertion_point(class_scope:mavsdk.rpc.action.TransitionToMulticopterResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::mavsdk::rpc::action::ActionResult* action_result_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_action_2faction_2eproto;
};
// -------------------------------------------------------------------

class GetTakeoffAltitudeRequest :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mavsdk.rpc.action.GetTakeoffAltitudeRequest) */ {
 public:
  GetTakeoffAltitudeRequest();
  virtual ~GetTakeoffAltitudeRequest();

  GetTakeoffAltitudeRequest(const GetTakeoffAltitudeRequest& from);

  inline GetTakeoffAltitudeRequest& operator=(const GetTakeoffAltitudeRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetTakeoffAltitudeRequest(GetTakeoffAltitudeRequest&& from) noexcept
    : GetTakeoffAltitudeRequest() {
    *this = ::std::move(from);
  }

  inline GetTakeoffAltitudeRequest& operator=(GetTakeoffAltitudeRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const GetTakeoffAltitudeRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetTakeoffAltitudeRequest* internal_default_instance() {
    return reinterpret_cast<const GetTakeoffAltitudeRequest*>(
               &_GetTakeoffAltitudeRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    18;

  void Swap(GetTakeoffAltitudeRequest* other);
  friend void swap(GetTakeoffAltitudeRequest& a, GetTakeoffAltitudeRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetTakeoffAltitudeRequest* New() const final {
    return CreateMaybeMessage<GetTakeoffAltitudeRequest>(nullptr);
  }

  GetTakeoffAltitudeRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GetTakeoffAltitudeRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GetTakeoffAltitudeRequest& from);
  void MergeFrom(const GetTakeoffAltitudeRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetTakeoffAltitudeRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:mavsdk.rpc.action.GetTakeoffAltitudeRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_action_2faction_2eproto;
};
// -------------------------------------------------------------------

class GetTakeoffAltitudeResponse :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mavsdk.rpc.action.GetTakeoffAltitudeResponse) */ {
 public:
  GetTakeoffAltitudeResponse();
  virtual ~GetTakeoffAltitudeResponse();

  GetTakeoffAltitudeResponse(const GetTakeoffAltitudeResponse& from);

  inline GetTakeoffAltitudeResponse& operator=(const GetTakeoffAltitudeResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetTakeoffAltitudeResponse(GetTakeoffAltitudeResponse&& from) noexcept
    : GetTakeoffAltitudeResponse() {
    *this = ::std::move(from);
  }

  inline GetTakeoffAltitudeResponse& operator=(GetTakeoffAltitudeResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const GetTakeoffAltitudeResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetTakeoffAltitudeResponse* internal_default_instance() {
    return reinterpret_cast<const GetTakeoffAltitudeResponse*>(
               &_GetTakeoffAltitudeResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    19;

  void Swap(GetTakeoffAltitudeResponse* other);
  friend void swap(GetTakeoffAltitudeResponse& a, GetTakeoffAltitudeResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetTakeoffAltitudeResponse* New() const final {
    return CreateMaybeMessage<GetTakeoffAltitudeResponse>(nullptr);
  }

  GetTakeoffAltitudeResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GetTakeoffAltitudeResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GetTakeoffAltitudeResponse& from);
  void MergeFrom(const GetTakeoffAltitudeResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetTakeoffAltitudeResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .mavsdk.rpc.action.ActionResult action_result = 1;
  bool has_action_result() const;
  void clear_action_result();
  static const int kActionResultFieldNumber = 1;
  const ::mavsdk::rpc::action::ActionResult& action_result() const;
  ::mavsdk::rpc::action::ActionResult* release_action_result();
  ::mavsdk::rpc::action::ActionResult* mutable_action_result();
  void set_allocated_action_result(::mavsdk::rpc::action::ActionResult* action_result);

  // float altitude = 2;
  void clear_altitude();
  static const int kAltitudeFieldNumber = 2;
  float altitude() const;
  void set_altitude(float value);

  // @@protoc_insertion_point(class_scope:mavsdk.rpc.action.GetTakeoffAltitudeResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::mavsdk::rpc::action::ActionResult* action_result_;
  float altitude_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_action_2faction_2eproto;
};
// -------------------------------------------------------------------

class SetTakeoffAltitudeRequest :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mavsdk.rpc.action.SetTakeoffAltitudeRequest) */ {
 public:
  SetTakeoffAltitudeRequest();
  virtual ~SetTakeoffAltitudeRequest();

  SetTakeoffAltitudeRequest(const SetTakeoffAltitudeRequest& from);

  inline SetTakeoffAltitudeRequest& operator=(const SetTakeoffAltitudeRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SetTakeoffAltitudeRequest(SetTakeoffAltitudeRequest&& from) noexcept
    : SetTakeoffAltitudeRequest() {
    *this = ::std::move(from);
  }

  inline SetTakeoffAltitudeRequest& operator=(SetTakeoffAltitudeRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const SetTakeoffAltitudeRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SetTakeoffAltitudeRequest* internal_default_instance() {
    return reinterpret_cast<const SetTakeoffAltitudeRequest*>(
               &_SetTakeoffAltitudeRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    20;

  void Swap(SetTakeoffAltitudeRequest* other);
  friend void swap(SetTakeoffAltitudeRequest& a, SetTakeoffAltitudeRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SetTakeoffAltitudeRequest* New() const final {
    return CreateMaybeMessage<SetTakeoffAltitudeRequest>(nullptr);
  }

  SetTakeoffAltitudeRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SetTakeoffAltitudeRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SetTakeoffAltitudeRequest& from);
  void MergeFrom(const SetTakeoffAltitudeRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SetTakeoffAltitudeRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // float altitude = 1;
  void clear_altitude();
  static const int kAltitudeFieldNumber = 1;
  float altitude() const;
  void set_altitude(float value);

  // @@protoc_insertion_point(class_scope:mavsdk.rpc.action.SetTakeoffAltitudeRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  float altitude_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_action_2faction_2eproto;
};
// -------------------------------------------------------------------

class SetTakeoffAltitudeResponse :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mavsdk.rpc.action.SetTakeoffAltitudeResponse) */ {
 public:
  SetTakeoffAltitudeResponse();
  virtual ~SetTakeoffAltitudeResponse();

  SetTakeoffAltitudeResponse(const SetTakeoffAltitudeResponse& from);

  inline SetTakeoffAltitudeResponse& operator=(const SetTakeoffAltitudeResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SetTakeoffAltitudeResponse(SetTakeoffAltitudeResponse&& from) noexcept
    : SetTakeoffAltitudeResponse() {
    *this = ::std::move(from);
  }

  inline SetTakeoffAltitudeResponse& operator=(SetTakeoffAltitudeResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const SetTakeoffAltitudeResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SetTakeoffAltitudeResponse* internal_default_instance() {
    return reinterpret_cast<const SetTakeoffAltitudeResponse*>(
               &_SetTakeoffAltitudeResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    21;

  void Swap(SetTakeoffAltitudeResponse* other);
  friend void swap(SetTakeoffAltitudeResponse& a, SetTakeoffAltitudeResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SetTakeoffAltitudeResponse* New() const final {
    return CreateMaybeMessage<SetTakeoffAltitudeResponse>(nullptr);
  }

  SetTakeoffAltitudeResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SetTakeoffAltitudeResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SetTakeoffAltitudeResponse& from);
  void MergeFrom(const SetTakeoffAltitudeResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SetTakeoffAltitudeResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .mavsdk.rpc.action.ActionResult action_result = 1;
  bool has_action_result() const;
  void clear_action_result();
  static const int kActionResultFieldNumber = 1;
  const ::mavsdk::rpc::action::ActionResult& action_result() const;
  ::mavsdk::rpc::action::ActionResult* release_action_result();
  ::mavsdk::rpc::action::ActionResult* mutable_action_result();
  void set_allocated_action_result(::mavsdk::rpc::action::ActionResult* action_result);

  // @@protoc_insertion_point(class_scope:mavsdk.rpc.action.SetTakeoffAltitudeResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::mavsdk::rpc::action::ActionResult* action_result_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_action_2faction_2eproto;
};
// -------------------------------------------------------------------

class GetMaximumSpeedRequest :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mavsdk.rpc.action.GetMaximumSpeedRequest) */ {
 public:
  GetMaximumSpeedRequest();
  virtual ~GetMaximumSpeedRequest();

  GetMaximumSpeedRequest(const GetMaximumSpeedRequest& from);

  inline GetMaximumSpeedRequest& operator=(const GetMaximumSpeedRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetMaximumSpeedRequest(GetMaximumSpeedRequest&& from) noexcept
    : GetMaximumSpeedRequest() {
    *this = ::std::move(from);
  }

  inline GetMaximumSpeedRequest& operator=(GetMaximumSpeedRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const GetMaximumSpeedRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetMaximumSpeedRequest* internal_default_instance() {
    return reinterpret_cast<const GetMaximumSpeedRequest*>(
               &_GetMaximumSpeedRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    22;

  void Swap(GetMaximumSpeedRequest* other);
  friend void swap(GetMaximumSpeedRequest& a, GetMaximumSpeedRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetMaximumSpeedRequest* New() const final {
    return CreateMaybeMessage<GetMaximumSpeedRequest>(nullptr);
  }

  GetMaximumSpeedRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GetMaximumSpeedRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GetMaximumSpeedRequest& from);
  void MergeFrom(const GetMaximumSpeedRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetMaximumSpeedRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:mavsdk.rpc.action.GetMaximumSpeedRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_action_2faction_2eproto;
};
// -------------------------------------------------------------------

class GetMaximumSpeedResponse :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mavsdk.rpc.action.GetMaximumSpeedResponse) */ {
 public:
  GetMaximumSpeedResponse();
  virtual ~GetMaximumSpeedResponse();

  GetMaximumSpeedResponse(const GetMaximumSpeedResponse& from);

  inline GetMaximumSpeedResponse& operator=(const GetMaximumSpeedResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetMaximumSpeedResponse(GetMaximumSpeedResponse&& from) noexcept
    : GetMaximumSpeedResponse() {
    *this = ::std::move(from);
  }

  inline GetMaximumSpeedResponse& operator=(GetMaximumSpeedResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const GetMaximumSpeedResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetMaximumSpeedResponse* internal_default_instance() {
    return reinterpret_cast<const GetMaximumSpeedResponse*>(
               &_GetMaximumSpeedResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    23;

  void Swap(GetMaximumSpeedResponse* other);
  friend void swap(GetMaximumSpeedResponse& a, GetMaximumSpeedResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetMaximumSpeedResponse* New() const final {
    return CreateMaybeMessage<GetMaximumSpeedResponse>(nullptr);
  }

  GetMaximumSpeedResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GetMaximumSpeedResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GetMaximumSpeedResponse& from);
  void MergeFrom(const GetMaximumSpeedResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetMaximumSpeedResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .mavsdk.rpc.action.ActionResult action_result = 1;
  bool has_action_result() const;
  void clear_action_result();
  static const int kActionResultFieldNumber = 1;
  const ::mavsdk::rpc::action::ActionResult& action_result() const;
  ::mavsdk::rpc::action::ActionResult* release_action_result();
  ::mavsdk::rpc::action::ActionResult* mutable_action_result();
  void set_allocated_action_result(::mavsdk::rpc::action::ActionResult* action_result);

  // float speed = 2;
  void clear_speed();
  static const int kSpeedFieldNumber = 2;
  float speed() const;
  void set_speed(float value);

  // @@protoc_insertion_point(class_scope:mavsdk.rpc.action.GetMaximumSpeedResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::mavsdk::rpc::action::ActionResult* action_result_;
  float speed_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_action_2faction_2eproto;
};
// -------------------------------------------------------------------

class SetMaximumSpeedRequest :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mavsdk.rpc.action.SetMaximumSpeedRequest) */ {
 public:
  SetMaximumSpeedRequest();
  virtual ~SetMaximumSpeedRequest();

  SetMaximumSpeedRequest(const SetMaximumSpeedRequest& from);

  inline SetMaximumSpeedRequest& operator=(const SetMaximumSpeedRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SetMaximumSpeedRequest(SetMaximumSpeedRequest&& from) noexcept
    : SetMaximumSpeedRequest() {
    *this = ::std::move(from);
  }

  inline SetMaximumSpeedRequest& operator=(SetMaximumSpeedRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const SetMaximumSpeedRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SetMaximumSpeedRequest* internal_default_instance() {
    return reinterpret_cast<const SetMaximumSpeedRequest*>(
               &_SetMaximumSpeedRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    24;

  void Swap(SetMaximumSpeedRequest* other);
  friend void swap(SetMaximumSpeedRequest& a, SetMaximumSpeedRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SetMaximumSpeedRequest* New() const final {
    return CreateMaybeMessage<SetMaximumSpeedRequest>(nullptr);
  }

  SetMaximumSpeedRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SetMaximumSpeedRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SetMaximumSpeedRequest& from);
  void MergeFrom(const SetMaximumSpeedRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SetMaximumSpeedRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // float speed = 1;
  void clear_speed();
  static const int kSpeedFieldNumber = 1;
  float speed() const;
  void set_speed(float value);

  // @@protoc_insertion_point(class_scope:mavsdk.rpc.action.SetMaximumSpeedRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  float speed_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_action_2faction_2eproto;
};
// -------------------------------------------------------------------

class SetMaximumSpeedResponse :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mavsdk.rpc.action.SetMaximumSpeedResponse) */ {
 public:
  SetMaximumSpeedResponse();
  virtual ~SetMaximumSpeedResponse();

  SetMaximumSpeedResponse(const SetMaximumSpeedResponse& from);

  inline SetMaximumSpeedResponse& operator=(const SetMaximumSpeedResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SetMaximumSpeedResponse(SetMaximumSpeedResponse&& from) noexcept
    : SetMaximumSpeedResponse() {
    *this = ::std::move(from);
  }

  inline SetMaximumSpeedResponse& operator=(SetMaximumSpeedResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const SetMaximumSpeedResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SetMaximumSpeedResponse* internal_default_instance() {
    return reinterpret_cast<const SetMaximumSpeedResponse*>(
               &_SetMaximumSpeedResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    25;

  void Swap(SetMaximumSpeedResponse* other);
  friend void swap(SetMaximumSpeedResponse& a, SetMaximumSpeedResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SetMaximumSpeedResponse* New() const final {
    return CreateMaybeMessage<SetMaximumSpeedResponse>(nullptr);
  }

  SetMaximumSpeedResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SetMaximumSpeedResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SetMaximumSpeedResponse& from);
  void MergeFrom(const SetMaximumSpeedResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SetMaximumSpeedResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .mavsdk.rpc.action.ActionResult action_result = 1;
  bool has_action_result() const;
  void clear_action_result();
  static const int kActionResultFieldNumber = 1;
  const ::mavsdk::rpc::action::ActionResult& action_result() const;
  ::mavsdk::rpc::action::ActionResult* release_action_result();
  ::mavsdk::rpc::action::ActionResult* mutable_action_result();
  void set_allocated_action_result(::mavsdk::rpc::action::ActionResult* action_result);

  // @@protoc_insertion_point(class_scope:mavsdk.rpc.action.SetMaximumSpeedResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::mavsdk::rpc::action::ActionResult* action_result_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_action_2faction_2eproto;
};
// -------------------------------------------------------------------

class GetReturnToLaunchAltitudeRequest :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mavsdk.rpc.action.GetReturnToLaunchAltitudeRequest) */ {
 public:
  GetReturnToLaunchAltitudeRequest();
  virtual ~GetReturnToLaunchAltitudeRequest();

  GetReturnToLaunchAltitudeRequest(const GetReturnToLaunchAltitudeRequest& from);

  inline GetReturnToLaunchAltitudeRequest& operator=(const GetReturnToLaunchAltitudeRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetReturnToLaunchAltitudeRequest(GetReturnToLaunchAltitudeRequest&& from) noexcept
    : GetReturnToLaunchAltitudeRequest() {
    *this = ::std::move(from);
  }

  inline GetReturnToLaunchAltitudeRequest& operator=(GetReturnToLaunchAltitudeRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const GetReturnToLaunchAltitudeRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetReturnToLaunchAltitudeRequest* internal_default_instance() {
    return reinterpret_cast<const GetReturnToLaunchAltitudeRequest*>(
               &_GetReturnToLaunchAltitudeRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    26;

  void Swap(GetReturnToLaunchAltitudeRequest* other);
  friend void swap(GetReturnToLaunchAltitudeRequest& a, GetReturnToLaunchAltitudeRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetReturnToLaunchAltitudeRequest* New() const final {
    return CreateMaybeMessage<GetReturnToLaunchAltitudeRequest>(nullptr);
  }

  GetReturnToLaunchAltitudeRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GetReturnToLaunchAltitudeRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GetReturnToLaunchAltitudeRequest& from);
  void MergeFrom(const GetReturnToLaunchAltitudeRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetReturnToLaunchAltitudeRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:mavsdk.rpc.action.GetReturnToLaunchAltitudeRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_action_2faction_2eproto;
};
// -------------------------------------------------------------------

class GetReturnToLaunchAltitudeResponse :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mavsdk.rpc.action.GetReturnToLaunchAltitudeResponse) */ {
 public:
  GetReturnToLaunchAltitudeResponse();
  virtual ~GetReturnToLaunchAltitudeResponse();

  GetReturnToLaunchAltitudeResponse(const GetReturnToLaunchAltitudeResponse& from);

  inline GetReturnToLaunchAltitudeResponse& operator=(const GetReturnToLaunchAltitudeResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetReturnToLaunchAltitudeResponse(GetReturnToLaunchAltitudeResponse&& from) noexcept
    : GetReturnToLaunchAltitudeResponse() {
    *this = ::std::move(from);
  }

  inline GetReturnToLaunchAltitudeResponse& operator=(GetReturnToLaunchAltitudeResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const GetReturnToLaunchAltitudeResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetReturnToLaunchAltitudeResponse* internal_default_instance() {
    return reinterpret_cast<const GetReturnToLaunchAltitudeResponse*>(
               &_GetReturnToLaunchAltitudeResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    27;

  void Swap(GetReturnToLaunchAltitudeResponse* other);
  friend void swap(GetReturnToLaunchAltitudeResponse& a, GetReturnToLaunchAltitudeResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetReturnToLaunchAltitudeResponse* New() const final {
    return CreateMaybeMessage<GetReturnToLaunchAltitudeResponse>(nullptr);
  }

  GetReturnToLaunchAltitudeResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GetReturnToLaunchAltitudeResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GetReturnToLaunchAltitudeResponse& from);
  void MergeFrom(const GetReturnToLaunchAltitudeResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetReturnToLaunchAltitudeResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .mavsdk.rpc.action.ActionResult action_result = 1;
  bool has_action_result() const;
  void clear_action_result();
  static const int kActionResultFieldNumber = 1;
  const ::mavsdk::rpc::action::ActionResult& action_result() const;
  ::mavsdk::rpc::action::ActionResult* release_action_result();
  ::mavsdk::rpc::action::ActionResult* mutable_action_result();
  void set_allocated_action_result(::mavsdk::rpc::action::ActionResult* action_result);

  // float relative_altitude_m = 2;
  void clear_relative_altitude_m();
  static const int kRelativeAltitudeMFieldNumber = 2;
  float relative_altitude_m() const;
  void set_relative_altitude_m(float value);

  // @@protoc_insertion_point(class_scope:mavsdk.rpc.action.GetReturnToLaunchAltitudeResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::mavsdk::rpc::action::ActionResult* action_result_;
  float relative_altitude_m_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_action_2faction_2eproto;
};
// -------------------------------------------------------------------

class SetReturnToLaunchAltitudeRequest :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mavsdk.rpc.action.SetReturnToLaunchAltitudeRequest) */ {
 public:
  SetReturnToLaunchAltitudeRequest();
  virtual ~SetReturnToLaunchAltitudeRequest();

  SetReturnToLaunchAltitudeRequest(const SetReturnToLaunchAltitudeRequest& from);

  inline SetReturnToLaunchAltitudeRequest& operator=(const SetReturnToLaunchAltitudeRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SetReturnToLaunchAltitudeRequest(SetReturnToLaunchAltitudeRequest&& from) noexcept
    : SetReturnToLaunchAltitudeRequest() {
    *this = ::std::move(from);
  }

  inline SetReturnToLaunchAltitudeRequest& operator=(SetReturnToLaunchAltitudeRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const SetReturnToLaunchAltitudeRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SetReturnToLaunchAltitudeRequest* internal_default_instance() {
    return reinterpret_cast<const SetReturnToLaunchAltitudeRequest*>(
               &_SetReturnToLaunchAltitudeRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    28;

  void Swap(SetReturnToLaunchAltitudeRequest* other);
  friend void swap(SetReturnToLaunchAltitudeRequest& a, SetReturnToLaunchAltitudeRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SetReturnToLaunchAltitudeRequest* New() const final {
    return CreateMaybeMessage<SetReturnToLaunchAltitudeRequest>(nullptr);
  }

  SetReturnToLaunchAltitudeRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SetReturnToLaunchAltitudeRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SetReturnToLaunchAltitudeRequest& from);
  void MergeFrom(const SetReturnToLaunchAltitudeRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SetReturnToLaunchAltitudeRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // float relative_altitude_m = 1;
  void clear_relative_altitude_m();
  static const int kRelativeAltitudeMFieldNumber = 1;
  float relative_altitude_m() const;
  void set_relative_altitude_m(float value);

  // @@protoc_insertion_point(class_scope:mavsdk.rpc.action.SetReturnToLaunchAltitudeRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  float relative_altitude_m_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_action_2faction_2eproto;
};
// -------------------------------------------------------------------

class SetReturnToLaunchAltitudeResponse :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mavsdk.rpc.action.SetReturnToLaunchAltitudeResponse) */ {
 public:
  SetReturnToLaunchAltitudeResponse();
  virtual ~SetReturnToLaunchAltitudeResponse();

  SetReturnToLaunchAltitudeResponse(const SetReturnToLaunchAltitudeResponse& from);

  inline SetReturnToLaunchAltitudeResponse& operator=(const SetReturnToLaunchAltitudeResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SetReturnToLaunchAltitudeResponse(SetReturnToLaunchAltitudeResponse&& from) noexcept
    : SetReturnToLaunchAltitudeResponse() {
    *this = ::std::move(from);
  }

  inline SetReturnToLaunchAltitudeResponse& operator=(SetReturnToLaunchAltitudeResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const SetReturnToLaunchAltitudeResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SetReturnToLaunchAltitudeResponse* internal_default_instance() {
    return reinterpret_cast<const SetReturnToLaunchAltitudeResponse*>(
               &_SetReturnToLaunchAltitudeResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    29;

  void Swap(SetReturnToLaunchAltitudeResponse* other);
  friend void swap(SetReturnToLaunchAltitudeResponse& a, SetReturnToLaunchAltitudeResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SetReturnToLaunchAltitudeResponse* New() const final {
    return CreateMaybeMessage<SetReturnToLaunchAltitudeResponse>(nullptr);
  }

  SetReturnToLaunchAltitudeResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SetReturnToLaunchAltitudeResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SetReturnToLaunchAltitudeResponse& from);
  void MergeFrom(const SetReturnToLaunchAltitudeResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SetReturnToLaunchAltitudeResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .mavsdk.rpc.action.ActionResult action_result = 1;
  bool has_action_result() const;
  void clear_action_result();
  static const int kActionResultFieldNumber = 1;
  const ::mavsdk::rpc::action::ActionResult& action_result() const;
  ::mavsdk::rpc::action::ActionResult* release_action_result();
  ::mavsdk::rpc::action::ActionResult* mutable_action_result();
  void set_allocated_action_result(::mavsdk::rpc::action::ActionResult* action_result);

  // @@protoc_insertion_point(class_scope:mavsdk.rpc.action.SetReturnToLaunchAltitudeResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::mavsdk::rpc::action::ActionResult* action_result_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_action_2faction_2eproto;
};
// -------------------------------------------------------------------

class ActionResult :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mavsdk.rpc.action.ActionResult) */ {
 public:
  ActionResult();
  virtual ~ActionResult();

  ActionResult(const ActionResult& from);

  inline ActionResult& operator=(const ActionResult& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ActionResult(ActionResult&& from) noexcept
    : ActionResult() {
    *this = ::std::move(from);
  }

  inline ActionResult& operator=(ActionResult&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const ActionResult& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ActionResult* internal_default_instance() {
    return reinterpret_cast<const ActionResult*>(
               &_ActionResult_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    30;

  void Swap(ActionResult* other);
  friend void swap(ActionResult& a, ActionResult& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ActionResult* New() const final {
    return CreateMaybeMessage<ActionResult>(nullptr);
  }

  ActionResult* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ActionResult>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ActionResult& from);
  void MergeFrom(const ActionResult& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ActionResult* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef ActionResult_Result Result;
  static const Result UNKNOWN =
    ActionResult_Result_UNKNOWN;
  static const Result SUCCESS =
    ActionResult_Result_SUCCESS;
  static const Result NO_SYSTEM =
    ActionResult_Result_NO_SYSTEM;
  static const Result CONNECTION_ERROR =
    ActionResult_Result_CONNECTION_ERROR;
  static const Result BUSY =
    ActionResult_Result_BUSY;
  static const Result COMMAND_DENIED =
    ActionResult_Result_COMMAND_DENIED;
  static const Result COMMAND_DENIED_LANDED_STATE_UNKNOWN =
    ActionResult_Result_COMMAND_DENIED_LANDED_STATE_UNKNOWN;
  static const Result COMMAND_DENIED_NOT_LANDED =
    ActionResult_Result_COMMAND_DENIED_NOT_LANDED;
  static const Result TIMEOUT =
    ActionResult_Result_TIMEOUT;
  static const Result VTOL_TRANSITION_SUPPORT_UNKNOWN =
    ActionResult_Result_VTOL_TRANSITION_SUPPORT_UNKNOWN;
  static const Result NO_VTOL_TRANSITION_SUPPORT =
    ActionResult_Result_NO_VTOL_TRANSITION_SUPPORT;
  static const Result PARAMETER_ERROR =
    ActionResult_Result_PARAMETER_ERROR;
  static inline bool Result_IsValid(int value) {
    return ActionResult_Result_IsValid(value);
  }
  static const Result Result_MIN =
    ActionResult_Result_Result_MIN;
  static const Result Result_MAX =
    ActionResult_Result_Result_MAX;
  static const int Result_ARRAYSIZE =
    ActionResult_Result_Result_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Result_descriptor() {
    return ActionResult_Result_descriptor();
  }
  static inline const ::std::string& Result_Name(Result value) {
    return ActionResult_Result_Name(value);
  }
  static inline bool Result_Parse(const ::std::string& name,
      Result* value) {
    return ActionResult_Result_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // string result_str = 2;
  void clear_result_str();
  static const int kResultStrFieldNumber = 2;
  const ::std::string& result_str() const;
  void set_result_str(const ::std::string& value);
  #if LANG_CXX11
  void set_result_str(::std::string&& value);
  #endif
  void set_result_str(const char* value);
  void set_result_str(const char* value, size_t size);
  ::std::string* mutable_result_str();
  ::std::string* release_result_str();
  void set_allocated_result_str(::std::string* result_str);

  // .mavsdk.rpc.action.ActionResult.Result result = 1;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::mavsdk::rpc::action::ActionResult_Result result() const;
  void set_result(::mavsdk::rpc::action::ActionResult_Result value);

  // @@protoc_insertion_point(class_scope:mavsdk.rpc.action.ActionResult)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr result_str_;
  int result_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_action_2faction_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// ArmRequest

// -------------------------------------------------------------------

// ArmResponse

// .mavsdk.rpc.action.ActionResult action_result = 1;
inline bool ArmResponse::has_action_result() const {
  return this != internal_default_instance() && action_result_ != nullptr;
}
inline void ArmResponse::clear_action_result() {
  if (GetArenaNoVirtual() == nullptr && action_result_ != nullptr) {
    delete action_result_;
  }
  action_result_ = nullptr;
}
inline const ::mavsdk::rpc::action::ActionResult& ArmResponse::action_result() const {
  const ::mavsdk::rpc::action::ActionResult* p = action_result_;
  // @@protoc_insertion_point(field_get:mavsdk.rpc.action.ArmResponse.action_result)
  return p != nullptr ? *p : *reinterpret_cast<const ::mavsdk::rpc::action::ActionResult*>(
      &::mavsdk::rpc::action::_ActionResult_default_instance_);
}
inline ::mavsdk::rpc::action::ActionResult* ArmResponse::release_action_result() {
  // @@protoc_insertion_point(field_release:mavsdk.rpc.action.ArmResponse.action_result)
  
  ::mavsdk::rpc::action::ActionResult* temp = action_result_;
  action_result_ = nullptr;
  return temp;
}
inline ::mavsdk::rpc::action::ActionResult* ArmResponse::mutable_action_result() {
  
  if (action_result_ == nullptr) {
    auto* p = CreateMaybeMessage<::mavsdk::rpc::action::ActionResult>(GetArenaNoVirtual());
    action_result_ = p;
  }
  // @@protoc_insertion_point(field_mutable:mavsdk.rpc.action.ArmResponse.action_result)
  return action_result_;
}
inline void ArmResponse::set_allocated_action_result(::mavsdk::rpc::action::ActionResult* action_result) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete action_result_;
  }
  if (action_result) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      action_result = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, action_result, submessage_arena);
    }
    
  } else {
    
  }
  action_result_ = action_result;
  // @@protoc_insertion_point(field_set_allocated:mavsdk.rpc.action.ArmResponse.action_result)
}

// -------------------------------------------------------------------

// DisarmRequest

// -------------------------------------------------------------------

// DisarmResponse

// .mavsdk.rpc.action.ActionResult action_result = 1;
inline bool DisarmResponse::has_action_result() const {
  return this != internal_default_instance() && action_result_ != nullptr;
}
inline void DisarmResponse::clear_action_result() {
  if (GetArenaNoVirtual() == nullptr && action_result_ != nullptr) {
    delete action_result_;
  }
  action_result_ = nullptr;
}
inline const ::mavsdk::rpc::action::ActionResult& DisarmResponse::action_result() const {
  const ::mavsdk::rpc::action::ActionResult* p = action_result_;
  // @@protoc_insertion_point(field_get:mavsdk.rpc.action.DisarmResponse.action_result)
  return p != nullptr ? *p : *reinterpret_cast<const ::mavsdk::rpc::action::ActionResult*>(
      &::mavsdk::rpc::action::_ActionResult_default_instance_);
}
inline ::mavsdk::rpc::action::ActionResult* DisarmResponse::release_action_result() {
  // @@protoc_insertion_point(field_release:mavsdk.rpc.action.DisarmResponse.action_result)
  
  ::mavsdk::rpc::action::ActionResult* temp = action_result_;
  action_result_ = nullptr;
  return temp;
}
inline ::mavsdk::rpc::action::ActionResult* DisarmResponse::mutable_action_result() {
  
  if (action_result_ == nullptr) {
    auto* p = CreateMaybeMessage<::mavsdk::rpc::action::ActionResult>(GetArenaNoVirtual());
    action_result_ = p;
  }
  // @@protoc_insertion_point(field_mutable:mavsdk.rpc.action.DisarmResponse.action_result)
  return action_result_;
}
inline void DisarmResponse::set_allocated_action_result(::mavsdk::rpc::action::ActionResult* action_result) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete action_result_;
  }
  if (action_result) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      action_result = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, action_result, submessage_arena);
    }
    
  } else {
    
  }
  action_result_ = action_result;
  // @@protoc_insertion_point(field_set_allocated:mavsdk.rpc.action.DisarmResponse.action_result)
}

// -------------------------------------------------------------------

// TakeoffRequest

// -------------------------------------------------------------------

// TakeoffResponse

// .mavsdk.rpc.action.ActionResult action_result = 1;
inline bool TakeoffResponse::has_action_result() const {
  return this != internal_default_instance() && action_result_ != nullptr;
}
inline void TakeoffResponse::clear_action_result() {
  if (GetArenaNoVirtual() == nullptr && action_result_ != nullptr) {
    delete action_result_;
  }
  action_result_ = nullptr;
}
inline const ::mavsdk::rpc::action::ActionResult& TakeoffResponse::action_result() const {
  const ::mavsdk::rpc::action::ActionResult* p = action_result_;
  // @@protoc_insertion_point(field_get:mavsdk.rpc.action.TakeoffResponse.action_result)
  return p != nullptr ? *p : *reinterpret_cast<const ::mavsdk::rpc::action::ActionResult*>(
      &::mavsdk::rpc::action::_ActionResult_default_instance_);
}
inline ::mavsdk::rpc::action::ActionResult* TakeoffResponse::release_action_result() {
  // @@protoc_insertion_point(field_release:mavsdk.rpc.action.TakeoffResponse.action_result)
  
  ::mavsdk::rpc::action::ActionResult* temp = action_result_;
  action_result_ = nullptr;
  return temp;
}
inline ::mavsdk::rpc::action::ActionResult* TakeoffResponse::mutable_action_result() {
  
  if (action_result_ == nullptr) {
    auto* p = CreateMaybeMessage<::mavsdk::rpc::action::ActionResult>(GetArenaNoVirtual());
    action_result_ = p;
  }
  // @@protoc_insertion_point(field_mutable:mavsdk.rpc.action.TakeoffResponse.action_result)
  return action_result_;
}
inline void TakeoffResponse::set_allocated_action_result(::mavsdk::rpc::action::ActionResult* action_result) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete action_result_;
  }
  if (action_result) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      action_result = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, action_result, submessage_arena);
    }
    
  } else {
    
  }
  action_result_ = action_result;
  // @@protoc_insertion_point(field_set_allocated:mavsdk.rpc.action.TakeoffResponse.action_result)
}

// -------------------------------------------------------------------

// LandRequest

// -------------------------------------------------------------------

// LandResponse

// .mavsdk.rpc.action.ActionResult action_result = 1;
inline bool LandResponse::has_action_result() const {
  return this != internal_default_instance() && action_result_ != nullptr;
}
inline void LandResponse::clear_action_result() {
  if (GetArenaNoVirtual() == nullptr && action_result_ != nullptr) {
    delete action_result_;
  }
  action_result_ = nullptr;
}
inline const ::mavsdk::rpc::action::ActionResult& LandResponse::action_result() const {
  const ::mavsdk::rpc::action::ActionResult* p = action_result_;
  // @@protoc_insertion_point(field_get:mavsdk.rpc.action.LandResponse.action_result)
  return p != nullptr ? *p : *reinterpret_cast<const ::mavsdk::rpc::action::ActionResult*>(
      &::mavsdk::rpc::action::_ActionResult_default_instance_);
}
inline ::mavsdk::rpc::action::ActionResult* LandResponse::release_action_result() {
  // @@protoc_insertion_point(field_release:mavsdk.rpc.action.LandResponse.action_result)
  
  ::mavsdk::rpc::action::ActionResult* temp = action_result_;
  action_result_ = nullptr;
  return temp;
}
inline ::mavsdk::rpc::action::ActionResult* LandResponse::mutable_action_result() {
  
  if (action_result_ == nullptr) {
    auto* p = CreateMaybeMessage<::mavsdk::rpc::action::ActionResult>(GetArenaNoVirtual());
    action_result_ = p;
  }
  // @@protoc_insertion_point(field_mutable:mavsdk.rpc.action.LandResponse.action_result)
  return action_result_;
}
inline void LandResponse::set_allocated_action_result(::mavsdk::rpc::action::ActionResult* action_result) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete action_result_;
  }
  if (action_result) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      action_result = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, action_result, submessage_arena);
    }
    
  } else {
    
  }
  action_result_ = action_result;
  // @@protoc_insertion_point(field_set_allocated:mavsdk.rpc.action.LandResponse.action_result)
}

// -------------------------------------------------------------------

// RebootRequest

// -------------------------------------------------------------------

// RebootResponse

// .mavsdk.rpc.action.ActionResult action_result = 1;
inline bool RebootResponse::has_action_result() const {
  return this != internal_default_instance() && action_result_ != nullptr;
}
inline void RebootResponse::clear_action_result() {
  if (GetArenaNoVirtual() == nullptr && action_result_ != nullptr) {
    delete action_result_;
  }
  action_result_ = nullptr;
}
inline const ::mavsdk::rpc::action::ActionResult& RebootResponse::action_result() const {
  const ::mavsdk::rpc::action::ActionResult* p = action_result_;
  // @@protoc_insertion_point(field_get:mavsdk.rpc.action.RebootResponse.action_result)
  return p != nullptr ? *p : *reinterpret_cast<const ::mavsdk::rpc::action::ActionResult*>(
      &::mavsdk::rpc::action::_ActionResult_default_instance_);
}
inline ::mavsdk::rpc::action::ActionResult* RebootResponse::release_action_result() {
  // @@protoc_insertion_point(field_release:mavsdk.rpc.action.RebootResponse.action_result)
  
  ::mavsdk::rpc::action::ActionResult* temp = action_result_;
  action_result_ = nullptr;
  return temp;
}
inline ::mavsdk::rpc::action::ActionResult* RebootResponse::mutable_action_result() {
  
  if (action_result_ == nullptr) {
    auto* p = CreateMaybeMessage<::mavsdk::rpc::action::ActionResult>(GetArenaNoVirtual());
    action_result_ = p;
  }
  // @@protoc_insertion_point(field_mutable:mavsdk.rpc.action.RebootResponse.action_result)
  return action_result_;
}
inline void RebootResponse::set_allocated_action_result(::mavsdk::rpc::action::ActionResult* action_result) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete action_result_;
  }
  if (action_result) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      action_result = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, action_result, submessage_arena);
    }
    
  } else {
    
  }
  action_result_ = action_result;
  // @@protoc_insertion_point(field_set_allocated:mavsdk.rpc.action.RebootResponse.action_result)
}

// -------------------------------------------------------------------

// KillRequest

// -------------------------------------------------------------------

// KillResponse

// .mavsdk.rpc.action.ActionResult action_result = 1;
inline bool KillResponse::has_action_result() const {
  return this != internal_default_instance() && action_result_ != nullptr;
}
inline void KillResponse::clear_action_result() {
  if (GetArenaNoVirtual() == nullptr && action_result_ != nullptr) {
    delete action_result_;
  }
  action_result_ = nullptr;
}
inline const ::mavsdk::rpc::action::ActionResult& KillResponse::action_result() const {
  const ::mavsdk::rpc::action::ActionResult* p = action_result_;
  // @@protoc_insertion_point(field_get:mavsdk.rpc.action.KillResponse.action_result)
  return p != nullptr ? *p : *reinterpret_cast<const ::mavsdk::rpc::action::ActionResult*>(
      &::mavsdk::rpc::action::_ActionResult_default_instance_);
}
inline ::mavsdk::rpc::action::ActionResult* KillResponse::release_action_result() {
  // @@protoc_insertion_point(field_release:mavsdk.rpc.action.KillResponse.action_result)
  
  ::mavsdk::rpc::action::ActionResult* temp = action_result_;
  action_result_ = nullptr;
  return temp;
}
inline ::mavsdk::rpc::action::ActionResult* KillResponse::mutable_action_result() {
  
  if (action_result_ == nullptr) {
    auto* p = CreateMaybeMessage<::mavsdk::rpc::action::ActionResult>(GetArenaNoVirtual());
    action_result_ = p;
  }
  // @@protoc_insertion_point(field_mutable:mavsdk.rpc.action.KillResponse.action_result)
  return action_result_;
}
inline void KillResponse::set_allocated_action_result(::mavsdk::rpc::action::ActionResult* action_result) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete action_result_;
  }
  if (action_result) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      action_result = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, action_result, submessage_arena);
    }
    
  } else {
    
  }
  action_result_ = action_result;
  // @@protoc_insertion_point(field_set_allocated:mavsdk.rpc.action.KillResponse.action_result)
}

// -------------------------------------------------------------------

// ReturnToLaunchRequest

// -------------------------------------------------------------------

// ReturnToLaunchResponse

// .mavsdk.rpc.action.ActionResult action_result = 1;
inline bool ReturnToLaunchResponse::has_action_result() const {
  return this != internal_default_instance() && action_result_ != nullptr;
}
inline void ReturnToLaunchResponse::clear_action_result() {
  if (GetArenaNoVirtual() == nullptr && action_result_ != nullptr) {
    delete action_result_;
  }
  action_result_ = nullptr;
}
inline const ::mavsdk::rpc::action::ActionResult& ReturnToLaunchResponse::action_result() const {
  const ::mavsdk::rpc::action::ActionResult* p = action_result_;
  // @@protoc_insertion_point(field_get:mavsdk.rpc.action.ReturnToLaunchResponse.action_result)
  return p != nullptr ? *p : *reinterpret_cast<const ::mavsdk::rpc::action::ActionResult*>(
      &::mavsdk::rpc::action::_ActionResult_default_instance_);
}
inline ::mavsdk::rpc::action::ActionResult* ReturnToLaunchResponse::release_action_result() {
  // @@protoc_insertion_point(field_release:mavsdk.rpc.action.ReturnToLaunchResponse.action_result)
  
  ::mavsdk::rpc::action::ActionResult* temp = action_result_;
  action_result_ = nullptr;
  return temp;
}
inline ::mavsdk::rpc::action::ActionResult* ReturnToLaunchResponse::mutable_action_result() {
  
  if (action_result_ == nullptr) {
    auto* p = CreateMaybeMessage<::mavsdk::rpc::action::ActionResult>(GetArenaNoVirtual());
    action_result_ = p;
  }
  // @@protoc_insertion_point(field_mutable:mavsdk.rpc.action.ReturnToLaunchResponse.action_result)
  return action_result_;
}
inline void ReturnToLaunchResponse::set_allocated_action_result(::mavsdk::rpc::action::ActionResult* action_result) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete action_result_;
  }
  if (action_result) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      action_result = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, action_result, submessage_arena);
    }
    
  } else {
    
  }
  action_result_ = action_result;
  // @@protoc_insertion_point(field_set_allocated:mavsdk.rpc.action.ReturnToLaunchResponse.action_result)
}

// -------------------------------------------------------------------

// TransitionToFixedWingRequest

// -------------------------------------------------------------------

// TransitionToFixedWingResponse

// .mavsdk.rpc.action.ActionResult action_result = 1;
inline bool TransitionToFixedWingResponse::has_action_result() const {
  return this != internal_default_instance() && action_result_ != nullptr;
}
inline void TransitionToFixedWingResponse::clear_action_result() {
  if (GetArenaNoVirtual() == nullptr && action_result_ != nullptr) {
    delete action_result_;
  }
  action_result_ = nullptr;
}
inline const ::mavsdk::rpc::action::ActionResult& TransitionToFixedWingResponse::action_result() const {
  const ::mavsdk::rpc::action::ActionResult* p = action_result_;
  // @@protoc_insertion_point(field_get:mavsdk.rpc.action.TransitionToFixedWingResponse.action_result)
  return p != nullptr ? *p : *reinterpret_cast<const ::mavsdk::rpc::action::ActionResult*>(
      &::mavsdk::rpc::action::_ActionResult_default_instance_);
}
inline ::mavsdk::rpc::action::ActionResult* TransitionToFixedWingResponse::release_action_result() {
  // @@protoc_insertion_point(field_release:mavsdk.rpc.action.TransitionToFixedWingResponse.action_result)
  
  ::mavsdk::rpc::action::ActionResult* temp = action_result_;
  action_result_ = nullptr;
  return temp;
}
inline ::mavsdk::rpc::action::ActionResult* TransitionToFixedWingResponse::mutable_action_result() {
  
  if (action_result_ == nullptr) {
    auto* p = CreateMaybeMessage<::mavsdk::rpc::action::ActionResult>(GetArenaNoVirtual());
    action_result_ = p;
  }
  // @@protoc_insertion_point(field_mutable:mavsdk.rpc.action.TransitionToFixedWingResponse.action_result)
  return action_result_;
}
inline void TransitionToFixedWingResponse::set_allocated_action_result(::mavsdk::rpc::action::ActionResult* action_result) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete action_result_;
  }
  if (action_result) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      action_result = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, action_result, submessage_arena);
    }
    
  } else {
    
  }
  action_result_ = action_result;
  // @@protoc_insertion_point(field_set_allocated:mavsdk.rpc.action.TransitionToFixedWingResponse.action_result)
}

// -------------------------------------------------------------------

// TransitionToMulticopterRequest

// -------------------------------------------------------------------

// TransitionToMulticopterResponse

// .mavsdk.rpc.action.ActionResult action_result = 1;
inline bool TransitionToMulticopterResponse::has_action_result() const {
  return this != internal_default_instance() && action_result_ != nullptr;
}
inline void TransitionToMulticopterResponse::clear_action_result() {
  if (GetArenaNoVirtual() == nullptr && action_result_ != nullptr) {
    delete action_result_;
  }
  action_result_ = nullptr;
}
inline const ::mavsdk::rpc::action::ActionResult& TransitionToMulticopterResponse::action_result() const {
  const ::mavsdk::rpc::action::ActionResult* p = action_result_;
  // @@protoc_insertion_point(field_get:mavsdk.rpc.action.TransitionToMulticopterResponse.action_result)
  return p != nullptr ? *p : *reinterpret_cast<const ::mavsdk::rpc::action::ActionResult*>(
      &::mavsdk::rpc::action::_ActionResult_default_instance_);
}
inline ::mavsdk::rpc::action::ActionResult* TransitionToMulticopterResponse::release_action_result() {
  // @@protoc_insertion_point(field_release:mavsdk.rpc.action.TransitionToMulticopterResponse.action_result)
  
  ::mavsdk::rpc::action::ActionResult* temp = action_result_;
  action_result_ = nullptr;
  return temp;
}
inline ::mavsdk::rpc::action::ActionResult* TransitionToMulticopterResponse::mutable_action_result() {
  
  if (action_result_ == nullptr) {
    auto* p = CreateMaybeMessage<::mavsdk::rpc::action::ActionResult>(GetArenaNoVirtual());
    action_result_ = p;
  }
  // @@protoc_insertion_point(field_mutable:mavsdk.rpc.action.TransitionToMulticopterResponse.action_result)
  return action_result_;
}
inline void TransitionToMulticopterResponse::set_allocated_action_result(::mavsdk::rpc::action::ActionResult* action_result) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete action_result_;
  }
  if (action_result) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      action_result = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, action_result, submessage_arena);
    }
    
  } else {
    
  }
  action_result_ = action_result;
  // @@protoc_insertion_point(field_set_allocated:mavsdk.rpc.action.TransitionToMulticopterResponse.action_result)
}

// -------------------------------------------------------------------

// GetTakeoffAltitudeRequest

// -------------------------------------------------------------------

// GetTakeoffAltitudeResponse

// .mavsdk.rpc.action.ActionResult action_result = 1;
inline bool GetTakeoffAltitudeResponse::has_action_result() const {
  return this != internal_default_instance() && action_result_ != nullptr;
}
inline void GetTakeoffAltitudeResponse::clear_action_result() {
  if (GetArenaNoVirtual() == nullptr && action_result_ != nullptr) {
    delete action_result_;
  }
  action_result_ = nullptr;
}
inline const ::mavsdk::rpc::action::ActionResult& GetTakeoffAltitudeResponse::action_result() const {
  const ::mavsdk::rpc::action::ActionResult* p = action_result_;
  // @@protoc_insertion_point(field_get:mavsdk.rpc.action.GetTakeoffAltitudeResponse.action_result)
  return p != nullptr ? *p : *reinterpret_cast<const ::mavsdk::rpc::action::ActionResult*>(
      &::mavsdk::rpc::action::_ActionResult_default_instance_);
}
inline ::mavsdk::rpc::action::ActionResult* GetTakeoffAltitudeResponse::release_action_result() {
  // @@protoc_insertion_point(field_release:mavsdk.rpc.action.GetTakeoffAltitudeResponse.action_result)
  
  ::mavsdk::rpc::action::ActionResult* temp = action_result_;
  action_result_ = nullptr;
  return temp;
}
inline ::mavsdk::rpc::action::ActionResult* GetTakeoffAltitudeResponse::mutable_action_result() {
  
  if (action_result_ == nullptr) {
    auto* p = CreateMaybeMessage<::mavsdk::rpc::action::ActionResult>(GetArenaNoVirtual());
    action_result_ = p;
  }
  // @@protoc_insertion_point(field_mutable:mavsdk.rpc.action.GetTakeoffAltitudeResponse.action_result)
  return action_result_;
}
inline void GetTakeoffAltitudeResponse::set_allocated_action_result(::mavsdk::rpc::action::ActionResult* action_result) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete action_result_;
  }
  if (action_result) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      action_result = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, action_result, submessage_arena);
    }
    
  } else {
    
  }
  action_result_ = action_result;
  // @@protoc_insertion_point(field_set_allocated:mavsdk.rpc.action.GetTakeoffAltitudeResponse.action_result)
}

// float altitude = 2;
inline void GetTakeoffAltitudeResponse::clear_altitude() {
  altitude_ = 0;
}
inline float GetTakeoffAltitudeResponse::altitude() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.action.GetTakeoffAltitudeResponse.altitude)
  return altitude_;
}
inline void GetTakeoffAltitudeResponse::set_altitude(float value) {
  
  altitude_ = value;
  // @@protoc_insertion_point(field_set:mavsdk.rpc.action.GetTakeoffAltitudeResponse.altitude)
}

// -------------------------------------------------------------------

// SetTakeoffAltitudeRequest

// float altitude = 1;
inline void SetTakeoffAltitudeRequest::clear_altitude() {
  altitude_ = 0;
}
inline float SetTakeoffAltitudeRequest::altitude() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.action.SetTakeoffAltitudeRequest.altitude)
  return altitude_;
}
inline void SetTakeoffAltitudeRequest::set_altitude(float value) {
  
  altitude_ = value;
  // @@protoc_insertion_point(field_set:mavsdk.rpc.action.SetTakeoffAltitudeRequest.altitude)
}

// -------------------------------------------------------------------

// SetTakeoffAltitudeResponse

// .mavsdk.rpc.action.ActionResult action_result = 1;
inline bool SetTakeoffAltitudeResponse::has_action_result() const {
  return this != internal_default_instance() && action_result_ != nullptr;
}
inline void SetTakeoffAltitudeResponse::clear_action_result() {
  if (GetArenaNoVirtual() == nullptr && action_result_ != nullptr) {
    delete action_result_;
  }
  action_result_ = nullptr;
}
inline const ::mavsdk::rpc::action::ActionResult& SetTakeoffAltitudeResponse::action_result() const {
  const ::mavsdk::rpc::action::ActionResult* p = action_result_;
  // @@protoc_insertion_point(field_get:mavsdk.rpc.action.SetTakeoffAltitudeResponse.action_result)
  return p != nullptr ? *p : *reinterpret_cast<const ::mavsdk::rpc::action::ActionResult*>(
      &::mavsdk::rpc::action::_ActionResult_default_instance_);
}
inline ::mavsdk::rpc::action::ActionResult* SetTakeoffAltitudeResponse::release_action_result() {
  // @@protoc_insertion_point(field_release:mavsdk.rpc.action.SetTakeoffAltitudeResponse.action_result)
  
  ::mavsdk::rpc::action::ActionResult* temp = action_result_;
  action_result_ = nullptr;
  return temp;
}
inline ::mavsdk::rpc::action::ActionResult* SetTakeoffAltitudeResponse::mutable_action_result() {
  
  if (action_result_ == nullptr) {
    auto* p = CreateMaybeMessage<::mavsdk::rpc::action::ActionResult>(GetArenaNoVirtual());
    action_result_ = p;
  }
  // @@protoc_insertion_point(field_mutable:mavsdk.rpc.action.SetTakeoffAltitudeResponse.action_result)
  return action_result_;
}
inline void SetTakeoffAltitudeResponse::set_allocated_action_result(::mavsdk::rpc::action::ActionResult* action_result) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete action_result_;
  }
  if (action_result) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      action_result = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, action_result, submessage_arena);
    }
    
  } else {
    
  }
  action_result_ = action_result;
  // @@protoc_insertion_point(field_set_allocated:mavsdk.rpc.action.SetTakeoffAltitudeResponse.action_result)
}

// -------------------------------------------------------------------

// GetMaximumSpeedRequest

// -------------------------------------------------------------------

// GetMaximumSpeedResponse

// .mavsdk.rpc.action.ActionResult action_result = 1;
inline bool GetMaximumSpeedResponse::has_action_result() const {
  return this != internal_default_instance() && action_result_ != nullptr;
}
inline void GetMaximumSpeedResponse::clear_action_result() {
  if (GetArenaNoVirtual() == nullptr && action_result_ != nullptr) {
    delete action_result_;
  }
  action_result_ = nullptr;
}
inline const ::mavsdk::rpc::action::ActionResult& GetMaximumSpeedResponse::action_result() const {
  const ::mavsdk::rpc::action::ActionResult* p = action_result_;
  // @@protoc_insertion_point(field_get:mavsdk.rpc.action.GetMaximumSpeedResponse.action_result)
  return p != nullptr ? *p : *reinterpret_cast<const ::mavsdk::rpc::action::ActionResult*>(
      &::mavsdk::rpc::action::_ActionResult_default_instance_);
}
inline ::mavsdk::rpc::action::ActionResult* GetMaximumSpeedResponse::release_action_result() {
  // @@protoc_insertion_point(field_release:mavsdk.rpc.action.GetMaximumSpeedResponse.action_result)
  
  ::mavsdk::rpc::action::ActionResult* temp = action_result_;
  action_result_ = nullptr;
  return temp;
}
inline ::mavsdk::rpc::action::ActionResult* GetMaximumSpeedResponse::mutable_action_result() {
  
  if (action_result_ == nullptr) {
    auto* p = CreateMaybeMessage<::mavsdk::rpc::action::ActionResult>(GetArenaNoVirtual());
    action_result_ = p;
  }
  // @@protoc_insertion_point(field_mutable:mavsdk.rpc.action.GetMaximumSpeedResponse.action_result)
  return action_result_;
}
inline void GetMaximumSpeedResponse::set_allocated_action_result(::mavsdk::rpc::action::ActionResult* action_result) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete action_result_;
  }
  if (action_result) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      action_result = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, action_result, submessage_arena);
    }
    
  } else {
    
  }
  action_result_ = action_result;
  // @@protoc_insertion_point(field_set_allocated:mavsdk.rpc.action.GetMaximumSpeedResponse.action_result)
}

// float speed = 2;
inline void GetMaximumSpeedResponse::clear_speed() {
  speed_ = 0;
}
inline float GetMaximumSpeedResponse::speed() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.action.GetMaximumSpeedResponse.speed)
  return speed_;
}
inline void GetMaximumSpeedResponse::set_speed(float value) {
  
  speed_ = value;
  // @@protoc_insertion_point(field_set:mavsdk.rpc.action.GetMaximumSpeedResponse.speed)
}

// -------------------------------------------------------------------

// SetMaximumSpeedRequest

// float speed = 1;
inline void SetMaximumSpeedRequest::clear_speed() {
  speed_ = 0;
}
inline float SetMaximumSpeedRequest::speed() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.action.SetMaximumSpeedRequest.speed)
  return speed_;
}
inline void SetMaximumSpeedRequest::set_speed(float value) {
  
  speed_ = value;
  // @@protoc_insertion_point(field_set:mavsdk.rpc.action.SetMaximumSpeedRequest.speed)
}

// -------------------------------------------------------------------

// SetMaximumSpeedResponse

// .mavsdk.rpc.action.ActionResult action_result = 1;
inline bool SetMaximumSpeedResponse::has_action_result() const {
  return this != internal_default_instance() && action_result_ != nullptr;
}
inline void SetMaximumSpeedResponse::clear_action_result() {
  if (GetArenaNoVirtual() == nullptr && action_result_ != nullptr) {
    delete action_result_;
  }
  action_result_ = nullptr;
}
inline const ::mavsdk::rpc::action::ActionResult& SetMaximumSpeedResponse::action_result() const {
  const ::mavsdk::rpc::action::ActionResult* p = action_result_;
  // @@protoc_insertion_point(field_get:mavsdk.rpc.action.SetMaximumSpeedResponse.action_result)
  return p != nullptr ? *p : *reinterpret_cast<const ::mavsdk::rpc::action::ActionResult*>(
      &::mavsdk::rpc::action::_ActionResult_default_instance_);
}
inline ::mavsdk::rpc::action::ActionResult* SetMaximumSpeedResponse::release_action_result() {
  // @@protoc_insertion_point(field_release:mavsdk.rpc.action.SetMaximumSpeedResponse.action_result)
  
  ::mavsdk::rpc::action::ActionResult* temp = action_result_;
  action_result_ = nullptr;
  return temp;
}
inline ::mavsdk::rpc::action::ActionResult* SetMaximumSpeedResponse::mutable_action_result() {
  
  if (action_result_ == nullptr) {
    auto* p = CreateMaybeMessage<::mavsdk::rpc::action::ActionResult>(GetArenaNoVirtual());
    action_result_ = p;
  }
  // @@protoc_insertion_point(field_mutable:mavsdk.rpc.action.SetMaximumSpeedResponse.action_result)
  return action_result_;
}
inline void SetMaximumSpeedResponse::set_allocated_action_result(::mavsdk::rpc::action::ActionResult* action_result) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete action_result_;
  }
  if (action_result) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      action_result = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, action_result, submessage_arena);
    }
    
  } else {
    
  }
  action_result_ = action_result;
  // @@protoc_insertion_point(field_set_allocated:mavsdk.rpc.action.SetMaximumSpeedResponse.action_result)
}

// -------------------------------------------------------------------

// GetReturnToLaunchAltitudeRequest

// -------------------------------------------------------------------

// GetReturnToLaunchAltitudeResponse

// .mavsdk.rpc.action.ActionResult action_result = 1;
inline bool GetReturnToLaunchAltitudeResponse::has_action_result() const {
  return this != internal_default_instance() && action_result_ != nullptr;
}
inline void GetReturnToLaunchAltitudeResponse::clear_action_result() {
  if (GetArenaNoVirtual() == nullptr && action_result_ != nullptr) {
    delete action_result_;
  }
  action_result_ = nullptr;
}
inline const ::mavsdk::rpc::action::ActionResult& GetReturnToLaunchAltitudeResponse::action_result() const {
  const ::mavsdk::rpc::action::ActionResult* p = action_result_;
  // @@protoc_insertion_point(field_get:mavsdk.rpc.action.GetReturnToLaunchAltitudeResponse.action_result)
  return p != nullptr ? *p : *reinterpret_cast<const ::mavsdk::rpc::action::ActionResult*>(
      &::mavsdk::rpc::action::_ActionResult_default_instance_);
}
inline ::mavsdk::rpc::action::ActionResult* GetReturnToLaunchAltitudeResponse::release_action_result() {
  // @@protoc_insertion_point(field_release:mavsdk.rpc.action.GetReturnToLaunchAltitudeResponse.action_result)
  
  ::mavsdk::rpc::action::ActionResult* temp = action_result_;
  action_result_ = nullptr;
  return temp;
}
inline ::mavsdk::rpc::action::ActionResult* GetReturnToLaunchAltitudeResponse::mutable_action_result() {
  
  if (action_result_ == nullptr) {
    auto* p = CreateMaybeMessage<::mavsdk::rpc::action::ActionResult>(GetArenaNoVirtual());
    action_result_ = p;
  }
  // @@protoc_insertion_point(field_mutable:mavsdk.rpc.action.GetReturnToLaunchAltitudeResponse.action_result)
  return action_result_;
}
inline void GetReturnToLaunchAltitudeResponse::set_allocated_action_result(::mavsdk::rpc::action::ActionResult* action_result) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete action_result_;
  }
  if (action_result) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      action_result = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, action_result, submessage_arena);
    }
    
  } else {
    
  }
  action_result_ = action_result;
  // @@protoc_insertion_point(field_set_allocated:mavsdk.rpc.action.GetReturnToLaunchAltitudeResponse.action_result)
}

// float relative_altitude_m = 2;
inline void GetReturnToLaunchAltitudeResponse::clear_relative_altitude_m() {
  relative_altitude_m_ = 0;
}
inline float GetReturnToLaunchAltitudeResponse::relative_altitude_m() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.action.GetReturnToLaunchAltitudeResponse.relative_altitude_m)
  return relative_altitude_m_;
}
inline void GetReturnToLaunchAltitudeResponse::set_relative_altitude_m(float value) {
  
  relative_altitude_m_ = value;
  // @@protoc_insertion_point(field_set:mavsdk.rpc.action.GetReturnToLaunchAltitudeResponse.relative_altitude_m)
}

// -------------------------------------------------------------------

// SetReturnToLaunchAltitudeRequest

// float relative_altitude_m = 1;
inline void SetReturnToLaunchAltitudeRequest::clear_relative_altitude_m() {
  relative_altitude_m_ = 0;
}
inline float SetReturnToLaunchAltitudeRequest::relative_altitude_m() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.action.SetReturnToLaunchAltitudeRequest.relative_altitude_m)
  return relative_altitude_m_;
}
inline void SetReturnToLaunchAltitudeRequest::set_relative_altitude_m(float value) {
  
  relative_altitude_m_ = value;
  // @@protoc_insertion_point(field_set:mavsdk.rpc.action.SetReturnToLaunchAltitudeRequest.relative_altitude_m)
}

// -------------------------------------------------------------------

// SetReturnToLaunchAltitudeResponse

// .mavsdk.rpc.action.ActionResult action_result = 1;
inline bool SetReturnToLaunchAltitudeResponse::has_action_result() const {
  return this != internal_default_instance() && action_result_ != nullptr;
}
inline void SetReturnToLaunchAltitudeResponse::clear_action_result() {
  if (GetArenaNoVirtual() == nullptr && action_result_ != nullptr) {
    delete action_result_;
  }
  action_result_ = nullptr;
}
inline const ::mavsdk::rpc::action::ActionResult& SetReturnToLaunchAltitudeResponse::action_result() const {
  const ::mavsdk::rpc::action::ActionResult* p = action_result_;
  // @@protoc_insertion_point(field_get:mavsdk.rpc.action.SetReturnToLaunchAltitudeResponse.action_result)
  return p != nullptr ? *p : *reinterpret_cast<const ::mavsdk::rpc::action::ActionResult*>(
      &::mavsdk::rpc::action::_ActionResult_default_instance_);
}
inline ::mavsdk::rpc::action::ActionResult* SetReturnToLaunchAltitudeResponse::release_action_result() {
  // @@protoc_insertion_point(field_release:mavsdk.rpc.action.SetReturnToLaunchAltitudeResponse.action_result)
  
  ::mavsdk::rpc::action::ActionResult* temp = action_result_;
  action_result_ = nullptr;
  return temp;
}
inline ::mavsdk::rpc::action::ActionResult* SetReturnToLaunchAltitudeResponse::mutable_action_result() {
  
  if (action_result_ == nullptr) {
    auto* p = CreateMaybeMessage<::mavsdk::rpc::action::ActionResult>(GetArenaNoVirtual());
    action_result_ = p;
  }
  // @@protoc_insertion_point(field_mutable:mavsdk.rpc.action.SetReturnToLaunchAltitudeResponse.action_result)
  return action_result_;
}
inline void SetReturnToLaunchAltitudeResponse::set_allocated_action_result(::mavsdk::rpc::action::ActionResult* action_result) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete action_result_;
  }
  if (action_result) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      action_result = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, action_result, submessage_arena);
    }
    
  } else {
    
  }
  action_result_ = action_result;
  // @@protoc_insertion_point(field_set_allocated:mavsdk.rpc.action.SetReturnToLaunchAltitudeResponse.action_result)
}

// -------------------------------------------------------------------

// ActionResult

// .mavsdk.rpc.action.ActionResult.Result result = 1;
inline void ActionResult::clear_result() {
  result_ = 0;
}
inline ::mavsdk::rpc::action::ActionResult_Result ActionResult::result() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.action.ActionResult.result)
  return static_cast< ::mavsdk::rpc::action::ActionResult_Result >(result_);
}
inline void ActionResult::set_result(::mavsdk::rpc::action::ActionResult_Result value) {
  
  result_ = value;
  // @@protoc_insertion_point(field_set:mavsdk.rpc.action.ActionResult.result)
}

// string result_str = 2;
inline void ActionResult::clear_result_str() {
  result_str_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ActionResult::result_str() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.action.ActionResult.result_str)
  return result_str_.GetNoArena();
}
inline void ActionResult::set_result_str(const ::std::string& value) {
  
  result_str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.action.ActionResult.result_str)
}
#if LANG_CXX11
inline void ActionResult::set_result_str(::std::string&& value) {
  
  result_str_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mavsdk.rpc.action.ActionResult.result_str)
}
#endif
inline void ActionResult::set_result_str(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  result_str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mavsdk.rpc.action.ActionResult.result_str)
}
inline void ActionResult::set_result_str(const char* value, size_t size) {
  
  result_str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mavsdk.rpc.action.ActionResult.result_str)
}
inline ::std::string* ActionResult::mutable_result_str() {
  
  // @@protoc_insertion_point(field_mutable:mavsdk.rpc.action.ActionResult.result_str)
  return result_str_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ActionResult::release_result_str() {
  // @@protoc_insertion_point(field_release:mavsdk.rpc.action.ActionResult.result_str)
  
  return result_str_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ActionResult::set_allocated_result_str(::std::string* result_str) {
  if (result_str != nullptr) {
    
  } else {
    
  }
  result_str_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), result_str);
  // @@protoc_insertion_point(field_set_allocated:mavsdk.rpc.action.ActionResult.result_str)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace action
}  // namespace rpc
}  // namespace mavsdk

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::mavsdk::rpc::action::ActionResult_Result> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::mavsdk::rpc::action::ActionResult_Result>() {
  return ::mavsdk::rpc::action::ActionResult_Result_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // PROTOBUF_INCLUDED_action_2faction_2eproto
