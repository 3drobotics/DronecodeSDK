// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: info/info.proto

#ifndef PROTOBUF_INCLUDED_info_2finfo_2eproto
#define PROTOBUF_INCLUDED_info_2finfo_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3007000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3007001 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_info_2finfo_2eproto

// Internal implementation detail -- do not use these members.
struct TableStruct_info_2finfo_2eproto {
  static const ::google::protobuf::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::ParseTable schema[4]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors_info_2finfo_2eproto();
namespace mavsdk {
namespace rpc {
namespace info {
class GetVersionRequest;
class GetVersionRequestDefaultTypeInternal;
extern GetVersionRequestDefaultTypeInternal _GetVersionRequest_default_instance_;
class GetVersionResponse;
class GetVersionResponseDefaultTypeInternal;
extern GetVersionResponseDefaultTypeInternal _GetVersionResponse_default_instance_;
class InfoResult;
class InfoResultDefaultTypeInternal;
extern InfoResultDefaultTypeInternal _InfoResult_default_instance_;
class Version;
class VersionDefaultTypeInternal;
extern VersionDefaultTypeInternal _Version_default_instance_;
}  // namespace info
}  // namespace rpc
}  // namespace mavsdk
namespace google {
namespace protobuf {
template<> ::mavsdk::rpc::info::GetVersionRequest* Arena::CreateMaybeMessage<::mavsdk::rpc::info::GetVersionRequest>(Arena*);
template<> ::mavsdk::rpc::info::GetVersionResponse* Arena::CreateMaybeMessage<::mavsdk::rpc::info::GetVersionResponse>(Arena*);
template<> ::mavsdk::rpc::info::InfoResult* Arena::CreateMaybeMessage<::mavsdk::rpc::info::InfoResult>(Arena*);
template<> ::mavsdk::rpc::info::Version* Arena::CreateMaybeMessage<::mavsdk::rpc::info::Version>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace mavsdk {
namespace rpc {
namespace info {

enum InfoResult_Result {
  InfoResult_Result_UNKNOWN = 0,
  InfoResult_Result_SUCCESS = 1,
  InfoResult_Result_INFORMATION_NOT_RECEIVED_YET = 2,
  InfoResult_Result_InfoResult_Result_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::google::protobuf::int32>::min(),
  InfoResult_Result_InfoResult_Result_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::google::protobuf::int32>::max()
};
bool InfoResult_Result_IsValid(int value);
const InfoResult_Result InfoResult_Result_Result_MIN = InfoResult_Result_UNKNOWN;
const InfoResult_Result InfoResult_Result_Result_MAX = InfoResult_Result_INFORMATION_NOT_RECEIVED_YET;
const int InfoResult_Result_Result_ARRAYSIZE = InfoResult_Result_Result_MAX + 1;

const ::google::protobuf::EnumDescriptor* InfoResult_Result_descriptor();
inline const ::std::string& InfoResult_Result_Name(InfoResult_Result value) {
  return ::google::protobuf::internal::NameOfEnum(
    InfoResult_Result_descriptor(), value);
}
inline bool InfoResult_Result_Parse(
    const ::std::string& name, InfoResult_Result* value) {
  return ::google::protobuf::internal::ParseNamedEnum<InfoResult_Result>(
    InfoResult_Result_descriptor(), name, value);
}
// ===================================================================

class Version :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mavsdk.rpc.info.Version) */ {
 public:
  Version();
  virtual ~Version();

  Version(const Version& from);

  inline Version& operator=(const Version& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Version(Version&& from) noexcept
    : Version() {
    *this = ::std::move(from);
  }

  inline Version& operator=(Version&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const Version& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Version* internal_default_instance() {
    return reinterpret_cast<const Version*>(
               &_Version_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(Version* other);
  friend void swap(Version& a, Version& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Version* New() const final {
    return CreateMaybeMessage<Version>(nullptr);
  }

  Version* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Version>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Version& from);
  void MergeFrom(const Version& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Version* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 flight_sw_major = 1;
  void clear_flight_sw_major();
  static const int kFlightSwMajorFieldNumber = 1;
  ::google::protobuf::int32 flight_sw_major() const;
  void set_flight_sw_major(::google::protobuf::int32 value);

  // int32 flight_sw_minor = 2;
  void clear_flight_sw_minor();
  static const int kFlightSwMinorFieldNumber = 2;
  ::google::protobuf::int32 flight_sw_minor() const;
  void set_flight_sw_minor(::google::protobuf::int32 value);

  // int32 flight_sw_patch = 3;
  void clear_flight_sw_patch();
  static const int kFlightSwPatchFieldNumber = 3;
  ::google::protobuf::int32 flight_sw_patch() const;
  void set_flight_sw_patch(::google::protobuf::int32 value);

  // int32 flight_sw_vendor_major = 4;
  void clear_flight_sw_vendor_major();
  static const int kFlightSwVendorMajorFieldNumber = 4;
  ::google::protobuf::int32 flight_sw_vendor_major() const;
  void set_flight_sw_vendor_major(::google::protobuf::int32 value);

  // int32 flight_sw_vendor_minor = 5;
  void clear_flight_sw_vendor_minor();
  static const int kFlightSwVendorMinorFieldNumber = 5;
  ::google::protobuf::int32 flight_sw_vendor_minor() const;
  void set_flight_sw_vendor_minor(::google::protobuf::int32 value);

  // int32 flight_sw_vendor_patch = 6;
  void clear_flight_sw_vendor_patch();
  static const int kFlightSwVendorPatchFieldNumber = 6;
  ::google::protobuf::int32 flight_sw_vendor_patch() const;
  void set_flight_sw_vendor_patch(::google::protobuf::int32 value);

  // int32 os_sw_major = 7;
  void clear_os_sw_major();
  static const int kOsSwMajorFieldNumber = 7;
  ::google::protobuf::int32 os_sw_major() const;
  void set_os_sw_major(::google::protobuf::int32 value);

  // int32 os_sw_minor = 8;
  void clear_os_sw_minor();
  static const int kOsSwMinorFieldNumber = 8;
  ::google::protobuf::int32 os_sw_minor() const;
  void set_os_sw_minor(::google::protobuf::int32 value);

  // int32 os_sw_patch = 9;
  void clear_os_sw_patch();
  static const int kOsSwPatchFieldNumber = 9;
  ::google::protobuf::int32 os_sw_patch() const;
  void set_os_sw_patch(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:mavsdk.rpc.info.Version)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 flight_sw_major_;
  ::google::protobuf::int32 flight_sw_minor_;
  ::google::protobuf::int32 flight_sw_patch_;
  ::google::protobuf::int32 flight_sw_vendor_major_;
  ::google::protobuf::int32 flight_sw_vendor_minor_;
  ::google::protobuf::int32 flight_sw_vendor_patch_;
  ::google::protobuf::int32 os_sw_major_;
  ::google::protobuf::int32 os_sw_minor_;
  ::google::protobuf::int32 os_sw_patch_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_info_2finfo_2eproto;
};
// -------------------------------------------------------------------

class GetVersionRequest :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mavsdk.rpc.info.GetVersionRequest) */ {
 public:
  GetVersionRequest();
  virtual ~GetVersionRequest();

  GetVersionRequest(const GetVersionRequest& from);

  inline GetVersionRequest& operator=(const GetVersionRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetVersionRequest(GetVersionRequest&& from) noexcept
    : GetVersionRequest() {
    *this = ::std::move(from);
  }

  inline GetVersionRequest& operator=(GetVersionRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const GetVersionRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetVersionRequest* internal_default_instance() {
    return reinterpret_cast<const GetVersionRequest*>(
               &_GetVersionRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(GetVersionRequest* other);
  friend void swap(GetVersionRequest& a, GetVersionRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetVersionRequest* New() const final {
    return CreateMaybeMessage<GetVersionRequest>(nullptr);
  }

  GetVersionRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GetVersionRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GetVersionRequest& from);
  void MergeFrom(const GetVersionRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetVersionRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:mavsdk.rpc.info.GetVersionRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_info_2finfo_2eproto;
};
// -------------------------------------------------------------------

class GetVersionResponse :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mavsdk.rpc.info.GetVersionResponse) */ {
 public:
  GetVersionResponse();
  virtual ~GetVersionResponse();

  GetVersionResponse(const GetVersionResponse& from);

  inline GetVersionResponse& operator=(const GetVersionResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetVersionResponse(GetVersionResponse&& from) noexcept
    : GetVersionResponse() {
    *this = ::std::move(from);
  }

  inline GetVersionResponse& operator=(GetVersionResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const GetVersionResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetVersionResponse* internal_default_instance() {
    return reinterpret_cast<const GetVersionResponse*>(
               &_GetVersionResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(GetVersionResponse* other);
  friend void swap(GetVersionResponse& a, GetVersionResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetVersionResponse* New() const final {
    return CreateMaybeMessage<GetVersionResponse>(nullptr);
  }

  GetVersionResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GetVersionResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GetVersionResponse& from);
  void MergeFrom(const GetVersionResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetVersionResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .mavsdk.rpc.info.InfoResult info_result = 1;
  bool has_info_result() const;
  void clear_info_result();
  static const int kInfoResultFieldNumber = 1;
  const ::mavsdk::rpc::info::InfoResult& info_result() const;
  ::mavsdk::rpc::info::InfoResult* release_info_result();
  ::mavsdk::rpc::info::InfoResult* mutable_info_result();
  void set_allocated_info_result(::mavsdk::rpc::info::InfoResult* info_result);

  // .mavsdk.rpc.info.Version version = 2;
  bool has_version() const;
  void clear_version();
  static const int kVersionFieldNumber = 2;
  const ::mavsdk::rpc::info::Version& version() const;
  ::mavsdk::rpc::info::Version* release_version();
  ::mavsdk::rpc::info::Version* mutable_version();
  void set_allocated_version(::mavsdk::rpc::info::Version* version);

  // @@protoc_insertion_point(class_scope:mavsdk.rpc.info.GetVersionResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::mavsdk::rpc::info::InfoResult* info_result_;
  ::mavsdk::rpc::info::Version* version_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_info_2finfo_2eproto;
};
// -------------------------------------------------------------------

class InfoResult :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mavsdk.rpc.info.InfoResult) */ {
 public:
  InfoResult();
  virtual ~InfoResult();

  InfoResult(const InfoResult& from);

  inline InfoResult& operator=(const InfoResult& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  InfoResult(InfoResult&& from) noexcept
    : InfoResult() {
    *this = ::std::move(from);
  }

  inline InfoResult& operator=(InfoResult&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const InfoResult& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const InfoResult* internal_default_instance() {
    return reinterpret_cast<const InfoResult*>(
               &_InfoResult_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(InfoResult* other);
  friend void swap(InfoResult& a, InfoResult& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline InfoResult* New() const final {
    return CreateMaybeMessage<InfoResult>(nullptr);
  }

  InfoResult* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<InfoResult>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const InfoResult& from);
  void MergeFrom(const InfoResult& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(InfoResult* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef InfoResult_Result Result;
  static const Result UNKNOWN =
    InfoResult_Result_UNKNOWN;
  static const Result SUCCESS =
    InfoResult_Result_SUCCESS;
  static const Result INFORMATION_NOT_RECEIVED_YET =
    InfoResult_Result_INFORMATION_NOT_RECEIVED_YET;
  static inline bool Result_IsValid(int value) {
    return InfoResult_Result_IsValid(value);
  }
  static const Result Result_MIN =
    InfoResult_Result_Result_MIN;
  static const Result Result_MAX =
    InfoResult_Result_Result_MAX;
  static const int Result_ARRAYSIZE =
    InfoResult_Result_Result_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Result_descriptor() {
    return InfoResult_Result_descriptor();
  }
  static inline const ::std::string& Result_Name(Result value) {
    return InfoResult_Result_Name(value);
  }
  static inline bool Result_Parse(const ::std::string& name,
      Result* value) {
    return InfoResult_Result_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // string result_str = 2;
  void clear_result_str();
  static const int kResultStrFieldNumber = 2;
  const ::std::string& result_str() const;
  void set_result_str(const ::std::string& value);
  #if LANG_CXX11
  void set_result_str(::std::string&& value);
  #endif
  void set_result_str(const char* value);
  void set_result_str(const char* value, size_t size);
  ::std::string* mutable_result_str();
  ::std::string* release_result_str();
  void set_allocated_result_str(::std::string* result_str);

  // .mavsdk.rpc.info.InfoResult.Result result = 1;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::mavsdk::rpc::info::InfoResult_Result result() const;
  void set_result(::mavsdk::rpc::info::InfoResult_Result value);

  // @@protoc_insertion_point(class_scope:mavsdk.rpc.info.InfoResult)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr result_str_;
  int result_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_info_2finfo_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Version

// int32 flight_sw_major = 1;
inline void Version::clear_flight_sw_major() {
  flight_sw_major_ = 0;
}
inline ::google::protobuf::int32 Version::flight_sw_major() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.info.Version.flight_sw_major)
  return flight_sw_major_;
}
inline void Version::set_flight_sw_major(::google::protobuf::int32 value) {
  
  flight_sw_major_ = value;
  // @@protoc_insertion_point(field_set:mavsdk.rpc.info.Version.flight_sw_major)
}

// int32 flight_sw_minor = 2;
inline void Version::clear_flight_sw_minor() {
  flight_sw_minor_ = 0;
}
inline ::google::protobuf::int32 Version::flight_sw_minor() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.info.Version.flight_sw_minor)
  return flight_sw_minor_;
}
inline void Version::set_flight_sw_minor(::google::protobuf::int32 value) {
  
  flight_sw_minor_ = value;
  // @@protoc_insertion_point(field_set:mavsdk.rpc.info.Version.flight_sw_minor)
}

// int32 flight_sw_patch = 3;
inline void Version::clear_flight_sw_patch() {
  flight_sw_patch_ = 0;
}
inline ::google::protobuf::int32 Version::flight_sw_patch() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.info.Version.flight_sw_patch)
  return flight_sw_patch_;
}
inline void Version::set_flight_sw_patch(::google::protobuf::int32 value) {
  
  flight_sw_patch_ = value;
  // @@protoc_insertion_point(field_set:mavsdk.rpc.info.Version.flight_sw_patch)
}

// int32 flight_sw_vendor_major = 4;
inline void Version::clear_flight_sw_vendor_major() {
  flight_sw_vendor_major_ = 0;
}
inline ::google::protobuf::int32 Version::flight_sw_vendor_major() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.info.Version.flight_sw_vendor_major)
  return flight_sw_vendor_major_;
}
inline void Version::set_flight_sw_vendor_major(::google::protobuf::int32 value) {
  
  flight_sw_vendor_major_ = value;
  // @@protoc_insertion_point(field_set:mavsdk.rpc.info.Version.flight_sw_vendor_major)
}

// int32 flight_sw_vendor_minor = 5;
inline void Version::clear_flight_sw_vendor_minor() {
  flight_sw_vendor_minor_ = 0;
}
inline ::google::protobuf::int32 Version::flight_sw_vendor_minor() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.info.Version.flight_sw_vendor_minor)
  return flight_sw_vendor_minor_;
}
inline void Version::set_flight_sw_vendor_minor(::google::protobuf::int32 value) {
  
  flight_sw_vendor_minor_ = value;
  // @@protoc_insertion_point(field_set:mavsdk.rpc.info.Version.flight_sw_vendor_minor)
}

// int32 flight_sw_vendor_patch = 6;
inline void Version::clear_flight_sw_vendor_patch() {
  flight_sw_vendor_patch_ = 0;
}
inline ::google::protobuf::int32 Version::flight_sw_vendor_patch() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.info.Version.flight_sw_vendor_patch)
  return flight_sw_vendor_patch_;
}
inline void Version::set_flight_sw_vendor_patch(::google::protobuf::int32 value) {
  
  flight_sw_vendor_patch_ = value;
  // @@protoc_insertion_point(field_set:mavsdk.rpc.info.Version.flight_sw_vendor_patch)
}

// int32 os_sw_major = 7;
inline void Version::clear_os_sw_major() {
  os_sw_major_ = 0;
}
inline ::google::protobuf::int32 Version::os_sw_major() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.info.Version.os_sw_major)
  return os_sw_major_;
}
inline void Version::set_os_sw_major(::google::protobuf::int32 value) {
  
  os_sw_major_ = value;
  // @@protoc_insertion_point(field_set:mavsdk.rpc.info.Version.os_sw_major)
}

// int32 os_sw_minor = 8;
inline void Version::clear_os_sw_minor() {
  os_sw_minor_ = 0;
}
inline ::google::protobuf::int32 Version::os_sw_minor() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.info.Version.os_sw_minor)
  return os_sw_minor_;
}
inline void Version::set_os_sw_minor(::google::protobuf::int32 value) {
  
  os_sw_minor_ = value;
  // @@protoc_insertion_point(field_set:mavsdk.rpc.info.Version.os_sw_minor)
}

// int32 os_sw_patch = 9;
inline void Version::clear_os_sw_patch() {
  os_sw_patch_ = 0;
}
inline ::google::protobuf::int32 Version::os_sw_patch() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.info.Version.os_sw_patch)
  return os_sw_patch_;
}
inline void Version::set_os_sw_patch(::google::protobuf::int32 value) {
  
  os_sw_patch_ = value;
  // @@protoc_insertion_point(field_set:mavsdk.rpc.info.Version.os_sw_patch)
}

// -------------------------------------------------------------------

// GetVersionRequest

// -------------------------------------------------------------------

// GetVersionResponse

// .mavsdk.rpc.info.InfoResult info_result = 1;
inline bool GetVersionResponse::has_info_result() const {
  return this != internal_default_instance() && info_result_ != nullptr;
}
inline void GetVersionResponse::clear_info_result() {
  if (GetArenaNoVirtual() == nullptr && info_result_ != nullptr) {
    delete info_result_;
  }
  info_result_ = nullptr;
}
inline const ::mavsdk::rpc::info::InfoResult& GetVersionResponse::info_result() const {
  const ::mavsdk::rpc::info::InfoResult* p = info_result_;
  // @@protoc_insertion_point(field_get:mavsdk.rpc.info.GetVersionResponse.info_result)
  return p != nullptr ? *p : *reinterpret_cast<const ::mavsdk::rpc::info::InfoResult*>(
      &::mavsdk::rpc::info::_InfoResult_default_instance_);
}
inline ::mavsdk::rpc::info::InfoResult* GetVersionResponse::release_info_result() {
  // @@protoc_insertion_point(field_release:mavsdk.rpc.info.GetVersionResponse.info_result)
  
  ::mavsdk::rpc::info::InfoResult* temp = info_result_;
  info_result_ = nullptr;
  return temp;
}
inline ::mavsdk::rpc::info::InfoResult* GetVersionResponse::mutable_info_result() {
  
  if (info_result_ == nullptr) {
    auto* p = CreateMaybeMessage<::mavsdk::rpc::info::InfoResult>(GetArenaNoVirtual());
    info_result_ = p;
  }
  // @@protoc_insertion_point(field_mutable:mavsdk.rpc.info.GetVersionResponse.info_result)
  return info_result_;
}
inline void GetVersionResponse::set_allocated_info_result(::mavsdk::rpc::info::InfoResult* info_result) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete info_result_;
  }
  if (info_result) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      info_result = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, info_result, submessage_arena);
    }
    
  } else {
    
  }
  info_result_ = info_result;
  // @@protoc_insertion_point(field_set_allocated:mavsdk.rpc.info.GetVersionResponse.info_result)
}

// .mavsdk.rpc.info.Version version = 2;
inline bool GetVersionResponse::has_version() const {
  return this != internal_default_instance() && version_ != nullptr;
}
inline void GetVersionResponse::clear_version() {
  if (GetArenaNoVirtual() == nullptr && version_ != nullptr) {
    delete version_;
  }
  version_ = nullptr;
}
inline const ::mavsdk::rpc::info::Version& GetVersionResponse::version() const {
  const ::mavsdk::rpc::info::Version* p = version_;
  // @@protoc_insertion_point(field_get:mavsdk.rpc.info.GetVersionResponse.version)
  return p != nullptr ? *p : *reinterpret_cast<const ::mavsdk::rpc::info::Version*>(
      &::mavsdk::rpc::info::_Version_default_instance_);
}
inline ::mavsdk::rpc::info::Version* GetVersionResponse::release_version() {
  // @@protoc_insertion_point(field_release:mavsdk.rpc.info.GetVersionResponse.version)
  
  ::mavsdk::rpc::info::Version* temp = version_;
  version_ = nullptr;
  return temp;
}
inline ::mavsdk::rpc::info::Version* GetVersionResponse::mutable_version() {
  
  if (version_ == nullptr) {
    auto* p = CreateMaybeMessage<::mavsdk::rpc::info::Version>(GetArenaNoVirtual());
    version_ = p;
  }
  // @@protoc_insertion_point(field_mutable:mavsdk.rpc.info.GetVersionResponse.version)
  return version_;
}
inline void GetVersionResponse::set_allocated_version(::mavsdk::rpc::info::Version* version) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete version_;
  }
  if (version) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      version = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, version, submessage_arena);
    }
    
  } else {
    
  }
  version_ = version;
  // @@protoc_insertion_point(field_set_allocated:mavsdk.rpc.info.GetVersionResponse.version)
}

// -------------------------------------------------------------------

// InfoResult

// .mavsdk.rpc.info.InfoResult.Result result = 1;
inline void InfoResult::clear_result() {
  result_ = 0;
}
inline ::mavsdk::rpc::info::InfoResult_Result InfoResult::result() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.info.InfoResult.result)
  return static_cast< ::mavsdk::rpc::info::InfoResult_Result >(result_);
}
inline void InfoResult::set_result(::mavsdk::rpc::info::InfoResult_Result value) {
  
  result_ = value;
  // @@protoc_insertion_point(field_set:mavsdk.rpc.info.InfoResult.result)
}

// string result_str = 2;
inline void InfoResult::clear_result_str() {
  result_str_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& InfoResult::result_str() const {
  // @@protoc_insertion_point(field_get:mavsdk.rpc.info.InfoResult.result_str)
  return result_str_.GetNoArena();
}
inline void InfoResult::set_result_str(const ::std::string& value) {
  
  result_str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mavsdk.rpc.info.InfoResult.result_str)
}
#if LANG_CXX11
inline void InfoResult::set_result_str(::std::string&& value) {
  
  result_str_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mavsdk.rpc.info.InfoResult.result_str)
}
#endif
inline void InfoResult::set_result_str(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  result_str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mavsdk.rpc.info.InfoResult.result_str)
}
inline void InfoResult::set_result_str(const char* value, size_t size) {
  
  result_str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mavsdk.rpc.info.InfoResult.result_str)
}
inline ::std::string* InfoResult::mutable_result_str() {
  
  // @@protoc_insertion_point(field_mutable:mavsdk.rpc.info.InfoResult.result_str)
  return result_str_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* InfoResult::release_result_str() {
  // @@protoc_insertion_point(field_release:mavsdk.rpc.info.InfoResult.result_str)
  
  return result_str_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void InfoResult::set_allocated_result_str(::std::string* result_str) {
  if (result_str != nullptr) {
    
  } else {
    
  }
  result_str_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), result_str);
  // @@protoc_insertion_point(field_set_allocated:mavsdk.rpc.info.InfoResult.result_str)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace info
}  // namespace rpc
}  // namespace mavsdk

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::mavsdk::rpc::info::InfoResult_Result> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::mavsdk::rpc::info::InfoResult_Result>() {
  return ::mavsdk::rpc::info::InfoResult_Result_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // PROTOBUF_INCLUDED_info_2finfo_2eproto
