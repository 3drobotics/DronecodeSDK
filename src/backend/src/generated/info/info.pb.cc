// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: info/info.proto

#include "info/info.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

extern PROTOBUF_INTERNAL_EXPORT_info_2finfo_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_InfoResult_info_2finfo_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_info_2finfo_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Version_info_2finfo_2eproto;
namespace mavsdk {
namespace rpc {
namespace info {
class VersionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Version> _instance;
} _Version_default_instance_;
class GetVersionRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetVersionRequest> _instance;
} _GetVersionRequest_default_instance_;
class GetVersionResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetVersionResponse> _instance;
} _GetVersionResponse_default_instance_;
class InfoResultDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<InfoResult> _instance;
} _InfoResult_default_instance_;
}  // namespace info
}  // namespace rpc
}  // namespace mavsdk
static void InitDefaultsVersion_info_2finfo_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mavsdk::rpc::info::_Version_default_instance_;
    new (ptr) ::mavsdk::rpc::info::Version();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mavsdk::rpc::info::Version::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Version_info_2finfo_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsVersion_info_2finfo_2eproto}, {}};

static void InitDefaultsGetVersionRequest_info_2finfo_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mavsdk::rpc::info::_GetVersionRequest_default_instance_;
    new (ptr) ::mavsdk::rpc::info::GetVersionRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mavsdk::rpc::info::GetVersionRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GetVersionRequest_info_2finfo_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGetVersionRequest_info_2finfo_2eproto}, {}};

static void InitDefaultsGetVersionResponse_info_2finfo_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mavsdk::rpc::info::_GetVersionResponse_default_instance_;
    new (ptr) ::mavsdk::rpc::info::GetVersionResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mavsdk::rpc::info::GetVersionResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_GetVersionResponse_info_2finfo_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsGetVersionResponse_info_2finfo_2eproto}, {
      &scc_info_InfoResult_info_2finfo_2eproto.base,
      &scc_info_Version_info_2finfo_2eproto.base,}};

static void InitDefaultsInfoResult_info_2finfo_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mavsdk::rpc::info::_InfoResult_default_instance_;
    new (ptr) ::mavsdk::rpc::info::InfoResult();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mavsdk::rpc::info::InfoResult::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_InfoResult_info_2finfo_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsInfoResult_info_2finfo_2eproto}, {}};

void InitDefaults_info_2finfo_2eproto() {
  ::google::protobuf::internal::InitSCC(&scc_info_Version_info_2finfo_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetVersionRequest_info_2finfo_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetVersionResponse_info_2finfo_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_InfoResult_info_2finfo_2eproto.base);
}

::google::protobuf::Metadata file_level_metadata_info_2finfo_2eproto[4];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors_info_2finfo_2eproto[1];
constexpr ::google::protobuf::ServiceDescriptor const** file_level_service_descriptors_info_2finfo_2eproto = nullptr;

const ::google::protobuf::uint32 TableStruct_info_2finfo_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::info::Version, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::info::Version, flight_sw_major_),
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::info::Version, flight_sw_minor_),
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::info::Version, flight_sw_patch_),
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::info::Version, flight_sw_vendor_major_),
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::info::Version, flight_sw_vendor_minor_),
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::info::Version, flight_sw_vendor_patch_),
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::info::Version, os_sw_major_),
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::info::Version, os_sw_minor_),
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::info::Version, os_sw_patch_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::info::GetVersionRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::info::GetVersionResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::info::GetVersionResponse, info_result_),
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::info::GetVersionResponse, version_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::info::InfoResult, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::info::InfoResult, result_),
  PROTOBUF_FIELD_OFFSET(::mavsdk::rpc::info::InfoResult, result_str_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::mavsdk::rpc::info::Version)},
  { 14, -1, sizeof(::mavsdk::rpc::info::GetVersionRequest)},
  { 19, -1, sizeof(::mavsdk::rpc::info::GetVersionResponse)},
  { 26, -1, sizeof(::mavsdk::rpc::info::InfoResult)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::mavsdk::rpc::info::_Version_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::mavsdk::rpc::info::_GetVersionRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::mavsdk::rpc::info::_GetVersionResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::mavsdk::rpc::info::_InfoResult_default_instance_),
};

::google::protobuf::internal::AssignDescriptorsTable assign_descriptors_table_info_2finfo_2eproto = {
  {}, AddDescriptors_info_2finfo_2eproto, "info/info.proto", schemas,
  file_default_instances, TableStruct_info_2finfo_2eproto::offsets,
  file_level_metadata_info_2finfo_2eproto, 4, file_level_enum_descriptors_info_2finfo_2eproto, file_level_service_descriptors_info_2finfo_2eproto,
};

const char descriptor_table_protodef_info_2finfo_2eproto[] =
  "\n\017info/info.proto\022\017mavsdk.rpc.info\"\363\001\n\007V"
  "ersion\022\027\n\017flight_sw_major\030\001 \001(\005\022\027\n\017fligh"
  "t_sw_minor\030\002 \001(\005\022\027\n\017flight_sw_patch\030\003 \001("
  "\005\022\036\n\026flight_sw_vendor_major\030\004 \001(\005\022\036\n\026fli"
  "ght_sw_vendor_minor\030\005 \001(\005\022\036\n\026flight_sw_v"
  "endor_patch\030\006 \001(\005\022\023\n\013os_sw_major\030\007 \001(\005\022\023"
  "\n\013os_sw_minor\030\010 \001(\005\022\023\n\013os_sw_patch\030\t \001(\005"
  "\"\023\n\021GetVersionRequest\"q\n\022GetVersionRespo"
  "nse\0220\n\013info_result\030\001 \001(\0132\033.mavsdk.rpc.in"
  "fo.InfoResult\022)\n\007version\030\002 \001(\0132\030.mavsdk."
  "rpc.info.Version\"\232\001\n\nInfoResult\0222\n\006resul"
  "t\030\001 \001(\0162\".mavsdk.rpc.info.InfoResult.Res"
  "ult\022\022\n\nresult_str\030\002 \001(\t\"D\n\006Result\022\013\n\007UNK"
  "NOWN\020\000\022\013\n\007SUCCESS\020\001\022 \n\034INFORMATION_NOT_R"
  "ECEIVED_YET\020\0022f\n\013InfoService\022W\n\nGetVersi"
  "on\022\".mavsdk.rpc.info.GetVersionRequest\032#"
  ".mavsdk.rpc.info.GetVersionResponse\"\000B\033\n"
  "\016io.mavsdk.infoB\tInfoProtob\006proto3"
  ;
::google::protobuf::internal::DescriptorTable descriptor_table_info_2finfo_2eproto = {
  false, InitDefaults_info_2finfo_2eproto, 
  descriptor_table_protodef_info_2finfo_2eproto,
  "info/info.proto", &assign_descriptors_table_info_2finfo_2eproto, 714,
};

void AddDescriptors_info_2finfo_2eproto() {
  static constexpr ::google::protobuf::internal::InitFunc deps[1] =
  {
  };
 ::google::protobuf::internal::AddDescriptors(&descriptor_table_info_2finfo_2eproto, deps, 0);
}

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_info_2finfo_2eproto = []() { AddDescriptors_info_2finfo_2eproto(); return true; }();
namespace mavsdk {
namespace rpc {
namespace info {
const ::google::protobuf::EnumDescriptor* InfoResult_Result_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&assign_descriptors_table_info_2finfo_2eproto);
  return file_level_enum_descriptors_info_2finfo_2eproto[0];
}
bool InfoResult_Result_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const InfoResult_Result InfoResult::UNKNOWN;
const InfoResult_Result InfoResult::SUCCESS;
const InfoResult_Result InfoResult::INFORMATION_NOT_RECEIVED_YET;
const InfoResult_Result InfoResult::Result_MIN;
const InfoResult_Result InfoResult::Result_MAX;
const int InfoResult::Result_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

void Version::InitAsDefaultInstance() {
}
class Version::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Version::kFlightSwMajorFieldNumber;
const int Version::kFlightSwMinorFieldNumber;
const int Version::kFlightSwPatchFieldNumber;
const int Version::kFlightSwVendorMajorFieldNumber;
const int Version::kFlightSwVendorMinorFieldNumber;
const int Version::kFlightSwVendorPatchFieldNumber;
const int Version::kOsSwMajorFieldNumber;
const int Version::kOsSwMinorFieldNumber;
const int Version::kOsSwPatchFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Version::Version()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:mavsdk.rpc.info.Version)
}
Version::Version(const Version& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&flight_sw_major_, &from.flight_sw_major_,
    static_cast<size_t>(reinterpret_cast<char*>(&os_sw_patch_) -
    reinterpret_cast<char*>(&flight_sw_major_)) + sizeof(os_sw_patch_));
  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.info.Version)
}

void Version::SharedCtor() {
  ::memset(&flight_sw_major_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&os_sw_patch_) -
      reinterpret_cast<char*>(&flight_sw_major_)) + sizeof(os_sw_patch_));
}

Version::~Version() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.info.Version)
  SharedDtor();
}

void Version::SharedDtor() {
}

void Version::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Version& Version::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Version_info_2finfo_2eproto.base);
  return *internal_default_instance();
}


void Version::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.info.Version)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&flight_sw_major_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&os_sw_patch_) -
      reinterpret_cast<char*>(&flight_sw_major_)) + sizeof(os_sw_patch_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Version::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Version*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // int32 flight_sw_major = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_flight_sw_major(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // int32 flight_sw_minor = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_flight_sw_minor(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // int32 flight_sw_patch = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_flight_sw_patch(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // int32 flight_sw_vendor_major = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 32) goto handle_unusual;
        msg->set_flight_sw_vendor_major(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // int32 flight_sw_vendor_minor = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 40) goto handle_unusual;
        msg->set_flight_sw_vendor_minor(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // int32 flight_sw_vendor_patch = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 48) goto handle_unusual;
        msg->set_flight_sw_vendor_patch(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // int32 os_sw_major = 7;
      case 7: {
        if (static_cast<::google::protobuf::uint8>(tag) != 56) goto handle_unusual;
        msg->set_os_sw_major(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // int32 os_sw_minor = 8;
      case 8: {
        if (static_cast<::google::protobuf::uint8>(tag) != 64) goto handle_unusual;
        msg->set_os_sw_minor(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // int32 os_sw_patch = 9;
      case 9: {
        if (static_cast<::google::protobuf::uint8>(tag) != 72) goto handle_unusual;
        msg->set_os_sw_patch(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Version::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mavsdk.rpc.info.Version)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 flight_sw_major = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &flight_sw_major_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 flight_sw_minor = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &flight_sw_minor_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 flight_sw_patch = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &flight_sw_patch_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 flight_sw_vendor_major = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (32 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &flight_sw_vendor_major_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 flight_sw_vendor_minor = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (40 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &flight_sw_vendor_minor_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 flight_sw_vendor_patch = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (48 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &flight_sw_vendor_patch_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 os_sw_major = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (56 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &os_sw_major_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 os_sw_minor = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (64 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &os_sw_minor_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 os_sw_patch = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (72 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &os_sw_patch_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mavsdk.rpc.info.Version)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mavsdk.rpc.info.Version)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Version::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mavsdk.rpc.info.Version)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 flight_sw_major = 1;
  if (this->flight_sw_major() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->flight_sw_major(), output);
  }

  // int32 flight_sw_minor = 2;
  if (this->flight_sw_minor() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->flight_sw_minor(), output);
  }

  // int32 flight_sw_patch = 3;
  if (this->flight_sw_patch() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->flight_sw_patch(), output);
  }

  // int32 flight_sw_vendor_major = 4;
  if (this->flight_sw_vendor_major() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->flight_sw_vendor_major(), output);
  }

  // int32 flight_sw_vendor_minor = 5;
  if (this->flight_sw_vendor_minor() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->flight_sw_vendor_minor(), output);
  }

  // int32 flight_sw_vendor_patch = 6;
  if (this->flight_sw_vendor_patch() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->flight_sw_vendor_patch(), output);
  }

  // int32 os_sw_major = 7;
  if (this->os_sw_major() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->os_sw_major(), output);
  }

  // int32 os_sw_minor = 8;
  if (this->os_sw_minor() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->os_sw_minor(), output);
  }

  // int32 os_sw_patch = 9;
  if (this->os_sw_patch() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->os_sw_patch(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:mavsdk.rpc.info.Version)
}

::google::protobuf::uint8* Version::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.info.Version)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 flight_sw_major = 1;
  if (this->flight_sw_major() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->flight_sw_major(), target);
  }

  // int32 flight_sw_minor = 2;
  if (this->flight_sw_minor() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->flight_sw_minor(), target);
  }

  // int32 flight_sw_patch = 3;
  if (this->flight_sw_patch() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->flight_sw_patch(), target);
  }

  // int32 flight_sw_vendor_major = 4;
  if (this->flight_sw_vendor_major() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->flight_sw_vendor_major(), target);
  }

  // int32 flight_sw_vendor_minor = 5;
  if (this->flight_sw_vendor_minor() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->flight_sw_vendor_minor(), target);
  }

  // int32 flight_sw_vendor_patch = 6;
  if (this->flight_sw_vendor_patch() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->flight_sw_vendor_patch(), target);
  }

  // int32 os_sw_major = 7;
  if (this->os_sw_major() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->os_sw_major(), target);
  }

  // int32 os_sw_minor = 8;
  if (this->os_sw_minor() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->os_sw_minor(), target);
  }

  // int32 os_sw_patch = 9;
  if (this->os_sw_patch() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->os_sw_patch(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.info.Version)
  return target;
}

size_t Version::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.info.Version)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 flight_sw_major = 1;
  if (this->flight_sw_major() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->flight_sw_major());
  }

  // int32 flight_sw_minor = 2;
  if (this->flight_sw_minor() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->flight_sw_minor());
  }

  // int32 flight_sw_patch = 3;
  if (this->flight_sw_patch() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->flight_sw_patch());
  }

  // int32 flight_sw_vendor_major = 4;
  if (this->flight_sw_vendor_major() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->flight_sw_vendor_major());
  }

  // int32 flight_sw_vendor_minor = 5;
  if (this->flight_sw_vendor_minor() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->flight_sw_vendor_minor());
  }

  // int32 flight_sw_vendor_patch = 6;
  if (this->flight_sw_vendor_patch() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->flight_sw_vendor_patch());
  }

  // int32 os_sw_major = 7;
  if (this->os_sw_major() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->os_sw_major());
  }

  // int32 os_sw_minor = 8;
  if (this->os_sw_minor() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->os_sw_minor());
  }

  // int32 os_sw_patch = 9;
  if (this->os_sw_patch() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->os_sw_patch());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Version::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mavsdk.rpc.info.Version)
  GOOGLE_DCHECK_NE(&from, this);
  const Version* source =
      ::google::protobuf::DynamicCastToGenerated<Version>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mavsdk.rpc.info.Version)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mavsdk.rpc.info.Version)
    MergeFrom(*source);
  }
}

void Version::MergeFrom(const Version& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.info.Version)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.flight_sw_major() != 0) {
    set_flight_sw_major(from.flight_sw_major());
  }
  if (from.flight_sw_minor() != 0) {
    set_flight_sw_minor(from.flight_sw_minor());
  }
  if (from.flight_sw_patch() != 0) {
    set_flight_sw_patch(from.flight_sw_patch());
  }
  if (from.flight_sw_vendor_major() != 0) {
    set_flight_sw_vendor_major(from.flight_sw_vendor_major());
  }
  if (from.flight_sw_vendor_minor() != 0) {
    set_flight_sw_vendor_minor(from.flight_sw_vendor_minor());
  }
  if (from.flight_sw_vendor_patch() != 0) {
    set_flight_sw_vendor_patch(from.flight_sw_vendor_patch());
  }
  if (from.os_sw_major() != 0) {
    set_os_sw_major(from.os_sw_major());
  }
  if (from.os_sw_minor() != 0) {
    set_os_sw_minor(from.os_sw_minor());
  }
  if (from.os_sw_patch() != 0) {
    set_os_sw_patch(from.os_sw_patch());
  }
}

void Version::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mavsdk.rpc.info.Version)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Version::CopyFrom(const Version& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.info.Version)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Version::IsInitialized() const {
  return true;
}

void Version::Swap(Version* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Version::InternalSwap(Version* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(flight_sw_major_, other->flight_sw_major_);
  swap(flight_sw_minor_, other->flight_sw_minor_);
  swap(flight_sw_patch_, other->flight_sw_patch_);
  swap(flight_sw_vendor_major_, other->flight_sw_vendor_major_);
  swap(flight_sw_vendor_minor_, other->flight_sw_vendor_minor_);
  swap(flight_sw_vendor_patch_, other->flight_sw_vendor_patch_);
  swap(os_sw_major_, other->os_sw_major_);
  swap(os_sw_minor_, other->os_sw_minor_);
  swap(os_sw_patch_, other->os_sw_patch_);
}

::google::protobuf::Metadata Version::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_info_2finfo_2eproto);
  return ::file_level_metadata_info_2finfo_2eproto[kIndexInFileMessages];
}


// ===================================================================

void GetVersionRequest::InitAsDefaultInstance() {
}
class GetVersionRequest::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetVersionRequest::GetVersionRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:mavsdk.rpc.info.GetVersionRequest)
}
GetVersionRequest::GetVersionRequest(const GetVersionRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.info.GetVersionRequest)
}

void GetVersionRequest::SharedCtor() {
}

GetVersionRequest::~GetVersionRequest() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.info.GetVersionRequest)
  SharedDtor();
}

void GetVersionRequest::SharedDtor() {
}

void GetVersionRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetVersionRequest& GetVersionRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_GetVersionRequest_info_2finfo_2eproto.base);
  return *internal_default_instance();
}


void GetVersionRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.info.GetVersionRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* GetVersionRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<GetVersionRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      default: {
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool GetVersionRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mavsdk.rpc.info.GetVersionRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:mavsdk.rpc.info.GetVersionRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mavsdk.rpc.info.GetVersionRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void GetVersionRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mavsdk.rpc.info.GetVersionRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:mavsdk.rpc.info.GetVersionRequest)
}

::google::protobuf::uint8* GetVersionRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.info.GetVersionRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.info.GetVersionRequest)
  return target;
}

size_t GetVersionRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.info.GetVersionRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetVersionRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mavsdk.rpc.info.GetVersionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetVersionRequest* source =
      ::google::protobuf::DynamicCastToGenerated<GetVersionRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mavsdk.rpc.info.GetVersionRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mavsdk.rpc.info.GetVersionRequest)
    MergeFrom(*source);
  }
}

void GetVersionRequest::MergeFrom(const GetVersionRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.info.GetVersionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void GetVersionRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mavsdk.rpc.info.GetVersionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetVersionRequest::CopyFrom(const GetVersionRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.info.GetVersionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetVersionRequest::IsInitialized() const {
  return true;
}

void GetVersionRequest::Swap(GetVersionRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetVersionRequest::InternalSwap(GetVersionRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetVersionRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_info_2finfo_2eproto);
  return ::file_level_metadata_info_2finfo_2eproto[kIndexInFileMessages];
}


// ===================================================================

void GetVersionResponse::InitAsDefaultInstance() {
  ::mavsdk::rpc::info::_GetVersionResponse_default_instance_._instance.get_mutable()->info_result_ = const_cast< ::mavsdk::rpc::info::InfoResult*>(
      ::mavsdk::rpc::info::InfoResult::internal_default_instance());
  ::mavsdk::rpc::info::_GetVersionResponse_default_instance_._instance.get_mutable()->version_ = const_cast< ::mavsdk::rpc::info::Version*>(
      ::mavsdk::rpc::info::Version::internal_default_instance());
}
class GetVersionResponse::HasBitSetters {
 public:
  static const ::mavsdk::rpc::info::InfoResult& info_result(const GetVersionResponse* msg);
  static const ::mavsdk::rpc::info::Version& version(const GetVersionResponse* msg);
};

const ::mavsdk::rpc::info::InfoResult&
GetVersionResponse::HasBitSetters::info_result(const GetVersionResponse* msg) {
  return *msg->info_result_;
}
const ::mavsdk::rpc::info::Version&
GetVersionResponse::HasBitSetters::version(const GetVersionResponse* msg) {
  return *msg->version_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetVersionResponse::kInfoResultFieldNumber;
const int GetVersionResponse::kVersionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetVersionResponse::GetVersionResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:mavsdk.rpc.info.GetVersionResponse)
}
GetVersionResponse::GetVersionResponse(const GetVersionResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_info_result()) {
    info_result_ = new ::mavsdk::rpc::info::InfoResult(*from.info_result_);
  } else {
    info_result_ = nullptr;
  }
  if (from.has_version()) {
    version_ = new ::mavsdk::rpc::info::Version(*from.version_);
  } else {
    version_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.info.GetVersionResponse)
}

void GetVersionResponse::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_GetVersionResponse_info_2finfo_2eproto.base);
  ::memset(&info_result_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&version_) -
      reinterpret_cast<char*>(&info_result_)) + sizeof(version_));
}

GetVersionResponse::~GetVersionResponse() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.info.GetVersionResponse)
  SharedDtor();
}

void GetVersionResponse::SharedDtor() {
  if (this != internal_default_instance()) delete info_result_;
  if (this != internal_default_instance()) delete version_;
}

void GetVersionResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetVersionResponse& GetVersionResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_GetVersionResponse_info_2finfo_2eproto.base);
  return *internal_default_instance();
}


void GetVersionResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.info.GetVersionResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && info_result_ != nullptr) {
    delete info_result_;
  }
  info_result_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && version_ != nullptr) {
    delete version_;
  }
  version_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* GetVersionResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<GetVersionResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .mavsdk.rpc.info.InfoResult info_result = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::mavsdk::rpc::info::InfoResult::_InternalParse;
        object = msg->mutable_info_result();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .mavsdk.rpc.info.Version version = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::mavsdk::rpc::info::Version::_InternalParse;
        object = msg->mutable_version();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool GetVersionResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mavsdk.rpc.info.GetVersionResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .mavsdk.rpc.info.InfoResult info_result = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_info_result()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .mavsdk.rpc.info.Version version = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_version()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mavsdk.rpc.info.GetVersionResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mavsdk.rpc.info.GetVersionResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void GetVersionResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mavsdk.rpc.info.GetVersionResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .mavsdk.rpc.info.InfoResult info_result = 1;
  if (this->has_info_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::info_result(this), output);
  }

  // .mavsdk.rpc.info.Version version = 2;
  if (this->has_version()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::version(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:mavsdk.rpc.info.GetVersionResponse)
}

::google::protobuf::uint8* GetVersionResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.info.GetVersionResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .mavsdk.rpc.info.InfoResult info_result = 1;
  if (this->has_info_result()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::info_result(this), target);
  }

  // .mavsdk.rpc.info.Version version = 2;
  if (this->has_version()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::version(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.info.GetVersionResponse)
  return target;
}

size_t GetVersionResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.info.GetVersionResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .mavsdk.rpc.info.InfoResult info_result = 1;
  if (this->has_info_result()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *info_result_);
  }

  // .mavsdk.rpc.info.Version version = 2;
  if (this->has_version()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *version_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetVersionResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mavsdk.rpc.info.GetVersionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetVersionResponse* source =
      ::google::protobuf::DynamicCastToGenerated<GetVersionResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mavsdk.rpc.info.GetVersionResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mavsdk.rpc.info.GetVersionResponse)
    MergeFrom(*source);
  }
}

void GetVersionResponse::MergeFrom(const GetVersionResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.info.GetVersionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_info_result()) {
    mutable_info_result()->::mavsdk::rpc::info::InfoResult::MergeFrom(from.info_result());
  }
  if (from.has_version()) {
    mutable_version()->::mavsdk::rpc::info::Version::MergeFrom(from.version());
  }
}

void GetVersionResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mavsdk.rpc.info.GetVersionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetVersionResponse::CopyFrom(const GetVersionResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.info.GetVersionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetVersionResponse::IsInitialized() const {
  return true;
}

void GetVersionResponse::Swap(GetVersionResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetVersionResponse::InternalSwap(GetVersionResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(info_result_, other->info_result_);
  swap(version_, other->version_);
}

::google::protobuf::Metadata GetVersionResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_info_2finfo_2eproto);
  return ::file_level_metadata_info_2finfo_2eproto[kIndexInFileMessages];
}


// ===================================================================

void InfoResult::InitAsDefaultInstance() {
}
class InfoResult::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int InfoResult::kResultFieldNumber;
const int InfoResult::kResultStrFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

InfoResult::InfoResult()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:mavsdk.rpc.info.InfoResult)
}
InfoResult::InfoResult(const InfoResult& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  result_str_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.result_str().size() > 0) {
    result_str_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.result_str_);
  }
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:mavsdk.rpc.info.InfoResult)
}

void InfoResult::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_InfoResult_info_2finfo_2eproto.base);
  result_str_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  result_ = 0;
}

InfoResult::~InfoResult() {
  // @@protoc_insertion_point(destructor:mavsdk.rpc.info.InfoResult)
  SharedDtor();
}

void InfoResult::SharedDtor() {
  result_str_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void InfoResult::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const InfoResult& InfoResult::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_InfoResult_info_2finfo_2eproto.base);
  return *internal_default_instance();
}


void InfoResult::Clear() {
// @@protoc_insertion_point(message_clear_start:mavsdk.rpc.info.InfoResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_str_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  result_ = 0;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* InfoResult::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<InfoResult*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .mavsdk.rpc.info.InfoResult.Result result = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
        msg->set_result(static_cast<::mavsdk::rpc::info::InfoResult_Result>(val));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // string result_str = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("mavsdk.rpc.info.InfoResult.result_str");
        object = msg->mutable_result_str();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool InfoResult::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mavsdk.rpc.info.InfoResult)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .mavsdk.rpc.info.InfoResult.Result result = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_result(static_cast< ::mavsdk::rpc::info::InfoResult_Result >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string result_str = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_result_str()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->result_str().data(), static_cast<int>(this->result_str().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "mavsdk.rpc.info.InfoResult.result_str"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mavsdk.rpc.info.InfoResult)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mavsdk.rpc.info.InfoResult)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void InfoResult::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mavsdk.rpc.info.InfoResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .mavsdk.rpc.info.InfoResult.Result result = 1;
  if (this->result() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->result(), output);
  }

  // string result_str = 2;
  if (this->result_str().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->result_str().data(), static_cast<int>(this->result_str().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "mavsdk.rpc.info.InfoResult.result_str");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->result_str(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:mavsdk.rpc.info.InfoResult)
}

::google::protobuf::uint8* InfoResult::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:mavsdk.rpc.info.InfoResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .mavsdk.rpc.info.InfoResult.Result result = 1;
  if (this->result() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->result(), target);
  }

  // string result_str = 2;
  if (this->result_str().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->result_str().data(), static_cast<int>(this->result_str().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "mavsdk.rpc.info.InfoResult.result_str");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->result_str(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mavsdk.rpc.info.InfoResult)
  return target;
}

size_t InfoResult::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mavsdk.rpc.info.InfoResult)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string result_str = 2;
  if (this->result_str().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->result_str());
  }

  // .mavsdk.rpc.info.InfoResult.Result result = 1;
  if (this->result() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->result());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void InfoResult::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mavsdk.rpc.info.InfoResult)
  GOOGLE_DCHECK_NE(&from, this);
  const InfoResult* source =
      ::google::protobuf::DynamicCastToGenerated<InfoResult>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mavsdk.rpc.info.InfoResult)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mavsdk.rpc.info.InfoResult)
    MergeFrom(*source);
  }
}

void InfoResult::MergeFrom(const InfoResult& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mavsdk.rpc.info.InfoResult)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.result_str().size() > 0) {

    result_str_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.result_str_);
  }
  if (from.result() != 0) {
    set_result(from.result());
  }
}

void InfoResult::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mavsdk.rpc.info.InfoResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InfoResult::CopyFrom(const InfoResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mavsdk.rpc.info.InfoResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InfoResult::IsInitialized() const {
  return true;
}

void InfoResult::Swap(InfoResult* other) {
  if (other == this) return;
  InternalSwap(other);
}
void InfoResult::InternalSwap(InfoResult* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  result_str_.Swap(&other->result_str_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(result_, other->result_);
}

::google::protobuf::Metadata InfoResult::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_info_2finfo_2eproto);
  return ::file_level_metadata_info_2finfo_2eproto[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace info
}  // namespace rpc
}  // namespace mavsdk
namespace google {
namespace protobuf {
template<> PROTOBUF_NOINLINE ::mavsdk::rpc::info::Version* Arena::CreateMaybeMessage< ::mavsdk::rpc::info::Version >(Arena* arena) {
  return Arena::CreateInternal< ::mavsdk::rpc::info::Version >(arena);
}
template<> PROTOBUF_NOINLINE ::mavsdk::rpc::info::GetVersionRequest* Arena::CreateMaybeMessage< ::mavsdk::rpc::info::GetVersionRequest >(Arena* arena) {
  return Arena::CreateInternal< ::mavsdk::rpc::info::GetVersionRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::mavsdk::rpc::info::GetVersionResponse* Arena::CreateMaybeMessage< ::mavsdk::rpc::info::GetVersionResponse >(Arena* arena) {
  return Arena::CreateInternal< ::mavsdk::rpc::info::GetVersionResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::mavsdk::rpc::info::InfoResult* Arena::CreateMaybeMessage< ::mavsdk::rpc::info::InfoResult >(Arena* arena) {
  return Arena::CreateInternal< ::mavsdk::rpc::info::InfoResult >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
